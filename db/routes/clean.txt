	get 'home/hello' => 'home#hello'
                                                  destroy], path: "listings/categories"
                                              destroy], path: "listings/categories"
                                           constraints: { view: /moderate/ }
                                       which: /organization/
                                  confirmations:      'api_v2/confirmations',
                                  constraints: { view: /moderate/ }
                                  omniauth_callbacks: 'api_v2/omniauth_callbacks',
                                  passwords:          'api_v2/passwords'
                                  registrations:      'api_v2/registrations',
                                  sessions:           'api_v2/sessions',
                                 passwords: 'spree/admin/user_passwords' },
                               confirmations: 'spree/user_confirmations' },
                               passwords: 'spree/user_passwords',
                               registrations: 'spree/user_registrations',
                              constraints: { timeframe: /latest/ }
                            constraints: { view: /comments|moderate|admin/ }
                        constraints: { format: /xml/ }
                     constraints: { format: /xml/, sitemap: /sitemap-.+/ }
               controllers: { sessions: 'spree/admin/user_sessions',
              constraints: { format: /json|js/ }
              resources :configs, param: :version, path: 'configs/:environment', only: [] do
             controllers: { sessions: 'spree/user_sessions',
            activity/:filter
            controller: 'versions/downloads',
            delete "action/:id" => "watched_words#clear_all"
            get "/:tag_id/l/#{filter}" => "tags#show_#{filter}", as: "tag_category_show_#{filter}"
            get "/:username/:slug", to: "articles#show_by_slug", as: :slug
            get "/latest", to: "articles#index", defaults: { sort: "desc" }
            get "/none/:tag_id/l/#{filter}" => "tags#show_#{filter}", as: "tag_category_none_show_#{filter}", defaults: { no_subcategories: true }
            get "action/:id" => "watched_words#index"
            get "action/:id/download" => "watched_words#download"
            get "me(/:status)", to: "articles#me", as: :me, constraints: { status: /published|unpublished|all/ }
            get :account_create,       to: redirect("/admin/paypal_preferences/account_create")
            get :index,                to: redirect("/admin/paypal_preferences")
            get :permissions_verified, to: redirect("/admin/paypal_preferences/permissions_verified")
            manage/categories
            manage/email
            manage/interaction
            manage/logs
            manage/members
            manage/membership
            manage/profile
            manage/tags
            messages/archive
            messages/inbox
            resources :configs, param: :version, path: 'configs/:environment', only: [:index, :show] do
          controller: 'clearance/passwords',
          get "#{controller_name}/#{action_name}(/:id)",
          get "#{prefix}/outcome_group_links", action: :link_index, as: "#{context}_outcome_group_links"
          get "#{prefix}/outcome_groups", action: :index, as: "#{context}_outcome_groups"
          get "/award/:badge_id" => "badges#award"
          get "/badge_achievements/award_badges", to: "badge_achievements#award"
          get "/incoming/:id" => "email#incoming"
          get "/incoming/:id/raw" => "email#raw_email"
          get "/incoming_from_bounced/:id" => "email#incoming_from_bounced"
          get "/l/#{filter}" => "tags#show_#{filter}", as: "tag_show_#{filter}"
          get "/onboarding", to: "tags#onboarding"
          get "category/:id" => "site_settings#index"
          get "getting_started_guide",                        to: redirect("/admin/getting_started_guide")
          get "getting_started_guide/cover_photo",            to: redirect("/admin/getting_started_guide/cover_photo")
          get "getting_started_guide/filter",                 to: redirect("/admin/getting_started_guide/filter")
          get "getting_started_guide/invitation",             to: redirect("/admin/getting_started_guide/invitation")
          get "getting_started_guide/listing",                to: redirect("/admin/getting_started_guide/listing")
          get "getting_started_guide/paypal",                 to: redirect("/admin/getting_started_guide/paypal")
          get "getting_started_guide/slogan_and_description", to: redirect("/admin/getting_started_guide/slogan_and_description")
          get "list/:query" => "users#index"
          get "me(/:status)", to: "articles#me", as: :me, constraints: { status: /published|unpublished|all/ }
          get '/:tag_id' => 'tags#show', as: 'tag_category_show'
          get '/none/:tag_id' => 'tags#show', as: 'tag_category_none_show', defaults: { no_subcategories: true }
          get '/signups' => 'dashboards#signups', :as => :signups
          get 'custom/new' => 'groups#new', constraints: StaffConstraint.new
          get 'days/:id/:metric_id' => 'days#show', :as => :day
          get 'profile_image/:screen_name' => 'twitter_example#profile_image'
          get 'usage/data/:metric_id' => 'usage#index_data', :as => :usage_data
          get 'usage/hours' => 'usage#hours', :as => :hours
          get 'usage/top_applications' => 'usage#top_applications', :as => :top_applications
          get 'web_hook_events/:id' => 'web_hooks#list_events', as: :web_hook_events
          get 'web_hooks/:id/events' => 'web_hooks#list_events'
          get 'web_hooks/:id/events/bulk' => 'web_hooks#bulk_events'
          get :edit_details,       to: redirect("/admin/details/edit")
          get :edit_look_and_feel, to: redirect("/admin/look_and_feel/edit")
          get :getting_started, to: redirect('/admin/getting_started_guide')
          get :menu_links, to: redirect("/admin/topbar/edit")
          get :settings,       to: redirect("/admin/settings")
          get :topbar, to: redirect("/admin/topbar/edit")
          match '/', via: :any, to: redirect { System::UrlHelpers.system_url_helpers.edit_provider_admin_user_personal_details_path }
          number: /#{Gem::Version::VERSION_PATTERN}(?=\.json\z)|#{Gem::Version::VERSION_PATTERN}(?=\.yaml\z)|#{Gem::Version::VERSION_PATTERN}/
          passwords: 'spree/admin/user_passwords'
          post "#{controller_name}/#{action_name}(/:id)",
          post "/award/:badge_id" => "badges#mass_award"
          post "/badge_achievements/award_badges", to: "badge_achievements#award_badges"
          post "/onboarding", to: "reactions#onboarding"
          post "/update_or_create", to: "github_repos#update_or_create"
          post 'web_hooks/:id/ping' => 'web_hooks#ping'
          post 'web_hooks/:web_hook_id/events/:event_id/redeliver' => 'web_hooks#redeliver_event'
          resources :api_docs, only: %i[index new edit update create], controller: '/admin/api_docs/service_api_docs' do
          resources :configs, path: 'configs/:environment', only: [:index]
          resources :sections, controller: 'landing_page_versions/sections'
          sessions: 'spree/admin/user_sessions',
        "#{root_path}/confirm-admin/:token" => "users#confirm_admin",
        # /master/api/provider
        :constraints => {:path => /.*/}
        :constraints => {:rev => /[a-z0-9\.\-_]+/, :path => /.*/}
        RailsAdmin::Config::Actions.all(:member).each { |action| match "/#{action.route_fragment}", action: action.action_name, as: action.action_name, via: action.http_methods }
        cancel: "giveup", edit: "edit/profile"
        confirmations: 'spree/user_confirmations'
        constraints(id: /((?!\.json\Z)[^\/])+/) do
        constraints: { token: /[0-9a-f]+/ }
        content_prefix = "#{context.pluralize}/:#{context}_id"
        context_prefix = "#{context.pluralize}/:#{context}_id"
        delete "#{content_prefix}/usage_rights", action: :remove_usage_rights
        delete "#{context.pluralize}/:#{context}_id/assignments/:assignment_id/submissions/:user_id/read", action: :mark_submission_unread, as: "#{context}_submission_mark_unread"
        delete "#{context.pluralize}/:#{context}_id/discussion_topics/:topic_id", controller: :discussion_topics, action: :destroy
        delete "#{context.pluralize}/:#{context}_id/discussion_topics/:topic_id/entries/:entry_id/read", action: :mark_entry_unread, as: "#{context}_discussion_topic_discussion_entry_mark_unread"
        delete "#{context.pluralize}/:#{context}_id/discussion_topics/:topic_id/entries/:id", controller: :discussion_entries, action: :destroy, as: "#{context}_discussion_delete_reply"
        delete "#{context.pluralize}/:#{context}_id/discussion_topics/:topic_id/read", action: :mark_topic_unread, as: "#{context}_discussion_topic_mark_unread"
        delete "#{context.pluralize}/:#{context}_id/discussion_topics/:topic_id/read_all", action: :mark_all_unread, as: "#{context}_discussion_topic_mark_all_unread"
        delete "#{context.pluralize}/:#{context}_id/discussion_topics/:topic_id/subscribed", action: :unsubscribe_topic, as: "#{context}_discussion_topic_unsubscribe"
        delete "#{context}s/:#{context}_id/external_feeds/:external_feed_id", action: :destroy, as: "#{context}_external_feeds_delete"
        delete "#{context}s/:#{context}_id/external_tools/:external_tool_id", action: :destroy, as: "#{context}_external_tools_delete"
        delete "#{context}s/:#{context}_id/tool_proxies/:tool_proxy_id", action: :destroy,
        delete "#{context}s/:#{context}_id/tool_proxies/:tool_proxy_id/update", action: :dismiss_update,
        delete "#{prefix}/flags/:feature", action: :delete
        delete "#{prefix}/outcome_groups/:id", action: :destroy
        delete "#{prefix}/outcome_groups/:id/outcomes/:outcome_id", action: :unlink
        delete "groups/:group_id" => "users#remove_group", constraints: AdminConstraint.new
        delete '/' => 'tags#destroy'
        delete '/synonyms/:synonym_id' => 'tags#destroy_synonym'
        delete 'email_templates/(:id)' => 'email_templates#revert', constraints: { id: /[0-9a-z_.]+/ }
        delete 'site_texts/:id'      => 'site_texts#revert', constraints: { id: /[\w.\-\+\%\&]+/i }
        delete 'site_texts/:id.json' => 'site_texts#revert', constraints: { id: /[\w.\-\+\%\&]+/i }
        delete 'users/:user_id/observees/:observee_id', action: :destroy
        delete 'users/:user_id/observer_alert_thresholds/:observer_alert_threshold_id', action: :destroy
        format: /json|yaml/ do
        format: /marshal|json/,
        get    'users/:user_id/observees', action: :index, as: 'user_observees'
        get    'users/:user_id/observees/:observee_id', action: :show, as: 'user_observee'
        get    'users/:user_id/observers', action: :observers, as: 'user_observers'
        get    'users/:user_id/observers/:observer_id', action: :show_observer, as: 'user_observer'
        get  "#{prefix}/apps",                      action: :index,   as: "#{context}_app_center_apps"
        get  "#{prefix}/apps/:app_id/reviews",      action: :reviews, as: "#{context}_app_center_app_reviews"
        get  "#{prefix}/apps/:app_id/reviews/self", action: :review,  as: "#{context}_app_center_app_review"
        get "#{content_prefix}/content_licenses", action: :licenses
        get "#{context.pluralize}/:#{context}_id/assignments/:assignment_id/submission_summary", action: :submission_summary, as: "#{path_prefix}_assignment_submission_summary"
        get "#{context.pluralize}/:#{context}_id/assignments/:assignment_id/submissions", action: :index, as: "#{path_prefix}_assignment_submissions"
        get "#{context.pluralize}/:#{context}_id/assignments/:assignment_id/submissions/:user_id", action: :show, as: "#{path_prefix}_assignment_submission"
        get "#{context.pluralize}/:#{context}_id/content_migrations", action: :index, as: "#{context}_content_migration_list"
        get "#{context.pluralize}/:#{context}_id/content_migrations/:content_migration_id/migration_issues", action: :index, as: "#{context}_content_migration_migration_issue_list"
        get "#{context.pluralize}/:#{context}_id/content_migrations/:content_migration_id/migration_issues/:id", action: :show, as: "#{context}_content_migration_migration_issue"
        get "#{context.pluralize}/:#{context}_id/content_migrations/:id", action: :show, as: "#{context}_content_migration"
        get "#{context.pluralize}/:#{context}_id/content_migrations/:id/selective_data", action: :content_list, as: "#{context}_content_migration_selective_data"
        get "#{context.pluralize}/:#{context}_id/content_migrations/migrators", action: :available_migrators, as: "#{context}_content_migration_migrators_list"
        get "#{context.pluralize}/:#{context}_id/csp_settings", :action => :get_csp_settings
        get "#{context.pluralize}/:#{context}_id/discussion_topics/:topic_id", action: :show, as: "#{context}_discussion_topic"
        get "#{context.pluralize}/:#{context}_id/discussion_topics/:topic_id/entries", action: :entries, as: "#{context}_discussion_entries"
        get "#{context.pluralize}/:#{context}_id/discussion_topics/:topic_id/entries/:entry_id/replies", action: :replies, as: "#{context}_discussion_replies"
        get "#{context.pluralize}/:#{context}_id/discussion_topics/:topic_id/entry_list", action: :entry_list, as: "#{context}_discussion_topic_entry_list"
        get "#{context.pluralize}/:#{context}_id/discussion_topics/:topic_id/view", action: :view, as: "#{context}_discussion_topic_view"
        get "#{context.pluralize}/:#{context}_id/students/submissions", controller: :submissions_api, action: :for_students, as: "#{path_prefix}_student_submissions"
        get "#{context}s/:#{context}_id/developer_keys/:developer_key_id/tool_configuration", action: :show, as: "#{context}_show_tool_configuration"
        get "#{context}s/:#{context}_id/external_feeds", action: :index, as: "#{context}_external_feeds"
        get "#{context}s/:#{context}_id/external_tools", action: :index, as: "#{context}_external_tools"
        get "#{context}s/:#{context}_id/external_tools/:external_tool_id", action: :show, as: "#{context}_external_tool_show"
        get "#{context}s/:#{context}_id/external_tools/sessionless_launch", action: :generate_sessionless_launch, as: "#{context}_external_tool_sessionless_launch"
        get "#{context}s/:#{context}_id/files/:id", action: :api_show, as: "#{context}_attachment"
        get "#{context}s/:#{context}_id/files/quota", action: :api_quota
        get "#{context}s/:#{context}_id/lti_apps", action: :index, as: "#{context}_app_definitions"
        get "#{context}s/:#{context}_id/lti_apps/launch_definitions", action: :launch_definitions, as: "#{context}_launch_definitions"
        get "#{context}s/:#{context}_id/outcome_imports/:id", action: :show
        get "#{context}s/:#{context}_id/tool_proxies/:tool_proxy_id/recreate_subscriptions", action: :recreate_subscriptions,
        get "#{prefix}/:id", action: :show
        get "#{prefix}/enabled", action: :enabled_features, as: "#{context}_enabled_features"
        get "#{prefix}/flags/:feature", action: :show
        get "#{prefix}/outcome_groups/:id", action: :show, as: "#{context}_outcome_group"
        get "#{prefix}/outcome_groups/:id/available_outcomes", action: :available_outcomes, as: "#{context}_outcome_group_available_outcomes"
        get "#{prefix}/outcome_groups/:id/outcomes", action: :outcomes, as: "#{context}_outcome_group_outcomes"
        get "#{prefix}/outcome_groups/:id/subgroups", action: :subgroups, as: "#{context}_outcome_group_subgroups"
        get "#{prefix}/outcome_groups/account_chain", action: :account_chain, as: "#{context}_account_chain"
        get "#{prefix}/root_outcome_group", action: :redirect, as: "#{context}_redirect"
        get "/#{prefix}/feature_flags/:feature", action: :show
        get "/adjustments/finalize", to: "orders#finalize_adjustments"
        get "/adjustments/unfinalize", to: "orders#unfinalize_adjustments"
        get "/analytics/historical", to: "analytics#historical"
        get "/analytics/past_day", to: "analytics#past_day"
        get "/analytics/referrers", to: "analytics#referrers"
        get "/analytics/totals", to: "analytics#totals"
        get "/auth/#{RedhatCustomerPortalSupport::RH_CUSTOMER_PORTAL_SYSTEM_NAME}/callback" => 'redhat/auth#show'
        get "/auth/#{ServiceDiscovery::AuthenticationProviderSupport::SERVICE_DISCOVERY_SYSTEM_NAME}/callback" => 'service_discovery/auth#show'
        get "/bulk_show", to: "follows#bulk_show"
        get "/l/#{filter}" => "list#category_#{filter}", as: "category_#{filter}"
        get "/l/top/#{period}" => "list#category_top_#{period}", as: "category_top_#{period}"
        get "/listings/category/:category", to: "listings#index", as: :listings_category
        get "/none/l/#{filter}" => "list#category_none_#{filter}", as: "category_none_#{filter}"
        get "/none/l/top/#{period}" => "list#category_none_top_#{period}", as: "category_none_top_#{period}"
        get "/onboarding", to: "tags#onboarding"
        get "/subscribed", action: "subscribed"
        get ":group_name/archive.json" => "list#private_messages_group_archive", as: "topics_private_messages_group_archive"
        get "themes/:id/export" => "themes#export"
        get '(/page-:page)', action: :pending, as: :pending_moderation
        get '/' => 'services#index', :as => :apiconfig_root, :namespace => 'api/', :path_prefix => 'admin/apiconfig'
        get '/' => 'tags#show', as: 'tag_show'
        get '/' => 'tags#tag_feed'
        get '/*file_path', format: false, :action => 'download'
        get '/activity(/page-:page)', action: :activity, as: :moderation_activity
        get '/auth/:system_name/callback/' => 'auth#show', constraints: ParameterConstraint.new(:domain)
        get '/auth/:system_name/callback/' => 'auth#show_self', constraints: ParameterConstraint.new(:self_domain)
        get '/auth/invitations/:invitation_token/:system_name/callback' => 'auth#show'
        get '/auth/invitations/auth0/:system_name/callback' => 'auth#show'
        get '/authorization_failure', to: 'user_sessions#authorization_failure', as: :unauthorized
        get '/callback/:system_name', action: :callback, controller: :authentication_provider_flow_testing, as: :flow_testing_callback
        get '/category/:category_id', action: :category, as: :categories
        get '/dependencies', to: 'dependencies#show', constraints: { format: /json|html/ }
        get '/download', to: "promotion_code_batches#download", defaults: { format: "csv" }
        get '/filter/search' => 'tag_groups#search'
        get '/history(/page-:page)', action: :history, as: :moderation_history
        get '/info' => 'tags#info'
        get '/intersection/:tag_id/*additional_tag_ids' => 'tags#show', as: 'tag_intersection'
        get '/login', to: 'user_sessions#new', as: :login
        get '/notifications' => 'tags#notifications'
        get '/password/change', to: 'user_passwords#edit', as: :edit_password
        get '/password/recover', to: 'user_passwords#new', as: :recover_password
        get '/unread', action: :unread, as: :unread
        get '/users(/page-:page)', action: :users, as: :users_moderation
        get '/users/:id(/page-:page)', action: :user, as: :user_moderation
        get 'email_style/:field' => 'email_styles#show', constraints: { field: /html|css/ }
        get 'email_templates/(:id)'    => 'email_templates#show',   constraints: { id: /[0-9a-z_.]+/ }
        get 'facet/:id', action: :facet, as: :dashboard_facet
        get 'folder/:id' => 'images#media_folder', as: :media_folder
        get 'jobs/:id', action: :show
        get 'originality_report/:asset_string' => 'submissions#originality_report', as: :originality_report
        get 'owners/:handle/gems',
        get 'page/:page', action: :index
        get 'search_logs/term/' => 'search_logs#term'
        get 'select/:page_part_id' => 'attachments#select', as: :select
        get 'select_collection/:page_part_id' => 'attachments#select_collection', as: :select_collection
        get 'site_texts/:id'         => 'site_texts#show',   constraints: { id: /[\w.\-\+\%\&]+/i }
        get 'site_texts/:id.json'    => 'site_texts#show',   constraints: { id: /[\w.\-\+\%\&]+/i }
        get 'staff_action_logs/:id/diff' => 'staff_action_logs#diff'
        get 'themes/:id' => 'themes#index'
        get 'themes/:id/:target/:field_name/edit' => 'themes#index'
        get 'turnitin/:asset_string' => 'submissions#turnitin_report', as: :turnitin_report
        get 'users/:user_id/observer_alert_thresholds', action: :index
        get 'users/:user_id/observer_alert_thresholds/:observer_alert_threshold_id', action: :show
        get 'users/:user_id/observer_alerts/:student_id', action: :alerts_by_student, as: 'observer_alerts_by_student'
        get 'users/:user_id/observer_alerts/unread_count', action: :alerts_count
        get 'vericite/:asset_string' => 'submissions#vericite_report', as: :vericite_report
        match '/logout', to: 'user_sessions#destroy', as: :logout, via: Devise.sign_out_via
        mount Logster::Web => "/logs"
        mount Logster::Web => "/logs", constraints: AdminConstraint.new
        mount Sidekiq::Web => "/sidekiq"
        mount Sidekiq::Web => "/sidekiq", constraints: AdminConstraint.new(require_master: true)
        namespace :service, path: 'service/:service_id', as: :service do
        passwords: 'spree/user_passwords',
        patch "/bulk_update", to: "follows#bulk_update"
        patch 'preview/*path', to: 'preview#show', as: :preview_page
        post   'users/:user_id/observees', action: :create
        post "#{context.pluralize}/:#{context}_id/assignments/:assignment_id/submissions", action: :create, controller: :submissions
        post "#{context.pluralize}/:#{context}_id/assignments/:assignment_id/submissions/:user_id/files", action: :create_file
        post "#{context.pluralize}/:#{context}_id/assignments/:assignment_id/submissions/update_grades", action: :bulk_update
        post "#{context.pluralize}/:#{context}_id/content_migrations", action: :create, as: "#{context}_content_migration_create"
        post "#{context.pluralize}/:#{context}_id/content_migrations/:content_migration_id/migration_issues", action: :create, as: "#{context}_content_migration_migration_issue_create"
        post "#{context.pluralize}/:#{context}_id/discussion_topics", controller: :discussion_topics, action: :create
        post "#{context.pluralize}/:#{context}_id/discussion_topics/:topic_id/duplicate", action: :duplicate
        post "#{context.pluralize}/:#{context}_id/discussion_topics/:topic_id/entries", action: :add_entry, as: "#{context}_discussion_add_entry"
        post "#{context.pluralize}/:#{context}_id/discussion_topics/:topic_id/entries/:entry_id/rating",
        post "#{context.pluralize}/:#{context}_id/discussion_topics/:topic_id/entries/:entry_id/replies", action: :add_reply, as: "#{context}_discussion_add_reply"
        post "#{context.pluralize}/:#{context}_id/discussion_topics/reorder", controller: :discussion_topics, action: :reorder
        post "#{context.pluralize}/:#{context}_id/submissions/update_grades", action: :bulk_update
        post "#{context}s/:#{context}_id/create_tool_with_verification", action: :create_tool_with_verification, as: "#{context}_create_tool_with_verification"
        post "#{context}s/:#{context}_id/external_feeds", action: :create, as: "#{context}_external_feeds_create"
        post "#{context}s/:#{context}_id/external_tools", action: :create, as: "#{context}_external_tools_create"
        post "#{context}s/:#{context}_id/outcome_imports", action: :create
        post "#{prefix}/:conference_id/recording_ready", action: :recording_ready, as: "#{context}_conferences_recording_ready"
        post "#{prefix}/apps/:app_id/reviews/self", action: :add_review
        post "#{prefix}/outcome_groups/:id/batch", action: :batch, as: "#{context}_outcome_group_batch"
        post "#{prefix}/outcome_groups/:id/import", action: :import, as: "#{context}_outcome_group_import"
        post "#{prefix}/outcome_groups/:id/outcomes", action: :link
        post "#{prefix}/outcome_groups/:id/subgroups", action: :create
        post "/moderator_create", to: "comments#moderator_create"
        post "/update_or_create", to: "github_repos#update_or_create"
        post "saved_searches/:id/update", to: "saved_searches#update"
        post "starred_entries/delete", to: "starred_entries#destroy"
        post "subscriptions/:id/update", to: "subscriptions#update"
        post "unread_entries/delete", to: "unread_entries#destroy"
        post "updated_entries/delete", to: "updated_entries#destroy"
        post "watched_words/upload" => "watched_words#upload"
        post '/login', to: 'user_sessions#create', as: :create_new_session
        post '/password/recover', to: 'user_passwords#create', as: :reset_password
        post '/synonyms' => 'tags#create_synonyms'
        post 'insert/:page_part_id' => 'attachments#insert', as: :insert
        post 'insert_collection/:page_part_id' => 'attachments#insert_collection', as: :insert_collection
        post 'jobs/batch_update', action: :batch_update
        post 'turnitin/resubmit' => 'submissions#resubmit_to_turnitin', as: :resubmit_to_turnitin
        post 'users/:user_id/observer_alert_thresholds', action: :create
        post 'users/:user_id/observer_pairing_codes', action: :create
        post 'vericite/resubmit' => 'submissions#resubmit_to_vericite', as: :resubmit_to_vericite
        prefix = "#{context_prefix}/content_exports"
        prefix = "#{context}s/:#{context}_id"
        prefix = "#{context}s/:#{context}_id/app_center"
        prefix = "#{context}s/:#{context}_id/conferences"
        prefix = "#{context}s/:#{context}_id/features"
        prefix = (context == "global" ? context : "#{context}s/:#{context}_id")
        put    'users/:user_id/observees/:observee_id', action: :update
        put "#{content_prefix}/usage_rights", action: :set_usage_rights
        put "#{context.pluralize}/:#{context}_id/assignments/:assignment_id/submissions/:user_id", action: :update
        put "#{context.pluralize}/:#{context}_id/assignments/:assignment_id/submissions/:user_id/read", action: :mark_submission_read, as: "#{context}_submission_mark_read"
        put "#{context.pluralize}/:#{context}_id/content_migrations/:content_migration_id/migration_issues/:id", action: :update, as: "#{context}_content_migration_migration_issue_update"
        put "#{context.pluralize}/:#{context}_id/content_migrations/:id", action: :update, as: "#{context}_content_migration_update"
        put "#{context.pluralize}/:#{context}_id/csp_settings", :action => :set_csp_setting
        put "#{context.pluralize}/:#{context}_id/discussion_topics/:topic_id", controller: :discussion_topics, action: :update
        put "#{context.pluralize}/:#{context}_id/discussion_topics/:topic_id/entries/:entry_id/read", action: :mark_entry_read, as: "#{context}_discussion_topic_discussion_entry_mark_read"
        put "#{context.pluralize}/:#{context}_id/discussion_topics/:topic_id/entries/:id", controller: :discussion_entries, action: :update, as: "#{context}_discussion_update_reply"
        put "#{context.pluralize}/:#{context}_id/discussion_topics/:topic_id/read", action: :mark_topic_read, as: "#{context}_discussion_topic_mark_read"
        put "#{context.pluralize}/:#{context}_id/discussion_topics/:topic_id/read_all", action: :mark_all_read, as: "#{context}_discussion_topic_mark_all_read"
        put "#{context.pluralize}/:#{context}_id/discussion_topics/:topic_id/subscribed", action: :subscribe_topic, as: "#{context}_discussion_topic_subscribe"
        put "#{context}s/:#{context}_id/external_tools/:external_tool_id", action: :update, as: "#{context}_external_tools_update"
        put "#{context}s/:#{context}_id/tool_proxies/:tool_proxy_id", action: :update,
        put "#{context}s/:#{context}_id/tool_proxies/:tool_proxy_id/update", action: :accept_update,
        put "#{prefix}/:id/fail", action: :fail
        put "#{prefix}/flags/:feature", action: :update
        put "#{prefix}/outcome_groups/:id", action: :update
        put "#{prefix}/outcome_groups/:id/outcomes/:outcome_id", action: :link, as: "#{context}_outcome_link"
        put '/' => 'tags#update'
        put '/notifications' => 'tags#update_notifications'
        put '/password/change', to: 'user_passwords#update', as: :update_password
        put 'email_templates/(:id)'    => 'email_templates#update', constraints: { id: /[0-9a-z_.]+/ }
        put 'folder/:id' => 'images#add_to_media_folder', as: :add_to_media_folder
        put 'site_texts/:id'         => 'site_texts#update', constraints: { id: /[\w.\-\+\%\&]+/i }
        put 'site_texts/:id.json'    => 'site_texts#update', constraints: { id: /[\w.\-\+\%\&]+/i }
        put 'users/:user_id/observer_alert_thresholds/:observer_alert_threshold_id', action: :update
        put 'users/:user_id/observer_alerts/:observer_alert_id/:workflow_state', action: :update
        registrations: 'spree/user_registrations',
        resource :attachment, controller: 'taxons/attachment', only: [:destroy]
        resource :conference, path: "/", except: [:new, :create] do
        resources :events, controller: 'quizzes/quiz_submission_events', path: "log#{full_path_glob}"
        resources :memberships, path: "groups/:group_id/memberships", name_prefix: "group_", controller: :group_memberships
        resources :proxy_configs, path: 'proxy_configs/:environment', only: %i[index], defaults: { format: :json }
        resources :sections, controller: 'landing_page_versions/sections'
        resources :users, path: "groups/:group_id/users", name_prefix: "group_", controller: :group_memberships, except: [:index, :create]
        root :to => 'provider/dashboards#show'
        scope path: '/c/*category_slug_path_with_id' do
        sessions: 'spree/user_sessions',
        which: /organization/
        { 'Content-Type' => 'application/json', 'Content-Length' => 2},
      "/#{locale}#{username}#{params[:path]}"
      "/#{params[:locale]}/listings/#{params[:listing_id]}/initiate?#{request.query_string}"
      "/404"
      # /admin/api/provider
      # FIXME: This route will be removed/replaced with CNVS-27101
      # TODO: routes for new/edit/copy buttons need to be revisited
      # get  "global/outcomes_import",            action: :index
      # get  "global/outcomes_import/:id",        action: :show
      # get  "global/outcomes_import/list/:guid", action: :list
      # https://developers.google.com/web/fundamentals/codelabs/debugging-service-workers/
      # in app/controllers/application_controller/tags.rb#tag that are used in
      # put  "global/outcomes_import/:id",        action: :cancel
      #meta / settings
      (!(Rails.env.development? && request.env['PATH_INFO'].starts_with?('/rails/') || request.env['PATH_INFO'].starts_with?("/#{Spina.config.backend_path}") || request.env['PATH_INFO'].starts_with?('/attachments/'))) && request.path.exclude?("rails/active_storage")
      :constraints => { timeframe: /latest/ }
      :constraints => { view: /comments|moderate|admin/ }
      :constraints => { view: /moderate/ }
      :constraints => {:path => /.*/}
      :constraints => {:rev => /[a-z0-9\.\-_]+/, :path => /.*/}
      RailsAdmin::Config::Actions.all(:collection).each { |action| match "/#{action.route_fragment}", action: action.action_name, as: action.action_name, via: action.http_methods }
      action_id: /[a-z\_]+/
      constraints id: Patterns::ROUTE_PATTERN, format: /json|yaml/ do
      constraints(tag_id: /[^\/]+?/, format: /json|rss/) do
      constraints: { id: Patterns::ROUTE_PATTERN, format: /html|atom/ } do
      controller: 'clearance/passwords',
      controller: 'clearance/sessions',
      controller: 'clearance/users',
      delete "#{prefix}/:id", action: :destroy
      delete "#{root_path}/:username" => "users#destroy", constraints: { username: RouteFormat.username }
      delete "#{root_path}/:username/preferences/email" => "users#destroy_email", constraints: { username: RouteFormat.username }
      delete "#{root_path}/:username/preferences/user_image" => "users#destroy_user_image", constraints: { username: RouteFormat.username }
      delete "/accounts/:account_id/data_services/:id", action: :destroy, as: :data_services_destroy
      delete "/accounts/:account_id/external_tools/:external_tool_id", action: :destroy, as: :account_external_tools_destroy
      delete "/accounts/:account_id/external_tools/rce_favorites/:id", action: :remove_rce_favorite, as: :account_external_tools_remove_rce_favorite
      delete "accounts/:account_id/csp_settings/domains", :action => :remove_domain
      delete "courses/:course_id/line_items/:id", action: :destroy, as: :lti_line_item_delete
      delete "courses/:course_id/microsoft_sync/group", action: :destroy
      delete "courses/:course_id/modules/:id", action: :destroy
      delete "courses/:course_id/modules/:module_id/items/:id", action: :destroy
      delete "courses/:course_id/modules/:module_id/items/:id/done", action: :mark_as_not_done, as: 'course_context_module_item_not_done'
      delete "courses/:course_id/pages/:url", action: :destroy
      delete "courses/:course_id/quizzes/:id", action: :destroy, as: 'course_quiz_destroy'
      delete "courses/:course_id/quizzes/:quiz_id/groups/:id", action: :destroy, as: 'course_quiz_group_destroy'
      delete "courses/:course_id/quizzes/:quiz_id/questions/:id", action: :destroy, as: 'course_quiz_question_destroy'
      delete "courses/:course_id/quizzes/:quiz_id/reports/:id", action: :abort, as: 'course_quiz_reports_abort'
      delete "groups/:group_id/followers/self", action: :unfollow
      delete "groups/:group_id/pages/:url", action: :destroy
      delete "outcomes/:id", action: :destroy
      delete "polls/:id", action: :destroy, as: 'poll_destroy'
      delete "polls/:poll_id/poll_choices/:id", action: :destroy, as: 'poll_choice_destroy'
      delete "polls/:poll_id/poll_sessions/:id", action: :destroy, as: 'poll_session_destroy'
      delete "subscriptions/:id", action: :destroy
      delete "users/:user_id/custom_data#{glob}", action: 'delete_data'
      delete "users/:user_id/followers/self", action: :unfollow
      delete "users/self/favorites/courses", action: :reset_course_favorites
      delete "users/self/favorites/courses/:id", action: :remove_favorite_course, as: :remove_favorite_course
      delete "users/self/favorites/groups", action: :reset_groups_favorites
      delete "users/self/favorites/groups/:id", action: :remove_favorite_groups, as: :remove_favorite_groups
      delete '/', to: 'recordings#delete', as: :delete_recording
      delete '/:collection_id/permission_template' => 'admin/permission_templates#destroy'
      delete '/unused' => 'tags#destroy_unused'
      delete 'accounts/:account_id/account_notifications/:id', action: :user_close_notification, as: 'user_account_notification'
      delete 'accounts/:account_id/admins/:user_id', action: :destroy
      delete 'accounts/:account_id/authentication_providers/:id', action: :destroy, as: 'account_delete_ap'
      delete 'accounts/:account_id/grading_period_sets/:id', action: :destroy
      delete 'accounts/:account_id/grading_periods/:id', action: :destroy, as: :account_grading_period_destroy
      delete 'accounts/:account_id/reports/:report/:id', action: :destroy
      delete 'accounts/:account_id/roles/:id', action: :remove_role
      delete 'accounts/:account_id/sub_accounts/:id', action: :destroy
      delete 'accounts/:account_id/terms/:id', action: :destroy
      delete 'accounts/:account_id/users/:user_id', action: :remove_user
      delete 'accounts/:account_id/users/:user_id/account_notifications/:id', action: :user_close_notification_deprecated
      delete 'alignments/:id' => 'outcomes#remove_alignment', as: :remove_alignment
      delete 'appointment_groups/:id', action: :destroy
      delete 'calendar_events/:id', action: :destroy
      delete 'conversations/:id', action: :destroy
      delete 'conversations/:id/delete_for_all', action: :delete_for_all
      delete 'courses/:course_id/assignments/:assignment_id/overrides/:id', action: :destroy
      delete 'courses/:course_id/assignments/:assignment_id/submissions/:submission_id/peer_reviews', action: :destroy
      delete 'courses/:course_id/assignments/:assignment_id/submissions/:user_id/comments/:id', action: :destroy
      delete 'courses/:course_id/assignments/:id', action: :destroy, controller: :assignments
      delete 'courses/:course_id/collaborations/:id', controller: :collaborations, action: :destroy
      delete 'courses/:course_id/enrollments/:id', action: :destroy, :as => "destroy_enrollment"
      delete 'courses/:course_id/grading_periods/:id', action: :destroy, as: :course_grading_period_destroy
      delete 'courses/:course_id/mastery_paths/rules/:id', action: 'destroy'
      delete 'courses/:course_id/rubric_associations/:id', action: :destroy
      delete 'courses/:course_id/rubric_associations/:rubric_association_id/rubric_assessments/:id', controller: :rubric_assessments, action: :destroy
      delete 'courses/:course_id/rubrics/:id', controller: :rubrics, action: :destroy
      delete 'courses/:id', action: :destroy
      delete 'developer_keys/:developer_key_id/tool_configuration', action: :destroy
      delete 'developer_keys/:id', action: :destroy
      delete 'files/:id', action: :destroy
      delete 'folders/:id', action: :api_destroy
      delete 'groups/:group_id/collaborations/:id', controller: :collaborations, action: :destroy
      delete 'peer_reviews/:id' => 'assignments#delete_peer_review', as: :delete_peer_review
      delete 'planner/overrides/:id', action: :destroy
      delete 'planner_notes/:id', action: :destroy
      delete 'sections/:id', action: :destroy
      delete 'sections/:id/crosslist', action: :uncrosslist
      delete 'sections/:section_id/assignments/:assignment_id/submissions/:submission_id/peer_reviews', action: :destroy
      delete 'shared_brand_configs/:id', action: :destroy
      delete 'users/:id', action: :destroy, as: 'destroy_user'
      delete 'users/:user_id/communication_channels/:id', action: :destroy
      delete 'users/:user_id/communication_channels/:type/:address', action: :destroy, constraints: { address: %r{[^/?]+} }
      delete 'users/:user_id/content_shares/:id', action: :destroy
      delete 'users/:user_id/logins/:id', action: :destroy
      delete 'users/self/activity_stream', action: 'ignore_all_stream_items'
      delete 'users/self/activity_stream/:id', action: 'ignore_stream_item'
      delete 'users/self/bookmarks/:id', action: :destroy
      delete 'users/self/communication_channels/push', action: :delete_push_token
      delete 'users/self/course_nicknames', action: :clear
      delete 'users/self/course_nicknames/:course_id', action: :delete
      delete 'users/self/todo/:asset_string/:purpose', action: :ignore_item, as: 'users_todo_ignore'
      get   "/details/edit"       => "community_customizations#edit_details",   as: :details_edit
      get   "/footer/edit"        => "communities/footer#edit",                 as: :footer_edit
      get   "/landing_page"         => "communities#landing_page",                  as: :landing_page
      get   "/look_and_feel/edit" => "communities#edit_look_and_feel",          as: :look_and_feel_edit
      get   "/new_layout"         => "communities#new_layout",                  as: :new_layout
      get   "/topbar/edit"        => "communities/topbar#edit",                 as: :topbar_edit
      get  "#{prefix}/tool_consumer_profile(/:tool_consumer_profile_id)", controller: 'lti/ims/tool_consumer_profile',
      get  "/paypal_preferences" => redirect("/%{locale}/admin/payment_preferences")
      get  "/paypal_preferences/account_create"       => "paypal_preferences#account_create"
      get  "/paypal_preferences/permissions_verified" => "paypal_preferences#permissions_verified"
      get  "global/outcomes_import/available",  action: :available
      get  "global/outcomes_import/migration_status/:migration_id", action: :migration_status
      get  'accounts/:account_id/enrollments/:id', action: :show, as: 'enrollment'
      get  'courses/:course_id/enrollments', action: :index, as: 'course_enrollments'
      get  'courses/:course_id/files', controller: :files, action: :api_index, as: 'course_files'
      get  'groups/:group_id/files', controller: :files, action: :api_index, as: 'group_files'
      get  'sections/:section_id/enrollments', action: :index, as: 'section_enrollments'
      get  'users/:user_id/courses', action: :user_index, as: 'user_courses'
      get  'users/:user_id/enrollments', action: :index, as: 'user_enrollments'
      get  'users/:user_id/files', controller: :files, action: :api_index, as: 'user_files'
      get "#{prefix}/jwt_token", controller: 'external_tools', action: :jwt_token
      get "#{root_path}/:username.json" => "users#show", constraints: { username: RouteFormat.username }, defaults: { format: :json }
      get "#{root_path}/:username/activity" => "users#show", constraints: { username: RouteFormat.username }
      get "#{root_path}/:username/activity.json" => "posts#user_posts_feed", format: :json, constraints: { username: RouteFormat.username }
      get "#{root_path}/:username/activity.rss" => "posts#user_posts_feed", format: :rss, constraints: { username: RouteFormat.username }
      get "#{root_path}/:username/activity/:filter" => "users#show", constraints: { username: RouteFormat.username }
      get "#{root_path}/:username/activity/topics.rss" => "list#user_topics_feed", format: :rss, constraints: { username: RouteFormat.username }
      get "#{root_path}/:username/badges" => "users#badges", constraints: { username: RouteFormat.username }
      get "#{root_path}/:username/bookmarks" => "users#bookmarks", constraints: { username: RouteFormat.username, format: /(json|ics)/ }
      get "#{root_path}/:username/card.json" => "users#show_card", format: :json, constraints: { username: RouteFormat.username }
      get "#{root_path}/:username/deleted-posts" => "users#show", constraints: { username: RouteFormat.username }
      get "#{root_path}/:username/emails" => "users#check_emails", constraints: { username: RouteFormat.username }
      get "#{root_path}/:username/flagged-posts" => "users#show", constraints: { username: RouteFormat.username }
      get "#{root_path}/:username/invited" => "users#invited", constraints: { username: RouteFormat.username }
      get "#{root_path}/:username/invited/:filter" => "users#invited", constraints: { username: RouteFormat.username }
      get "#{root_path}/:username/messages" => "user_actions#private_messages", constraints: { username: RouteFormat.username }
      get "#{root_path}/:username/messages/:filter" => "user_actions#private_messages", constraints: { username: RouteFormat.username }
      get "#{root_path}/:username/messages/group/:group_name" => "user_actions#private_messages", constraints: { username: RouteFormat.username, group_name: RouteFormat.username }
      get "#{root_path}/:username/messages/group/:group_name/archive" => "user_actions#private_messages", constraints: { username: RouteFormat.username, group_name: RouteFormat.username }
      get "#{root_path}/:username/messages/tags/:tag_id" => "user_actions#private_messages", constraints: StaffConstraint.new
      get "#{root_path}/:username/notifications" => "users#show", constraints: { username: RouteFormat.username }
      get "#{root_path}/:username/notifications/:filter" => "users#show", constraints: { username: RouteFormat.username }
      get "#{root_path}/:username/preferences" => "users#preferences", constraints: { username: RouteFormat.username }
      get "#{root_path}/:username/preferences/account" => "users#preferences", constraints: { username: RouteFormat.username }
      get "#{root_path}/:username/preferences/apps" => "users#preferences", constraints: { username: RouteFormat.username }
      get "#{root_path}/:username/preferences/badge_title" => "users#preferences", constraints: { username: RouteFormat.username }
      get "#{root_path}/:username/preferences/categories" => "users#preferences", constraints: { username: RouteFormat.username }
      get "#{root_path}/:username/preferences/email" => "users_email#index", constraints: { username: RouteFormat.username }
      get "#{root_path}/:username/preferences/emails" => "users#preferences", constraints: { username: RouteFormat.username }
      get "#{root_path}/:username/preferences/interface" => "users#preferences", constraints: { username: RouteFormat.username }
      get "#{root_path}/:username/preferences/notifications" => "users#preferences", constraints: { username: RouteFormat.username }
      get "#{root_path}/:username/preferences/profile" => "users#preferences", constraints: { username: RouteFormat.username }
      get "#{root_path}/:username/preferences/second-factor" => "users#preferences", constraints: { username: RouteFormat.username }
      get "#{root_path}/:username/preferences/second-factor-backup" => "users#preferences", constraints: { username: RouteFormat.username }
      get "#{root_path}/:username/preferences/security" => "users#preferences", constraints: { username: RouteFormat.username }
      get "#{root_path}/:username/preferences/tags" => "users#preferences", constraints: { username: RouteFormat.username }
      get "#{root_path}/:username/preferences/username" => "users#preferences", constraints: { username: RouteFormat.username }
      get "#{root_path}/:username/preferences/users" => "users#preferences", constraints: { username: RouteFormat.username }
      get "#{root_path}/:username/private-messages" => "user_actions#private_messages", constraints: { username: RouteFormat.username }
      get "#{root_path}/:username/private-messages/:filter" => "user_actions#private_messages", constraints: { username: RouteFormat.username }
      get "#{root_path}/:username/profile-hidden" => "users#profile_hidden"
      get "#{root_path}/:username/sso-email" => "users#check_sso_email", constraints: { username: RouteFormat.username }
      get "#{root_path}/:username/sso-payload" => "users#check_sso_payload", constraints: { username: RouteFormat.username }
      get "#{root_path}/:username/staff-info" => "users#staff_info", constraints: { username: RouteFormat.username }
      get "#{root_path}/:username/summary" => "users#show", constraints: { username: RouteFormat.username }
      get "#{root_path}/:username/summary" => "users#summary", constraints: { username: RouteFormat.username }
      get "#{root_path}/:username/topic-tracking-state" => "users#topic_tracking_state", constraints: { username: RouteFormat.username }
      get "#{root_path}/account-created/edit-email" => "users#account_created"
      get "#{root_path}/account-created/resent" => "users#account_created"
      get "#{root_path}/activate-account/:token" => "users#activate_account"
      get "#{root_path}/admin-login" => "users#admin_login"
      get "#{root_path}/by-external/:external_id" => "users#show", constraints: { external_id: /[^\/]+/ }
      get "#{root_path}/by-external/:external_provider/:external_id" => "users#show", constraints: { external_id: /[^\/]+/ }
      get "#{root_path}/confirm-email-token/:token" => "users#confirm_email_token", constraints: { format: 'json' }
      get "#{root_path}/confirm-new-email/:token" => "users_email#show_confirm_new_email"
      get "#{root_path}/confirm-old-email/:token" => "users_email#show_confirm_old_email"
      get "#{root_path}/search/users" => "users#search_users"
      get "/" => "list#category_default", as: "category_default"
      get "/", to: "overview#index"
      get "/accounts/:account_id", action: :show
      get "/accounts/:account_id/data_services", action: :index, as: :data_services_index
      get "/accounts/:account_id/data_services/:id", action: :show, as: :data_services_show
      get "/accounts/:account_id/event_types", action: :event_types_index, as: :data_services_event_types
      get "/accounts/:account_id/external_tools", action: :index, as: :account_external_tools_index
      get "/accounts/:account_id/external_tools/:external_tool_id", action: :show, as: :account_external_tools_show
      get "/all" => "list#category_default", as: "category_all", constraints: { format: 'html' }
      get "/analytics/historical", to: "analytics#historical"
      get "/analytics/past_day", to: "analytics#past_day"
      get "/analytics/referrers", to: "analytics#referrers"
      get "/analytics/totals", to: "analytics#totals"
      get "/auth/#{RedhatCustomerPortalSupport::RH_CUSTOMER_PORTAL_SYSTEM_NAME}/callback" => 'master/redhat/auth#show'
      get "/auth/#{ServiceDiscovery::AuthenticationProviderSupport::SERVICE_DISCOVERY_SYSTEM_NAME}/callback" => 'master/service_discovery/auth#show'
      get "/badge_achievements/award_badges", to: "badge_achievements#award"
      get "/badges/badge_achievements", to: redirect("/admin/badge_achievements")
      get "/badges/badge_achievements/award_badges", to: redirect("/admin/badge_achievements/award_badges")
      get "/courses/:course_id/external_tools/visible_course_nav_tools", action: :visible_course_nav_tools, as: :visible_course_nav_tools
      get "/listings/category/:category", to: "classified_listings#index", as: :classified_listings_category
      get "/logs" => "staff_action_logs#index"
      get "/mailchimp/:secret/unsubscribe", to: "mailchimp_unsubscribes#index", as: :mailchimp_unsubscribe_check
      get "/none" => "list#category_none_latest"
      get "/people/confirmation" => "confirmations#show", :as => :confirmation
      get "/people/sign_up" => redirect("/%{locale}/login")
      get "/pets/return_and_validate_allowed_extra_property" => "pets#return_and_validate_allowed_extra_property"
      get "/pets/return_and_validate_expected_array_response" => "pets#return_and_validate_expected_array_response"
      get "/pets/return_and_validate_expected_response" => "pets#return_and_validate_expected_response"
      get "/pets/return_and_validate_expected_response_with_null" => "pets#return_and_validate_expected_response_with_null"
      get "/pets/return_and_validate_expected_response_with_null_object" => "pets#return_and_validate_expected_response_with_null_object"
      get "/pets/return_and_validate_extra_property" => "pets#return_and_validate_extra_property"
      get "/pets/return_and_validate_missing_field" => "pets#return_and_validate_missing_field"
      get "/pets/return_and_validate_type_mismatch" => "pets#return_and_validate_type_mismatch"
      get "/pets/return_and_validate_unexpected_array_response" => "pets#return_and_validate_unexpected_array_response"
      get "/pets/returns_response_with_invalid_array" => "pets#returns_response_with_invalid_array"
      get "/pets/returns_response_with_valid_array" => "pets#returns_response_with_valid_array"
      get "/pets/sub_object_allowed_extra_property" => "pets#sub_object_allowed_extra_property"
      get "/pets/sub_object_invalid_extra_property" => "pets#sub_object_invalid_extra_property"
      get "/pets/undocumented_method" => "pets#undocumented_method"
      get "/qunit" => "qunit#index"
      get "/rails/mailers", to: "rails/mailers#index"
      get "/rails/mailers/*path", to: "rails/mailers#preview"
      get "/service-worker.js" => "static#service_worker_asset", format: :js
      get "/service-worker.js" => redirect(relative_url_root + service_worker_asset, status: 302), format: :js
      get "/signup" => "people#new", :as => :sign_up
      get "/wizard/qunit" => "wizard#qunit"
      get "accounts/:account_id/csp_log", action: :csp_log
      get "accounts/:account_id/outcome_proficiency", action: :show
      get "accounts/:account_id/scopes", action: :index
      get "accounts/:account_id/tabs", action: :index, as: 'account_tabs'
      get "assignments/:assignment_id/files/:file_id/originality_report", action: :show
      get "assignments/:assignment_id/submissions/:submission_id", action: :show
      get "assignments/:assignment_id/submissions/:submission_id/attachment/:attachment_id", action: :attachment, as: :lti_submission_attachment_download
      get "assignments/:assignment_id/submissions/:submission_id/history", action: :history
      get "assignments/:assignment_id/submissions/:submission_id/originality_report/:id", action: :show
      get "courses/:course_id/all_quizzes", action: :index, as: 'course_all_quizzes'
      get "courses/:course_id/assignments/:assignment_id/anonymous_provisional_grades/status",
      get "courses/:course_id/assignments/:assignment_id/gradeable_students", action: :gradeable_students, as: "course_assignment_gradeable_students"
      get "courses/:course_id/assignments/:assignment_id/provisional_grades/status",
      get "courses/:course_id/assignments/gradeable_students", controller: :submissions_api, action: :multiple_gradeable_students, as: "multiple_assignments_gradeable_students"
      get "courses/:course_id/content_list", action: :content_list, as: "course_content_list"
      get "courses/:course_id/front_page", action: :show_front_page
      get "courses/:course_id/gradebook_history/:date", action: :day_details, as: 'gradebook_history_for_day'
      get "courses/:course_id/gradebook_history/:date/graders/:grader_id/assignments/:assignment_id/submissions", action: :submissions, as: 'gradebook_history_submissions'
      get "courses/:course_id/gradebook_history/days", action: :days, as: 'gradebook_history'
      get "courses/:course_id/gradebook_history/feed", action: :feed, as: 'gradebook_history_feed'
      get "courses/:course_id/line_items", action: :index, as: :lti_line_item_index
      get "courses/:course_id/line_items/:id", action: :show, as: :lti_line_item_show
      get "courses/:course_id/line_items/:line_item_id/results", action: :index
      get "courses/:course_id/line_items/:line_item_id/results/:id", action: :show, as: :lti_result_show
      get "courses/:course_id/live_assessments", action: :index, as: "course_live_assessments"
      get "courses/:course_id/live_assessments/:assessment_id/results", action: :index, as: "course_live_assessment_results"
      get "courses/:course_id/microsoft_sync/group", action: :show
      get "courses/:course_id/module_item_redirect/:id", action: :redirect, as: 'course_context_module_item_redirect'
      get "courses/:course_id/module_item_sequence", action: :item_sequence
      get "courses/:course_id/modules", action: :index, as: 'course_context_modules'
      get "courses/:course_id/modules/:id", action: :show, as: 'course_context_module'
      get "courses/:course_id/modules/:module_id/items", action: :index, as: 'course_context_module_items'
      get "courses/:course_id/modules/:module_id/items/:id", action: :show, as: 'course_context_module_item'
      get "courses/:course_id/names_and_roles", controller: "lti/ims/names_and_roles", action: :course_index, as: :course_names_and_roles
      get "courses/:course_id/new_quizzes/assignment_overrides", action: :new_quizzes, as: 'course_new_quizzes_assignment_overrides'
      get "courses/:course_id/outcome_alignments", action: :outcome_alignments
      get "courses/:course_id/outcome_proficiency", action: :show
      get "courses/:course_id/pages", action: :index, as: 'course_wiki_pages'
      get "courses/:course_id/pages/:url", action: :show, as: 'course_wiki_page'
      get "courses/:course_id/pages/:url/revisions", action: :revisions, as: 'course_wiki_page_revisions'
      get "courses/:course_id/pages/:url/revisions/:revision_id", action: :show_revision
      get "courses/:course_id/pages/:url/revisions/latest", action: :show_revision
      get "courses/:course_id/progress/:id", action: :show, as: :lti_progress_show
      get "courses/:course_id/quizzes", action: :index, as: 'course_quizzes'
      get "courses/:course_id/quizzes/:id", action: :show, as: 'course_quiz'
      get "courses/:course_id/quizzes/:id/submission_users", action: :index, as: 'course_quiz_submission_users'
      get "courses/:course_id/quizzes/:quiz_id/groups/:id", action: :show, as: 'course_quiz_group'
      get "courses/:course_id/quizzes/:quiz_id/questions", action: :index, as: 'course_quiz_questions'
      get "courses/:course_id/quizzes/:quiz_id/questions/:id", action: :show, as: 'course_quiz_question'
      get "courses/:course_id/quizzes/:quiz_id/reports", action: :index, as: 'course_quiz_reports'
      get "courses/:course_id/quizzes/:quiz_id/reports/:id", action: :show, as: 'course_quiz_report'
      get "courses/:course_id/quizzes/:quiz_id/submissions/:id/events", action: :index, as: 'course_quiz_submission_events'
      get "courses/:course_id/quizzes/assignment_overrides", action: :index, as: 'course_quiz_assignment_overrides'
      get "courses/:course_id/tabs", action: :index, as: 'course_tabs'
      get "created-by/:username" => "list#topics_by", as: "topics_by", defaults: { format: :json }
      get "customize/colors" => "color_schemes#index", constraints: AdminConstraint.new
      get "customize/colors/:id" => "color_schemes#index", constraints: AdminConstraint.new
      get "customize/embedding" => "embedding#show", constraints: AdminConstraint.new
      get "customize/permalinks" => "permalinks#index", constraints: AdminConstraint.new
      get "customize/themes" => "themes#index", constraints: AdminConstraint.new
      get "dashboard/general" => "dashboard#general"
      get "dashboard/moderation" => "dashboard#moderation"
      get "dashboard/new-features" => "dashboard#new_features"
      get "dashboard/reports" => "dashboard#reports"
      get "dashboard/security" => "dashboard#security"
      get "features/environment", action: :environment
      get "getting_started_guide/cover_photo"            => "getting_started_guide#cover_photo",            as: :getting_started_guide_cover_photo
      get "getting_started_guide/filter"                 => "getting_started_guide#filter",                 as: :getting_started_guide_filter
      get "getting_started_guide/invitation"             => "getting_started_guide#invitation",             as: :getting_started_guide_invitation
      get "getting_started_guide/listing"                => "getting_started_guide#listing",                as: :getting_started_guide_listing
      get "getting_started_guide/payment"                => "getting_started_guide#payment",                as: :getting_started_guide_payment
      get "getting_started_guide/skip_payment"           => "getting_started_guide#skip_payment",           as: :getting_started_guide_skip_payment
      get "getting_started_guide/slogan_and_description" => "getting_started_guide#slogan_and_description", as: :getting_started_guide_slogan_and_description
      get "groups/:group_id/external_tools", action: :index, as: "group_external_tools"
      get "groups/:group_id/front_page", action: :show_front_page
      get "groups/:group_id/names_and_roles", controller: "lti/ims/names_and_roles", action: :group_index, as: :group_names_and_roles
      get "groups/:group_id/pages", action: :index, as: 'group_wiki_pages'
      get "groups/:group_id/pages/:url", action: :show, as: 'group_wiki_page'
      get "groups/:group_id/pages/:url/revisions", action: :revisions, as: 'group_wiki_page_revisions'
      get "groups/:group_id/pages/:url/revisions/:revision_id", action: :show_revision
      get "groups/:group_id/pages/:url/revisions/latest", action: :show_revision
      get "groups/:group_id/tabs", action: :index, as: 'group_tabs'
      get "groups/:group_name" => "list#group_topics", as: "group_topics", group_name: RouteFormat.username
      get "groups/:type" => "groups#show", constraints: AdminConstraint.new
      get "groups/:type/:id" => "groups#show", constraints: AdminConstraint.new
      get "outcomes/:id", action: :show, as: "outcome"
      get "poll_sessions/closed", action: :closed, as: 'poll_sessions_closed'
      get "poll_sessions/opened", action: :opened, as: 'poll_sessions_opened'
      get "polls/:id", action: :show, as: 'poll'
      get "polls/:poll_id/poll_choices", action: :index, as: 'poll_choices'
      get "polls/:poll_id/poll_choices/:id", action: :show, as: 'poll_choice'
      get "polls/:poll_id/poll_sessions", action: :index, as: 'poll_sessions'
      get "polls/:poll_id/poll_sessions/:id", action: :show, as: 'poll_session'
      get "polls/:poll_id/poll_sessions/:id/close", action: :close, as: 'poll_session_close'
      get "polls/:poll_id/poll_sessions/:id/open", action: :open, as: 'poll_session_publish'
      get "polls/:poll_id/poll_sessions/:poll_session_id/poll_submissions/:id", action: :show, as: 'poll_submission'
      get "private-messages-archive/:username" => "list#private_messages_archive", as: "topics_private_messages_archive", defaults: { format: :json }
      get "private-messages-sent/:username" => "list#private_messages_sent", as: "topics_private_messages_sent", defaults: { format: :json }
      get "private-messages-tags/:username/:tag_id.json" => "list#private_messages_tag", as: "topics_private_messages_tag", defaults: { format: :json }
      get "private-messages-unread/:username" => "list#private_messages_unread", as: "topics_private_messages_unread", defaults: { format: :json }
      get "private-messages/:username" => "list#private_messages", as: "topics_private_messages", defaults: { format: :json }
      get "progress/:id", action: :show, as: "progress"
      get "reports/:type" => "reports#show"
      get "reports/bulk" => "reports#bulk"
      get "revisions/:revision" => "posts#revisions", constraints: { revision: /\d+/ }
      get "revisions/latest" => "posts#latest_revision"
      get "security/jwks", action: :jwks, as: :jwks_show
      get "subscriptions/:id", action: :show
      get "support_helpers/crocodoc/shard", action: :shard
      get "support_helpers/crocodoc/submission", action: :submission
      get "support_helpers/due_date_cache/course", action: :course
      get "support_helpers/plagiarism_platform/add_service", action: :add_service
      get "support_helpers/plagiarism_platform/resubmit_for_assignment/:assignment_id", action: :resubmit_for_assignment
      get "support_helpers/turnitin/assignment", action: :assignment
      get "support_helpers/turnitin/error2305", action: :error2305
      get "support_helpers/turnitin/expired", action: :expired
      get "support_helpers/turnitin/md5", action: :md5
      get "support_helpers/turnitin/pending", action: :pending
      get "support_helpers/turnitin/refresh_lti_attachment", action: :lti_attachment
      get "support_helpers/turnitin/shard", action: :shard
      get "themes/:id/preview" => "themes#preview"
      get "tool_proxy/:tool_proxy_guid/#{prefix}/resource_link_id/:resource_link_id/tool_setting", controller: 'lti/ims/tool_setting', action: :show, as: "show_#{context}_resource_link_id_tool_setting"
      get "tool_proxy/:tool_proxy_guid/#{prefix}/tool_setting", controller: 'lti/ims/tool_setting', action: :show, as: "show_#{context}_tool_setting"
      get "top/#{period}" => "list#top_#{period}"
      get "top/#{period}.rss" => "list#top_#{period}_feed", format: :rss
      get "uploads/:site/test_:index/original/:tree:sha(.:extension)" => "uploads#show", constraints: { site: /\w+/, index: /\d+/, tree: /([a-z0-9]+\/)+/i, sha: /\h{40}/, extension: /[a-z0-9\._]+/i }
      get "users/:id.json" => 'users#show', defaults: { format: 'json' }
      get "users/:user_id/custom_data#{glob}", action: 'get_data'
      get "users/:user_id/tabs", action: :index, as: 'user_profile_tabs'
      get "users/self/favorites/courses", action: :list_favorite_courses, as: :list_favorite_courses
      get "users/self/favorites/groups", action: :list_favorite_groups, as: :list_favorite_groups
      get '*tag_id', to: redirect(relative_url_root + 'tag/%{tag_id}')
      get '/' => 'tags#index'
      get '/:collection_id/permission_template' => 'admin/permission_templates#show', as: :dashboard_collection_permission_template
      get '/:collection_id/permission_template/edit' => 'admin/permission_templates#edit', as: :edit_dashboard_collection_permission_template
      get '/applications/thanks', to: 'job_applications#thanks', on: :collection
      get '/authorization_failure', to: 'user_sessions#authorization_failure', as: :unauthorized
      get '/collections/facet/:id',   controller: 'my/collections', action: :facet, as: 'dashboard_collections_facet'
      get '/collections/page/:page',  controller: 'collections', action: :index
      get '/confirm', to: 'user_confirmations#show', as: :confirmation if Spree::Auth::Config[:confirmable]
      get '/filter/list' => 'tags#index'
      get '/filter/search' => 'tags#search'
      get '/login' => 'user_sessions#new', :as => :login
      get '/login', to: 'user_sessions#new', as: :login
      get '/logout' => 'user_sessions#destroy', :as => :logout
      get '/logs/watched_words', to: redirect(relative_url_root + 'admin/customize/watched_words'), constraints: AdminConstraint.new
      get '/logs/watched_words/*path', to: redirect(relative_url_root + 'admin/customize/watched_words/%{path}'), constraints: AdminConstraint.new
      get '/password/change', to: 'user_passwords#edit', as: :edit_password
      get '/password/recover' => 'user_passwords#new', :as => :recover_password
      get '/password/recover', to: 'user_passwords#new', as: :recover_password
      get '/permission_template/new' => 'admin/permission_templates#new', as: :new_dashboard_collection_permission_template
      get '/personal_messages/:username' => 'tags#personal_messages'
      get '/profile', to: 'users#profile'
      get '/quiz_submissions/:quiz_submission_id/questions', action: :index, as: 'quiz_submission_questions'
      get '/quiz_submissions/:quiz_submission_id/questions/:id', action: :show, as: 'quiz_submission_question'
      get '/quiz_submissions/:quiz_submission_id/questions/:id/formatted_answer', action: :formatted_answer, as: 'quiz_submission_question_formatted_answer'
      get '/sign_up' => 'clearance/users#new', as: 'sign_up'
      get '/signup', to: 'user_registrations#new', as: :signup
      get '/unread', action: :unread, as: :unread
      get '/unused' => 'tags#list_unused'
      get '/update', to: "redirects#update"
      get '/works/page/:page', controller: 'works', action: :index
      get ':file_path' => 'files#show_relative', as: :relative_path, file_path: /.+/ #needs to stay below react_files route
      get 'accounts/:account_id/account_notifications', action: :user_index, as: 'user_account_notifications' # to change the api docs
      get 'accounts/:account_id/account_notifications/:id', action: :show, as: 'user_account_notification_show'
      get 'accounts/:account_id/admins', action: :index, as: 'account_admins'
      get 'accounts/:account_id/assignments', action: 'sis_assignments', as: :sis_account_assignments
      get 'accounts/:account_id/authentication_providers', action: :index
      get 'accounts/:account_id/authentication_providers/:id', action: :show
      get 'accounts/:account_id/bounced_communication_channels', action: :bouncing_channel_report
      get 'accounts/:account_id/bounced_communication_channels.csv', action: :bouncing_channel_report, defaults: { format: :csv }
      get 'accounts/:account_id/courses', action: :courses_api, as: 'account_courses'
      get 'accounts/:account_id/courses/:id', controller: :courses, action: :show, as: 'account_course_show'
      get 'accounts/:account_id/developer_key_account_bindings', action: :index
      get 'accounts/:account_id/developer_keys', action: :index, as: 'account_developer_keys'
      get 'accounts/:account_id/grading_period_sets', action: :index, as: :account_grading_period_sets
      get 'accounts/:account_id/grading_periods', action: :index, as: :account_grading_periods
      get 'accounts/:account_id/grading_standards', action: :context_index
      get 'accounts/:account_id/grading_standards/:grading_standard_id', action: :context_show
      get 'accounts/:account_id/group_categories', action: :index, as: 'account_group_categories'
      get 'accounts/:account_id/groups', action: :context_index, as: 'account_user_groups'
      get 'accounts/:account_id/help_links', action: :help_links
      get 'accounts/:account_id/logins', action: :index, as: 'account_pseudonyms'
      get 'accounts/:account_id/permissions', action: :permissions
      get 'accounts/:account_id/permissions/:permission', action: :check_account_permission
      get 'accounts/:account_id/reports', action: :available_reports
      get 'accounts/:account_id/reports/:report', action: :index
      get 'accounts/:account_id/reports/:report/:id', action: :show
      get 'accounts/:account_id/roles', action: :api_index, as: 'account_roles'
      get 'accounts/:account_id/roles/:id', action: :show
      get 'accounts/:account_id/rubrics', action: :index, as: :account_rubrics
      get 'accounts/:account_id/rubrics/:id', action: :show
      get 'accounts/:account_id/sis_import_errors', action: :index, as: :account_sis_import_errors
      get 'accounts/:account_id/sis_imports', action: :index, as: "account_sis_imports"
      get 'accounts/:account_id/sis_imports/:id', action: :show
      get 'accounts/:account_id/sis_imports/:id/errors', action: :index, as: :sis_batch_import_errors
      get 'accounts/:account_id/sis_imports/importing', action: :importing
      get 'accounts/:account_id/sso_settings', action: :show_sso_settings, as: 'account_show_sso_settings_url'
      get 'accounts/:account_id/sub_accounts', action: :sub_accounts, as: 'sub_accounts'
      get 'accounts/:account_id/terms', action: :index, as: 'enrollment_terms'
      get 'accounts/:account_id/terms/:id', action: :show, as: 'enrollment_term'
      get 'accounts/:account_id/terms_of_service', action: :terms_of_service
      get 'accounts/:account_id/unconfirmed_communication_channels', action: :unconfirmed_channel_report
      get 'accounts/:account_id/unconfirmed_communication_channels.csv', action: :unconfirmed_channel_report, defaults: { format: :csv }
      get 'accounts/:account_id/users', action: :api_index, as: 'account_users'
      get 'accounts/:account_id/users/:user_id/account_notifications', action: :user_index_deprecated # for back compat
      get 'accounts/:account_id/users/:user_id/account_notifications/:id', action: :show_deprecated
      get 'accounts/:id', action: :show, as: :account
      get 'alignments/:id' => 'outcomes#alignment_redirect', as: :alignment_redirect
      get 'anonymous_submissions/:anonymous_id', to: 'anonymous_submissions#show', as: :anonymous_submission
      get 'anonymous_submissions/:anonymous_id', to: 'submissions/anonymous_downloads#show',
      get 'anonymous_submissions/:anonymous_id', to: 'submissions/anonymous_previews#show',
      get 'anonymous_submissions/:anonymous_id/originality_report/:asset_string',
      get 'anonymous_submissions/:anonymous_id/turnitin/:asset_string',
      get 'anonymous_submissions/:anonymous_id/vericite/:asset_string',
      get 'appointment_groups/:id', action: :show, as: 'appointment_group'
      get 'appointment_groups/:id/groups', action: :groups, as: 'appointment_group_groups'
      get 'appointment_groups/:id/users', action: :users, as: 'appointment_group_users'
      get 'appointment_groups/next_appointment', action: :next_appointment
      get 'assignments/:assignment_id', action: :show
      get 'audit/authentication/accounts/:account_id', action: :for_account, as: 'audit_authentication_account'
      get 'audit/authentication/logins/:login_id', action: :for_login, as: 'audit_authentication_login'
      get 'audit/authentication/users/:user_id', action: :for_user, as: 'audit_authentication_user'
      get 'audit/course/accounts/:account_id', action: :for_account, as: 'audit_course_for_account'
      get 'audit/course/courses/:course_id', action: :for_course, as: 'audit_course_for_course'
      get 'audit/grade_change', action: :query, as: 'audit_grade_change'
      get 'audit/grade_change/assignments/:assignment_id', action: :for_assignment, as: 'audit_grade_change_assignment'
      get 'audit/grade_change/courses/:course_id', action: :for_course, as: 'audit_grade_change_course'
      get 'audit/grade_change/courses/:course_id/assignments/:assignment_id',
      get 'audit/grade_change/courses/:course_id/assignments/:assignment_id/graders/:grader_id',
      get 'audit/grade_change/courses/:course_id/assignments/:assignment_id/graders/:grader_id/students/:student_id',
      get 'audit/grade_change/courses/:course_id/assignments/:assignment_id/students/:student_id',
      get 'audit/grade_change/courses/:course_id/graders/:grader_id',
      get 'audit/grade_change/courses/:course_id/graders/:grader_id/students/:student_id',
      get 'audit/grade_change/courses/:course_id/students/:student_id',
      get 'audit/grade_change/graders/:grader_id', action: :for_grader, as: 'audit_grade_change_grader'
      get 'audit/grade_change/students/:student_id', action: :for_student, as: 'audit_grade_change_student'
      get 'calendar_events/:id', action: :show, as: 'calendar_event'
      get 'calendar_events/:id/participants', action: :participants, as: 'calendar_event_participants'
      get 'calendar_events/visible_contexts', action: :visible_contexts
      get 'collaborations/:id/members', action: :members, as: 'collaboration_members'
      get 'confirm/:token', to: 'email_confirmations#update', as: :update
      get 'conversations/:id', action: :show
      get 'conversations/batches', action: :batches, as: 'conversations_batches'
      get 'conversations/deleted', action: :deleted_index, as: 'deleted_conversations'
      get 'conversations/unread_count', action: :unread_count
      get 'courses/:course_id/activity_stream', action: :activity_stream, as: 'course_activity_stream'
      get 'courses/:course_id/activity_stream/summary', action: :activity_stream_summary, as: 'course_activity_stream_summary'
      get 'courses/:course_id/assignment_groups/:assignment_group_id/assignments', action: :index, as: 'course_assignment_group_assignments'
      get 'courses/:course_id/assignments', action: 'sis_assignments', as: :sis_course_assignments
      get 'courses/:course_id/assignments', action: :index, as: 'course_assignments'
      get 'courses/:course_id/assignments/:assignment_id/moderated_students', action: :index, as: :moderated_students
      get 'courses/:course_id/assignments/:assignment_id/overrides', action: :index
      get 'courses/:course_id/assignments/:assignment_id/overrides/:id', action: :show, as: 'assignment_override'
      get 'courses/:course_id/assignments/:assignment_id/peer_reviews', action: :index
      get 'courses/:course_id/assignments/:assignment_id/submissions/:submission_id/peer_reviews', action: :index
      get 'courses/:course_id/assignments/:id', action: :show, as: 'course_assignment'
      get 'courses/:course_id/assignments/overrides', action: :batch_retrieve
      get 'courses/:course_id/blueprint_subscriptions', action: :subscriptions_index, as: :course_blueprint_subscriptions
      get 'courses/:course_id/blueprint_subscriptions/:subscription_id/migrations', action: :imports_index, as: :course_blueprint_imports
      get 'courses/:course_id/blueprint_subscriptions/:subscription_id/migrations/:id', action: :imports_show
      get 'courses/:course_id/blueprint_subscriptions/:subscription_id/migrations/:id/details', action: :import_details
      get 'courses/:course_id/blueprint_templates/:template_id', action: :show
      get 'courses/:course_id/blueprint_templates/:template_id/associated_courses', action: :associated_courses, as: :course_blueprint_associated_courses
      get 'courses/:course_id/blueprint_templates/:template_id/migrations', action: :migrations_index, as: :course_blueprint_migrations
      get 'courses/:course_id/blueprint_templates/:template_id/migrations/:id', action: :migrations_show
      get 'courses/:course_id/blueprint_templates/:template_id/migrations/:id/details', action: :migration_details
      get 'courses/:course_id/blueprint_templates/:template_id/unsynced_changes', action: :unsynced_changes, as: :course_blueprint_unsynced_changes
      get 'courses/:course_id/calendar_events/timetable', action: :get_course_timetable
      get 'courses/:course_id/collaborations', controller: :collaborations, action: :api_index, as: 'course_collaborations_index'
      get 'courses/:course_id/content_share_users', action: :content_share_users, as: 'course_content_share_users'
      get 'courses/:course_id/course_copy/:id', controller: :content_imports, action: :copy_course_status, as: :course_copy_status
      get 'courses/:course_id/discussion_topics', action: :index, as: 'course_discussion_topics'
      get 'courses/:course_id/effective_due_dates', action: :effective_due_dates, as: 'course_effective_due_dates'
      get 'courses/:course_id/epub_exports/:id', {
      get 'courses/:course_id/folders', controller: :folders, action: :list_all_folders, as: 'course_folders'
      get 'courses/:course_id/folders/:id', controller: :folders, action: :show, as: 'course_folder'
      get 'courses/:course_id/folders/by_path', controller: :folders, action: :resolve_path
      get 'courses/:course_id/folders/by_path/*full_path', controller: :folders, action: :resolve_path
      get 'courses/:course_id/folders/media', controller: :folders, action: :media_folder
      get 'courses/:course_id/grading_periods', action: :index, as: :course_grading_periods
      get 'courses/:course_id/grading_periods/:id', action: :show, as: :course_grading_period
      get 'courses/:course_id/grading_standards', action: :context_index
      get 'courses/:course_id/grading_standards/:grading_standard_id', action: :context_show
      get 'courses/:course_id/group_categories', action: :index, as: 'course_group_categories'
      get 'courses/:course_id/groups', action: :context_index, as: 'course_user_groups'
      get 'courses/:course_id/link_validation', action: :link_validation, as: 'course_link_validation'
      get 'courses/:course_id/mastery_paths/rules', action: 'index'
      get 'courses/:course_id/mastery_paths/rules/:id', action: 'show'
      get 'courses/:course_id/mastery_paths/stats/student_details', action: 'student_details'
      get 'courses/:course_id/mastery_paths/stats/students_per_range', action: 'students_per_range'
      get 'courses/:course_id/media_objects', controller: 'media_objects', action: :index, as: :course_media_objects
      get 'courses/:course_id/outcome_results', action: :index, as: 'course_outcome_results'
      get 'courses/:course_id/outcome_rollups', action: :rollups, as: 'course_outcome_rollups'
      get 'courses/:course_id/permissions', action: :permissions
      get 'courses/:course_id/potential_collaborators', action: :potential_collaborators, as: 'course_potential_collaborators'
      get 'courses/:course_id/quizzes/:quiz_id/ip_filters', action: :index, as: 'course_quiz_ip_filters'
      get 'courses/:course_id/quizzes/:quiz_id/outstanding_quiz_submissions', :action => :index, :path_name => 'outstanding_quiz_submission_index'
      get 'courses/:course_id/quizzes/:quiz_id/statistics', action: :index, as: 'course_quiz_statistics'
      get 'courses/:course_id/quizzes/:quiz_id/submission', action: :submission, as: 'course_quiz_user_submission'
      get 'courses/:course_id/quizzes/:quiz_id/submissions', action: :index, as: 'course_quiz_submissions'
      get 'courses/:course_id/quizzes/:quiz_id/submissions/:id', action: :show, as: 'course_quiz_submission'
      get 'courses/:course_id/quizzes/:quiz_id/submissions/:id/time', action: :time, as: 'course_quiz_submission_time'
      get 'courses/:course_id/recent_students', action: :recent_students, as: 'course_recent_students'
      get 'courses/:course_id/rubrics', action: :index, as: :course_rubrics
      get 'courses/:course_id/rubrics/:id', action: :show
      get 'courses/:course_id/search_users', action: :users
      get 'courses/:course_id/sections', action: :index, as: 'course_sections'
      get 'courses/:course_id/sections/:id', action: :show, as: 'course_section'
      get 'courses/:course_id/settings', action: :api_settings, as: 'course_settings'
      get 'courses/:course_id/student_view_student', action: :student_view_student
      get 'courses/:course_id/students', action: :students
      get 'courses/:course_id/todo', action: :todo_items, as: 'course_todo_list_items'
      get 'courses/:course_id/users', action: :users, as: 'course_users'
      get 'courses/:course_id/users/:id', action: :user, as: 'course_user'
      get 'courses/:course_id/users/:user_id/progress', action: :user_progress
      get 'courses/:course_id/web_zip_exports', action: :index, as: "web_zip_exports"
      get 'courses/:course_id/web_zip_exports/:id', action: :show
      get 'courses/:id', action: :show, as: 'course'
      get 'courses/:id/late_policy', action: :show
      get 'crosslist/confirm/:new_course_id' => 'sections#crosslist_check', as: :confirm_crosslist
      get 'dashboard/dashboard_cards', controller: 'users', action: 'dashboard_cards', as: :dashboard_dashboard_cards
      get 'facet/:id', action: :facet, as: :dashboard_facet
      get 'files/:attachment_id' => 'eportfolio_entries#attachment', as: :view_file
      get 'files/:id', action: :api_show, as: 'attachment'
      get 'files/:id/:uuid/status', action: :api_file_status, as: 'file_status'
      get 'files/:id/create_success', action: :api_create_success
      get 'files/:id/public_url', action: :public_url
      get 'folders/:id', action: :show
      get 'folders/:id/files', controller: :files, action: :api_index, as: 'list_files'
      get 'folders/:id/folders', action: :api_index, as: 'list_folders'
      get 'group_categories/:group_category_id/export', action: :export, as: 'group_category_export', defaults: { format: :csv }
      get 'group_categories/:group_category_id/groups', action: :groups, as: 'group_category_groups'
      get 'group_categories/:group_category_id/users', action: :users, as: 'group_category_users'
      get 'groups/:group_id/activity_stream', action: :activity_stream, as: 'group_activity_stream'
      get 'groups/:group_id/activity_stream/summary', action: :activity_stream_summary, as: 'group_activity_stream_summary'
      get 'groups/:group_id/assignments/:assignment_id/override', action: :group_alias
      get 'groups/:group_id/collaborations', controller: :collaborations, action: :api_index, as: 'group_collaborations_index'
      get 'groups/:group_id/discussion_topics', action: :index, as: 'group_discussion_topics'
      get 'groups/:group_id/folders', controller: :folders, action: :list_all_folders, as: 'group_folders'
      get 'groups/:group_id/folders/:id', controller: :folders, action: :show, as: 'group_folder'
      get 'groups/:group_id/folders/by_path', controller: :folders, action: :resolve_path
      get 'groups/:group_id/folders/by_path/*full_path', controller: :folders, action: :resolve_path
      get 'groups/:group_id/folders/media', controller: :folders, action: :media_folder
      get 'groups/:group_id/media_objects', controller: 'media_objects', action: :index, as: :group_media_objects
      get 'groups/:group_id/permissions', action: :permissions
      get 'groups/:group_id/potential_collaborators', action: :potential_collaborators, as: 'group_potential_collaborators'
      get 'groups/:group_id/users', action: :group_index, as: 'lti_user_group_index'
      get 'groups/:group_id/users', action: :users, as: 'group_users'
      get 'immersive_reader/authenticate', action: :authenticate
      get 'items/first' => 'context_modules#module_redirect', as: :first_redirect, first: 1
      get 'items/last' => 'context_modules#module_redirect', as: :last_redirect, last: 1
      get 'lti/resource/:resource_link_id', controller: 'lti/message',
      get 'media_objects/:media_object_id/media_tracks', action: 'index', as: :list_media_tracks
      get 'objects/status' => 'objects#status', as: :objects_status, controller: :objects, defaults: { format: :json }
      get 'page/:page', action: :index
      get 'planner/items', action: :index, as: :planner_items
      get 'planner/overrides', action: :index, as: :planner_overrides
      get 'planner/overrides/:id', action: :show
      get 'planner_notes/:id', action: :show, as: :planner_notes_show
      get 'prerequisites/:code' => 'context_modules#content_tag_prerequisites_needing_finishing', as: :prerequisites_needing_finishing
      get 'results/:id' => 'outcomes#outcome_result', as: :result
      get 'search/all_courses', action: 'all_courses', as: 'search_all_courses'
      get 'search/recipients', action: 'recipients', as: 'search_recipients'
      get 'search/rubrics', action: 'rubrics', as: 'search_rubrics'
      get 'sections/:course_section_id/assignments/:assignment_id/override', action: :section_alias
      get 'sections/:id', action: :show
      get 'sections/:section_id/assignments/:assignment_id/peer_reviews', action: :index
      get 'sections/:section_id/assignments/:assignment_id/submissions/:submission_id/peer_reviews', action: :index
      get 'services/kaltura', action: :show_kaltura_config
      get 'settings(/:tab)', :action => 'settings', :as => 'settings'
      get 'submissions/:id', to: 'submissions/downloads#show',
      get 'submissions/:id', to: 'submissions/previews#show',
      get 'submissions/:submission_id' => 'eportfolio_entries#submission', as: :preview_submission
      get 'submissions_upload/:assignment_id' => 'gradebooks#show_submissions_upload', as: :show_submissions_upload
      get 'tab/:name', :action => 'issue_tab', :as => 'tab'
      get 'take/questions/:question_id' => 'quizzes/quizzes#show', as: :question, take: '1'
      get 'users/:id', action: :api_show
      get 'users/:id', action: :show
      get 'users/:id/:username' => 'users#show', constraints: { username: RouteFormat.username }
      get 'users/:id/:username/badges' => 'users#show'
      get 'users/:id/:username/tl3_requirements' => 'users#show'
      get 'users/:id/colors', controller: 'users', action: 'get_custom_colors'
      get 'users/:id/colors/:asset_string', controller: 'users', action: 'get_custom_color'
      get 'users/:id/dashboard_positions', controller: 'users', action: 'get_dashboard_positions'
      get 'users/:id/graded_submissions', controller: 'users', action: 'user_graded_submissions', as: :user_submissions
      get 'users/:id/new_user_tutorial_statuses', action: 'get_new_user_tutorial_statuses'
      get 'users/:id/settings', controller: 'users', action: 'settings'
      get 'users/:user_id/calendar_events', action: :user_index, as: 'user_calendar_events'
      get 'users/:user_id/communication_channels', action: :index, as: 'communication_channels'
      get 'users/:user_id/communication_channels/:communication_channel_id/notification_preference_categories', action: :category_index
      get 'users/:user_id/communication_channels/:communication_channel_id/notification_preferences', action: :index
      get 'users/:user_id/communication_channels/:communication_channel_id/notification_preferences/:notification', action: :show
      get 'users/:user_id/communication_channels/:type/:address/notification_preferences', action: :index, constraints: { address: %r{[^/?]+} }
      get 'users/:user_id/communication_channels/:type/:address/notification_preferences/:notification', action: :show, constraints: { address: %r{[^/?]+} }
      get 'users/:user_id/content_shares/:id', action: :show
      get 'users/:user_id/content_shares/received', action: :index, defaults: { list: 'received' }, as: :user_received_content_shares
      get 'users/:user_id/content_shares/sent', action: :index, defaults: { list: 'sent' }, as: :user_sent_content_shares
      get 'users/:user_id/content_shares/unread_count', action: :unread_count
      get 'users/:user_id/courses/:course_id/assignments', action: :user_index, as: 'user_course_assignments'
      get 'users/:user_id/folders', controller: :folders, action: :list_all_folders, as: 'user_folders'
      get 'users/:user_id/folders/:id', controller: :folders, action: :show, as: 'user_folder'
      get 'users/:user_id/folders/by_path', controller: :folders, action: :resolve_path
      get 'users/:user_id/folders/by_path/*full_path', controller: :folders, action: :resolve_path
      get 'users/:user_id/history', action: 'index', as: :user_history
      get 'users/:user_id/logins', action: :index, as: 'user_pseudonyms'
      get 'users/:user_id/missing_submissions', action: :missing_submissions, as: 'user_missing_submissions'
      get 'users/:user_id/planner/items', action: :index, as: :user_planner_items
      get 'users/activity_stream', action: :activity_stream # deprecated
      get 'users/self/activity_stream', action: :activity_stream, as: 'user_activity_stream'
      get 'users/self/activity_stream/summary', action: :activity_stream_summary, as: 'user_activity_stream_summary'
      get 'users/self/bookmarks/', action: :index, as: :bookmarks
      get 'users/self/bookmarks/:id', action: :show
      get 'users/self/course_nicknames', action: :index, as: :course_nicknames
      get 'users/self/course_nicknames/:course_id', action: :show
      get 'users/self/groups', action: :index, as: "current_user_groups"
      get 'users/self/todo', action: :todo_items, as: 'user_todo_list_items'
      get 'users/self/todo_item_count', action: :todo_item_count
      get 'users/self/upcoming_events', action: :upcoming_events
      get 'works/facet/:id', controller: 'works', action: :facet, as: 'dashboard_works_facet'
      get 'zotero/callback' => 'zotero#callback', as: :zotero_callback
      get({ "#{root_path}/:username" => "users#show", constraints: { username: RouteFormat.username } }.merge(index == 1 ? { as: 'user' } : {}))
      get({ "#{root_path}/account-created/" => "users#account_created" }.merge(index == 1 ? { as: :users_account_created } : { as: :old_account_created }))
      get({ "#{root_path}/password-reset/:token" => "users#password_reset_show" }.merge(index == 1 ? { as: :password_reset_token } : {}))
      glob = '(/*scope)'
      match "share/:entry_id", to: "supported_sharing_services#share", as: :share, via: [:get, :post]
      match '/api/v1/files/:id/create_success', via: [:options], action: :api_create_success_cors
      match '/gems/:id' => "rubygems#show", via: :options
      match '/logout', to: 'user_sessions#destroy', as: :logout, via: Devise.sign_out_via
      match 'take' => 'quizzes/quizzes#show', take: '1', via: [:get, :post]
      mount DiscourseDev::Engine => "/dev/"
      mount Sidekiq::Web => "/sidekiq"
      namespace :stats, as: :buyers_stats, path: 'buyers/stats' do
      patch "/admin_delete", to: "comments#admin_delete"
      patch "/admin_unpublish", to: "articles#admin_unpublish"
      patch "/details"            => "community_customizations#update_details", as: :details
      patch "/footer"             => "communities/footer#update",               as: :footer
      patch "/hide", to: "comments#hide"
      patch "/look_and_feel"      => "communities#update_look_and_feel",        as: :look_and_feel
      patch "/new_layout"         => "communities#update_new_layout",           as: :update_new_layout
      patch "/topbar"             => "communities/topbar#update",               as: :topbar
      patch "/unhide", to: "comments#unhide"
      patch '/', to: 'recordings#rename', as: :rename_recording
      patch '/:collection_id/permission_template' => 'admin/permission_templates#update'
      patch 'accounts/:account_id/grading_period_sets/:id', action: :update, as: :account_grading_period_set
      patch 'courses/:course_id/grading_periods/batch_update',
      patch 'courses/:id/late_policy', action: :update
      patch 'grading_period_sets/:set_id/grading_periods/batch_update',
      post "#{controller_name}/#{action_name}(/:id)",
      post "#{prefix}/authorize", controller: 'lti/ims/authorization', action: :authorize, as: "#{context}_lti_oauth2_authorize"
      post "#{prefix}/reorder", action: :reorder, as: "custom_gradebook_columns_reorder"
      post "#{prefix}/tool_proxy", controller: 'lti/ims/tool_proxy', action: :create,
      post "#{prefix}/tool_proxy", controller: 'lti/ims/tool_proxy', action: :re_reg,
      post "#{root_path}/:username/preferences/email" => "users_email#create", constraints: { username: RouteFormat.username }
      post "#{root_path}/:username/preferences/revoke-account" => "users#revoke_account", constraints: { username: RouteFormat.username }
      post "#{root_path}/:username/preferences/revoke-auth-token" => "users#revoke_auth_token", constraints: { username: RouteFormat.username }
      post "#{root_path}/action/send_activation_email" => "users#send_activation_email"
      post "#{root_path}/confirm-admin/:token" => "users#confirm_admin", constraints: { token: /[0-9a-f]+/ }
      post "#{root_path}/create_second_factor_security_key" => "users#create_second_factor_security_key"
      post "#{root_path}/create_second_factor_totp" => "users#create_second_factor_totp"
      post "#{root_path}/email-login" => "users#email_login"
      post "#{root_path}/enable_second_factor_totp" => "users#enable_second_factor_totp"
      post "#{root_path}/read-faq" => "users#read_faq"
      post "#{root_path}/register_second_factor_security_key" => "users#register_second_factor_security_key"
      post "#{root_path}/second_factors" => "users#list_second_factors"
      post "#{root_path}/toggle-anon" => "users#toggle_anon"
      post "/accounts/:account_id/data_services", action: :create, as: :data_services_create
      post "/accounts/:account_id/external_tools", action: :create, as: :account_external_tools_create
      post "/accounts/:account_id/external_tools/rce_favorites/:id", action: :add_rce_favorite, as: :account_external_tools_add_rce_favorite
      post "/badge_achievements/award_badges", to: "badge_achievements#award_badges"
      post "/mailchimp/:secret/unsubscribe", to: "mailchimp_unsubscribes#create", as: :mailchimp_unsubscribe
      post "/move" => "categories#move"
      post "/notifications" => "categories#set_notifications"
      post "accounts/:account_id/csp_settings/domains", :action => :add_domain
      post "accounts/:account_id/csp_settings/domains/batch_create", :action => :add_multiple_domains
      post "accounts/:account_id/outcome_proficiency", action: :create
      post "assignments/:assignment_id/submissions/:submission_id/originality_report", action: :create
      post "courses/:course_id/assignments/:assignment_id/extensions", action: :create, as: "course_assignment_extensions_create"
      post "courses/:course_id/assignments/:assignment_id/provisional_grades/publish",
      post "courses/:course_id/line_items", action: :create, as: :lti_line_item_create
      post "courses/:course_id/line_items/:line_item_id/scores", action: :create, as: :lti_result_create
      post "courses/:course_id/live_assessments", action: :create, as: "course_live_assessment_create"
      post "courses/:course_id/live_assessments/:assessment_id/results", action: :create, as: "course_live_assessment_result_create"
      post "courses/:course_id/microsoft_sync/group", action: :create
      post "courses/:course_id/modules", action: :create, as: 'course_context_module_create'
      post "courses/:course_id/modules/:module_id/duplicate", action: :duplicate
      post "courses/:course_id/modules/:module_id/items", action: :create, as: 'course_context_module_items_create'
      post "courses/:course_id/modules/:module_id/items/:id/mark_read", action: :mark_item_read
      post "courses/:course_id/modules/:module_id/items/:id/select_mastery_path", action: :select_mastery_path
      post "courses/:course_id/modules/items/:id/duplicate", action: :duplicate, as: :course_context_module_item_duplicate
      post "courses/:course_id/outcome_proficiency", action: :create
      post "courses/:course_id/pages", action: :create
      post "courses/:course_id/pages/:url/duplicate", action: :duplicate
      post "courses/:course_id/pages/:url/revisions/:revision_id", action: :revert
      post "courses/:course_id/quizzes", action: :create, as: 'course_quiz_create'
      post "courses/:course_id/quizzes/:id/reorder", action: :reorder, as: 'course_quiz_reorder'
      post "courses/:course_id/quizzes/:id/submission_users/message", action: :message, as: 'course_quiz_submission_users_message'
      post "courses/:course_id/quizzes/:id/validate_access_code", action: :validate_access_code, as: 'course_quiz_validate_access_code'
      post "courses/:course_id/quizzes/:quiz_id/groups", action: :create, as: 'course_quiz_group_create'
      post "courses/:course_id/quizzes/:quiz_id/groups/:id/reorder", action: :reorder, as: 'course_quiz_group_reorder'
      post "courses/:course_id/quizzes/:quiz_id/questions", action: :create, as: 'course_quiz_question_create'
      post "courses/:course_id/quizzes/:quiz_id/reports", action: :create, as: 'course_quiz_reports_create'
      post "courses/:course_id/quizzes/:quiz_id/submissions/:id/events", action: :create, as: 'create_quiz_submission_events'
      post "global/outcomes_import",            action: :create
      post "groups/:group_id/pages", action: :create
      post "groups/:group_id/pages/:url/revisions/:revision_id", action: :revert
      post "polls/:poll_id/poll_choices", action: :create, as: 'poll_choices_create'
      post "polls/:poll_id/poll_sessions", action: :create, as: 'poll_sessions_create'
      post "polls/:poll_id/poll_sessions/:poll_session_id/poll_submissions", action: :create, as: 'poll_submissions_create'
      post "themes/generate_key_pair" => "themes#generate_key_pair"
      post "themes/import" => "themes#import"
      post "themes/upload_asset" => "themes#upload_asset"
      post "users/self/favorites/courses/:id", action: :add_favorite_course, as: :add_favorite_course
      post "users/self/favorites/groups/:id", action: :add_favorite_groups, as: :add_favorite_groups
      post "users/sync_sso" => "users#sync_sso", constraints: AdminConstraint.new
      post '/', to: 'recordings#update', as: :update_recording
      post '/:collection_id/permission_template' => 'admin/permission_templates#create'
      post '/bulk_action', action: :bulk_action, as: 'bulk_action'
      post '/courses/:course_id/assignments/:assignment_id/submissions/:user_id/comments/files', action: :create_file
      post '/login' => 'user_sessions#create', :as => :create_new_session
      post '/login', to: 'auth#create'
      post '/login', to: 'user_sessions#create', as: :create_new_session
      post '/password/recover' => 'user_passwords#create', :as => :reset_password
      post '/password/recover', to: 'user_passwords#create', as: :reset_password
      post '/quiz_submissions/:quiz_submission_id/questions', action: :answer, as: 'quiz_submission_question_answer'
      post '/signup', to: 'user_registrations#create', as: :registration
      post '/upload' => 'tags#upload'
      post '/user/:id', action: :moderate_user, as: :moderate_user
      post 'accounts/:account_id/account_notifications', action: :create, as: 'account_notification'
      post 'accounts/:account_id/admins', action: :create
      post 'accounts/:account_id/authentication_providers', action: :create, as: 'account_create_ap'
      post 'accounts/:account_id/bounced_communication_channels/reset', action: :bulk_reset_bounce_counts
      post 'accounts/:account_id/courses', action: :create
      post 'accounts/:account_id/developer_keys', action: :create
      post 'accounts/:account_id/developer_keys/:developer_key_id/developer_key_account_bindings', action: :create_or_update
      post 'accounts/:account_id/developer_keys/tool_configuration', action: :create
      post 'accounts/:account_id/grading_period_sets', action: :create
      post 'accounts/:account_id/grading_standards', action: :create
      post 'accounts/:account_id/group_categories', action: :create
      post 'accounts/:account_id/logins', action: :create
      post 'accounts/:account_id/reports/:report', action: :create, as: 'account_create_report'
      post 'accounts/:account_id/roles', action: :add_role
      post 'accounts/:account_id/roles/:id/activate', action: :activate_role
      post 'accounts/:account_id/self_registration', action: :create_self_registered_user
      post 'accounts/:account_id/shared_brand_configs', action: :create
      post 'accounts/:account_id/sis_imports', action: :create
      post 'accounts/:account_id/sub_accounts', action: :create
      post 'accounts/:account_id/terms', action: :create
      post 'accounts/:account_id/unconfirmed_communication_channels/confirm', action: :bulk_confirm
      post 'accounts/:account_id/users', action: :create
      post 'anonymous_submissions/:anonymous_id/turnitin/resubmit',
      post 'anonymous_submissions/:anonymous_id/vericite/resubmit',
      post 'brand_configs/save_to_account', action: :save_to_account
      post 'brand_configs/save_to_user_session', action: :save_to_user_session
      post 'calendar_events/:id/reservations', action: :reserve
      post 'calendar_events/:id/reservations/:participant_id', action: :reserve, as: 'calendar_event_reserve'
      post 'calendar_events/save_selected_contexts', action: :save_selected_contexts
      post 'conversations/:id/add_message', action: :add_message
      post 'conversations/:id/add_recipients', action: :add_recipients
      post 'conversations/:id/remove_messages', action: :remove_messages
      post 'conversations/mark_all_as_read', action: :mark_all_as_read
      post 'courses/:course_id/assignments', action: :create
      post 'courses/:course_id/assignments/:assignment_id/duplicate', action: :duplicate
      post 'courses/:course_id/assignments/:assignment_id/moderated_students', action: :create, as: :add_moderated_students
      post 'courses/:course_id/assignments/:assignment_id/overrides', action: :create
      post 'courses/:course_id/assignments/:assignment_id/submissions/:submission_id/peer_reviews', action: :create
      post 'courses/:course_id/assignments/overrides', action: :batch_create
      post 'courses/:course_id/blueprint_templates/:template_id/migrations', action: :queue_migration
      post 'courses/:course_id/calendar_events/timetable', action: :set_course_timetable
      post 'courses/:course_id/calendar_events/timetable_events', action: :set_course_timetable_events
      post 'courses/:course_id/course_copy', controller: :content_imports, action: :copy_course_content
      post 'courses/:course_id/enrollments', action: :create
      post 'courses/:course_id/enrollments/:id/accept', action: :accept
      post 'courses/:course_id/enrollments/:id/reject', action: :reject
      post 'courses/:course_id/epub_exports', {
      post 'courses/:course_id/files', action: :create_file, as: 'course_create_file'
      post 'courses/:course_id/folders', controller: :folders, action: :create
      post 'courses/:course_id/grading_standards', action: :create
      post 'courses/:course_id/group_categories', action: :create
      post 'courses/:course_id/link_validation', action: :start_link_validation
      post 'courses/:course_id/mastery_paths/rules', action: 'create'
      post 'courses/:course_id/ping', action: :ping, as: 'course_ping'
      post 'courses/:course_id/preview_html', action: :preview_html
      post 'courses/:course_id/quiz_extensions', action: :create
      post 'courses/:course_id/quizzes/:quiz_id/extensions', action: :create, as: 'course_quiz_extensions_create'
      post 'courses/:course_id/quizzes/:quiz_id/outstanding_quiz_submissions', :action => :grade, :path_name => 'outstanding_quiz_submission_grade'
      post 'courses/:course_id/quizzes/:quiz_id/submissions', action: :create, as: 'course_quiz_submission_create'
      post 'courses/:course_id/quizzes/:quiz_id/submissions/:id/complete', action: :complete, as: 'course_quiz_submission_complete'
      post 'courses/:course_id/quizzes/:quiz_id/submissions/self/files', action: :create, as: 'quiz_submission_files'
      post 'courses/:course_id/reset_content', :action => :reset_content
      post 'courses/:course_id/rubric_associations', action: :create
      post 'courses/:course_id/rubric_associations/:rubric_association_id/rubric_assessments', controller: :rubric_assessments, action: :create
      post 'courses/:course_id/rubrics', controller: :rubrics, action: :create
      post 'courses/:course_id/sections', action: :create
      post 'courses/:id/late_policy', action: :create
      post 'extensions/:user_id' => 'quizzes/quiz_submissions#extensions', as: :extensions
      post 'files/:id', action: :api_show
      post 'files/:id/create_success', action: :api_create_success
      post 'files/:id/reset_verifier', action: :reset_verifier
      post 'files/capture', action: :api_capture, as: 'files_capture'
      post 'folders/:dest_folder_id/copy_file', action: :copy_file
      post 'folders/:dest_folder_id/copy_folder', action: :copy_folder
      post 'folders/:folder_id/files', action: :create_file
      post 'folders/:folder_id/folders', action: :create, as: 'create_folder'
      post 'group_categories/:group_category_id/assign_unassigned_members', action: 'assign_unassigned_members', as: 'group_category_assign_unassigned_members'
      post 'group_categories/:group_category_id/groups', action: :create
      post 'group_categories/:group_category_id/import', action: :import
      post 'groups/:group_id/files', action: :create_file
      post 'groups/:group_id/folders', controller: :folders, action: :create
      post 'groups/:group_id/invite', action: :invite
      post 'groups/:group_id/preview_html', action: :preview_html
      post 'image_selection/:id', action: :image_selection
      post 'jwts/refresh', action: :refresh
      post 'peer_reviews/:id' => 'assignments#remind_peer_review', as: :remind_peer_review
      post 'peer_reviews/users/:reviewer_id' => 'assignments#assign_peer_review', as: :assign_peer_review
      post 'planner/overrides', action: :create
      post 'remind/:assessment_request_id' => 'rubric_assessments#remind', as: :remind_assessee
      post 'sections/:id/crosslist/:new_course_id', action: :crosslist
      post 'sections/:section_id/assignments/:assignment_id/submissions/:submission_id/peer_reviews', action: :create
      post 'sections/:section_id/enrollments', action: :create
      post 'services/kaltura_session', action: :start_kaltura_session
      post 'submissions_upload/:assignment_id' => 'gradebooks#submissions_zip_upload', as: :submissions_upload
      post 'trophy' => 'trophies#toggle_trophy' # used by hyrax/trophy.js
      post 'users/:id/clear_cache', :action => :clear_cache, :as => 'clear_cache'
      post 'users/:id/split', controller: 'users', action: 'split', as: 'split'
      post 'users/:user_id/communication_channels', action: :create
      post 'users/:user_id/communication_channels/:id', action: :reset_bounce_count, as: 'reset_bounce_count'
      post 'users/:user_id/content_shares', action: :create
      post 'users/:user_id/content_shares/:id/add_users', action: :add_users
      post 'users/:user_id/files', action: :create_file
      post 'users/:user_id/folders', controller: :folders, action: :create
      post 'users/self/bookmarks', action: :create
      post 'users/self/pandata_events_token', controller: 'users', action: 'pandata_events_token'
      prefix = "#{context}s/:#{context}_id"
      prefix = "courses/:course_id/custom_gradebook_columns"
      prefix = "courses/:course_id/custom_gradebook_columns/:id/data"
      put "#{prefix}/:id", action: :update, as: "course_custom_gradebook_column"
      put "#{prefix}/:user_id", action: :update, as: "course_custom_gradebook_column_datum"
      put "#{root_path}/:username" => "users#update", constraints: { username: RouteFormat.username }, defaults: { format: :json }
      put "#{root_path}/:username/clear-featured-topic" => "users#clear_featured_topic", constraints: { username: RouteFormat.username }
      put "#{root_path}/:username/feature-topic" => "users#feature_topic", constraints: { username: RouteFormat.username }
      put "#{root_path}/:username/notification_level" => "users#notification_level", constraints: { username: RouteFormat.username }
      put "#{root_path}/:username/preferences/avatar/pick" => "users#pick_avatar", constraints: { username: RouteFormat.username }
      put "#{root_path}/:username/preferences/avatar/select" => "users#select_avatar", constraints: { username: RouteFormat.username }
      put "#{root_path}/:username/preferences/badge_title" => "users#badge_title", constraints: { username: RouteFormat.username }
      put "#{root_path}/:username/preferences/email" => "users_email#update", constraints: { username: RouteFormat.username }
      put "#{root_path}/:username/preferences/primary-email" => "users#update_primary_email", format: :json, constraints: { username: RouteFormat.username }
      put "#{root_path}/:username/preferences/username" => "users#username", constraints: { username: RouteFormat.username }
      put "#{root_path}/admin-login" => "users#admin_login"
      put "#{root_path}/confirm-new-email" => "users_email#confirm_new_email"
      put "#{root_path}/confirm-old-email" => "users_email#confirm_old_email"
      put "#{root_path}/disable_second_factor" => "users#disable_second_factor"
      put "#{root_path}/password-reset/:token" => "users#password_reset_update"
      put "#{root_path}/second_factor" => "users#update_second_factor"
      put "#{root_path}/second_factors_backup" => "users#create_second_factor_backup"
      put "#{root_path}/security_key" => "users#update_security_key"
      put "#{root_path}/update-activation-email" => "users#update_activation_email"
      put "/accounts/:account_id/data_services/:id", action: :update, as: :data_services_update
      put "/developer_key/update_public_jwk", action: :update, as: :public_jwk_update
      put "/people/confirmation" => "confirmations#create"
      put "/slug" => "categories#update_slug"
      put "accounts/:account_id/csp_settings/lock", :action => :set_csp_lock
      put "assignments/:assignment_id/files/:file_id/originality_report", action: :update
      put "assignments/:assignment_id/submissions/:submission_id/originality_report/:id", action: :update
      put "courses/:course_id/assignments/:assignment_id/provisional_grades/:provisional_grade_id/select",
      put "courses/:course_id/assignments/:assignment_id/provisional_grades/bulk_select",
      put "courses/:course_id/custom_gradebook_column_data", action: :bulk_update, as: "course_custom_gradebook_column_bulk_data"
      put "courses/:course_id/front_page", action: :update_front_page
      put "courses/:course_id/line_items/:id", action: :update, as: :lti_line_item_edit
      put "courses/:course_id/modules", action: :batch_update
      put "courses/:course_id/modules/:id", action: :update, as: 'course_context_module_update'
      put "courses/:course_id/modules/:id/relock", action: :relock
      put "courses/:course_id/modules/:module_id/items/:id", action: :update, as: 'course_context_module_item_update'
      put "courses/:course_id/modules/:module_id/items/:id/done", action: :mark_as_done, as: 'course_context_module_item_done'
      put "courses/:course_id/pages/:url", action: :update
      put "courses/:course_id/quizzes/:id", action: :update, as: 'course_quiz_update'
      put "courses/:course_id/quizzes/:quiz_id/groups/:id", action: :update, as: 'course_quiz_group_update'
      put "courses/:course_id/quizzes/:quiz_id/questions/:id", action: :update, as: 'course_quiz_question_update'
      put "courses/:course_id/tabs/:tab_id", action: :update
      put "courses/:course_id/update_final_grade_overrides", action: "update_final_grade_overrides"
      put "customize/embedding" => "embedding#update", constraints: AdminConstraint.new
      put "dashboard/mark-new-features-as-seen" => "dashboard#mark_new_features_as_seen"
      put "groups/:group_id/followers/self", action: :follow
      put "groups/:group_id/front_page", action: :update_front_page
      put "groups/:group_id/pages/:url", action: :update
      put "outcomes/:id", action: :update
      put "polls/:id", action: :update, as: 'poll_update'
      put "polls/:poll_id/poll_choices/:id", action: :update, as: 'poll_choice_update'
      put "polls/:poll_id/poll_sessions/:id", action: :update, as: 'poll_session_update'
      put "revisions/:revision/hide" => "posts#hide_revision", constraints: { revision: /\d+/ }
      put "revisions/:revision/revert" => "posts#revert", constraints: { revision: /\d+/ }
      put "revisions/:revision/show" => "posts#show_revision", constraints: { revision: /\d+/ }
      put "subscriptions/:id", action: :update
      put "themes/:id/setting" => "themes#update_single_setting"
      put "tool_proxy/:tool_proxy_guid/#{prefix}/resource_link_id/:resource_link_id/tool_setting", controller: 'lti/ims/tool_setting', action: :update, as: "update_#{context}_update_resource_link_id_tool_setting"
      put "tool_proxy/:tool_proxy_guid/#{prefix}/tool_setting", controller: 'lti/ims/tool_setting', action: :update, as: "update_#{context}_tool_setting"
      put "users/:user_id/custom_data#{glob}", action: 'set_data'
      put "users/:user_id/followers/self", action: :follow
      put '/:collection_id/permission_template' => 'admin/permission_templates#update'
      put '/password/change', to: 'user_passwords#update', as: :update_password
      put '/quiz_submissions/:quiz_submission_id/questions/:id/flag', action: :flag, as: 'quiz_submission_question_flag'
      put '/quiz_submissions/:quiz_submission_id/questions/:id/unflag', action: :unflag, as: 'quiz_submission_question_unflag'
      put 'accounts/:account_id/account_notifications/:id', action: :update, as: 'account_notification_update'
      put 'accounts/:account_id/authentication_providers/:id', action: :update, as: 'account_update_ap'
      put 'accounts/:account_id/courses', action: :batch_update
      put 'accounts/:account_id/logins/:id', action: :update
      put 'accounts/:account_id/roles/:id', action: :update
      put 'accounts/:account_id/shared_brand_configs/:id', action: :update
      put 'accounts/:account_id/sis_imports/:id/abort', action: :abort
      put 'accounts/:account_id/sis_imports/:id/restore_states', action: :restore_states
      put 'accounts/:account_id/sis_imports/abort_all_pending', action: :abort_all_pending
      put 'accounts/:account_id/sso_settings', action: :update_sso_settings, as: 'account_update_sso_settings_url'
      put 'accounts/:account_id/terms/:id', action: :update
      put 'accounts/:account_id/users/:user_id/restore', action: :restore_user
      put 'accounts/:id', action: :update
      put 'anonymous_submissions/:anonymous_id', to: 'anonymous_submissions#update'
      put 'anonymous_submissions/:anonymous_id/reassign', to: 'anonymous_submissions#redo_submission'
      put 'appointment_groups/:id', action: :update
      put 'calendar_events/:id', action: :update
      put 'conversations/:id', action: :update # stars, subscribed-ness, workflow_state
      put 'conversations/restore', action: :restore_message
      put 'courses/:course_id/assignments/:assignment_id/overrides/:id', action: :update
      put 'courses/:course_id/assignments/:assignment_id/submissions/:user_id/comments/:id', action: :update
      put 'courses/:course_id/assignments/:id', action: :update
      put 'courses/:course_id/assignments/bulk_update', action: :bulk_update
      put 'courses/:course_id/assignments/overrides', action: :batch_update
      put 'courses/:course_id/blueprint_templates/:template_id/restrict_item', action: :restrict_item
      put 'courses/:course_id/blueprint_templates/:template_id/update_associations', action: :update_associations
      put 'courses/:course_id/disable_post_to_sis', action: 'disable_post_to_sis', as: :disable_post_to_sis_course_assignments
      put 'courses/:course_id/enrollments/:id/reactivate', :action => :reactivate, :as => 'reactivate_enrollment'
      put 'courses/:course_id/gradebook_settings', action: :update, as: :course_gradebook_settings_update
      put 'courses/:course_id/grading_periods/:id', action: :update, as: :course_grading_period_update
      put 'courses/:course_id/mastery_paths/rules/:id', action: 'update'
      put 'courses/:course_id/quizzes/:quiz_id/submissions/:id', action: :update, as: 'course_quiz_submission_update'
      put 'courses/:course_id/rubric_associations/:id', action: :update
      put 'courses/:course_id/rubric_associations/:rubric_association_id/rubric_assessments/:id', controller: :rubric_assessments, action: :update
      put 'courses/:course_id/rubrics/:id', controller: :rubrics, action: :update
      put 'courses/:course_id/settings', action: :update_settings
      put 'courses/:course_id/users/:user_id/last_attended', :action => :last_attended
      put 'courses/:id', action: :update
      put 'courses/:id/quizzes', action: 'new_quizzes_selection_update', as: 'course_new_quizzes_selection_update'
      put 'developer_keys/:developer_key_id/tool_configuration', action: :update
      put 'developer_keys/:id', action: :update
      put 'files/:id', action: :api_update
      put 'folders/:id', action: :update
      put 'media_objects/:media_object_id', action: 'update_media_object', as: :update_media_object
      put 'media_objects/:media_object_id/media_tracks', action: 'update', as: :update_media_tracks
      put 'planner/overrides/:id', action: :update
      put 'planner_notes/:id', action: :update
      put 'sections/:id', action: :update
      put 'users/:id', action: :update
      put 'users/:id/colors/:asset_string', controller: 'users', action: 'set_custom_color'
      put 'users/:id/dashboard_positions', controller: 'users', action: 'set_dashboard_positions'
      put 'users/:id/merge_into/:destination_user_id', controller: 'users', action: 'merge_into'
      put 'users/:id/merge_into/accounts/:destination_account_id/users/:destination_user_id', controller: 'users', action: 'merge_into'
      put 'users/:id/new_user_tutorial_statuses/:page_name', action: 'set_new_user_tutorial_status'
      put 'users/:id/settings', controller: 'users', action: 'settings', as: 'user_settings'
      put 'users/:user_id/content_shares/:id', action: :update
      put 'users/self/bookmarks/:id', action: :update
      put 'users/self/communication_channels/:communication_channel_id/notification_preference_categories/:category', action: :update_preferences_by_category
      put 'users/self/communication_channels/:communication_channel_id/notification_preferences', action: :update_all
      put 'users/self/communication_channels/:communication_channel_id/notification_preferences/:notification', action: :update
      put 'users/self/communication_channels/:type/:address/notification_preferences', action: :update_all, constraints: { address: %r{[^/?]+} }
      put 'users/self/communication_channels/:type/:address/notification_preferences/:notification', action: :update, constraints: { address: %r{[^/?]+} }
      put 'users/self/course_nicknames/:course_id', action: :update
      put({ "#{root_path}/activate-account/:token" => "users#perform_account_activation" }.merge(index == 1 ? { as: 'perform_activate_account' } : {}))
      resource :activity, only: [], format: /json|yaml/ do
      resource :api_key, controller: 'users/api_key', only: [:create, :destroy]
      resource :customer, controller: "orders/customer_details"
      resources :applications, :path => 'applications/:application_id' do
      resources :assignment_groups, path: "courses/:course_id/assignment_groups", name_prefix: "course_", except: :index
      resources :backend_apis, :path => 'backend_apis/:backend_api_id' do
      resources :blocked_dates, only: [:index], controller: 'listing/blocked_dates'
      resources :bookings, only: [:index], controller: 'listing/bookings'
      resources :people, param: :username, :path => "", :only => :show, :constraints => { :username => /[_a-z0-9]{3,20}/ }
      resources :quiz_groups, controller: 'quizzes/quiz_groups', path: :groups, only: [:create, :update, :destroy] do
      resources :quiz_questions, controller: 'quizzes/quiz_questions', path: :questions, only: [:create, :update, :destroy, :show]
      resources :quiz_submissions, controller: 'quizzes/quiz_submissions', path: :submissions do
      resources :services, :path => 'services/:service_id' do  #, :applications do
      reviewable_id: /\d+/,
      rmc.connect "mylyn/customfields", :controller => "MylynConnector::CustomFields", :action => "all"
      rmc.connect "mylyn/issue/:id", :controller => "MylynConnector::Issues", :action => "show"
      rmc.connect "mylyn/issuecategories", :controller => "MylynConnector::IssueCategories", :action => "all"
      rmc.connect "mylyn/issuepriorities", :controller => "MylynConnector::IssuePriorities", :action => "all"
      rmc.connect "mylyn/issues", :controller => "MylynConnector::Issues", :action => "index"
      rmc.connect "mylyn/issues/list", :controller => "MylynConnector::Issues", :action => "list"
      rmc.connect "mylyn/issues/updatedsince", :controller => "MylynConnector::Issues", :action => "updated_since"
      rmc.connect "mylyn/issuestatus", :controller => "MylynConnector::IssueStatus", :action => "all"
      rmc.connect "mylyn/projects", :controller => "MylynConnector::Projects", :action => "all"
      rmc.connect "mylyn/queries", :controller => "MylynConnector::Queries", :action => "all"
      rmc.connect "mylyn/settings", :controller => "MylynConnector::Settings", :action => "all"
      rmc.connect "mylyn/timeentryactivities", :controller => "MylynConnector::TimeEntryActivities", :action => "all"
      rmc.connect "mylyn/token", :controller => "MylynConnector::Information", :action => "token"
      rmc.connect "mylyn/trackers", :controller => "MylynConnector::Trackers", :action => "all"
      rmc.connect "mylyn/users", :controller => "MylynConnector::Users", :action => "all"
      rmc.connect "mylyn/version", :controller => "MylynConnector::Information", :action => "version"
      rmc.connect "mylyn/versions", :controller => "MylynConnector::Versions", :action => "all"
      rmc.connect 'mylyn/attachment/:id/:filename', :controller => 'attachments', :action => 'download', :format=> 'xml', :id => /\d+/, :filename => /.*/
      scope "/customize", constraints: AdminConstraint.new do
      scope "/logs" do
      scope "/private-messages-group/:username", group_name: RouteFormat.username do
      scope 'applications/:application_id', :as => :application do
      scope path: "/" do
      use Rack::Protection, origin_whitelist: ["https://dev.to"] # resolve Rack Protection HttpOrigin
      }, failure_app: lambda { |env| [404, {"Content-Type" => "text/plain"}, ["Oops, not found"]] }, module: :devise
    # BEWARE: those 2 routes have to be below /p/signup/success or
    # One-by-one get/post routes for defined controllers
    # Redirect previous settings changed after https://github.com/forem/forem/pull/11347
    # TODO: [forem/teamsmash] removed the /p/information view and added a redirect for SEO purposes.
    # create/delete are handled by specific routes just above
    # deprecated routes, second one is solely for YARD. preferred API is api/v1/search/recipients
    # get '/:locale/admin2', to: redirect('/%{locale}/admin2/dashboard')
    # get '/onpay/check'  => 'onpay_rails/base#check'
    # get '/onpay/pay'   => 'onpay_rails/base#pay'
    # setup dynamic redirects, see <https://github.com/thepracticaldev/dev.to/issues/7267>
    # this needs to come before the users concern, or users/:id will preempt it
    #match '/estimate_timelog/:action', :to => 'estimate_timelog#report'
    #meta / settings
    #scope path: "/" do
    RailsAdmin::Config::Actions.all(:root).each { |action| match "/#{action.route_fragment}", action: action.action_name, as: action.action_name, via: action.http_methods }
    controllers applications: "oauth/applications"
    controllers tokens: "oauth/tokens"
    delete "/do-not-disturb" => "do_not_disturb#destroy"
    delete "/listings/:category/:slug", to: "listings#destroy"
    delete "/messages/:id", to: "messages#destroy"
    delete "/sign_out" => "devise/sessions#destroy"
    delete "/sign_out", to: "devise/sessions#destroy"
    delete "admin/groups/:id/members" => "groups#remove_member", constraints: AdminConstraint.new
    delete "pub/by-topic/:topic_id" => "published_pages#destroy"
    delete "review/:reviewable_id" => "reviewables#destroy", constraints: { reviewable_id: /\d+/ }
    delete "t/:id" => "topics#destroy"
    delete "t/:topic_id/timings" => "topics#destroy_timings", constraints: { topic_id: /\d+/ }
    delete "users/api_secrets/:id", to: "api_secrets#destroy", as: :users_api_secret
    delete "users/full_delete", to: "users#full_delete", as: :user_full_delete
    delete "users/remove_identity", to: "users#remove_identity"
    delete '/:user_uid', to: 'users#destroy', as: :delete_user
    delete '/option_values/:id', to: "option_values#destroy", as: :option_value
    delete '/product_properties/:id', to: "product_properties#destroy", as: :product_property
    delete '/remove_shared_access', to: 'rooms#remove_shared_access', as: :room_remove_shared_access
    delete '/sign_out' => 'clearance/sessions#destroy', as: 'sign_out'
    delete 'account_notifications/:id' => 'users#close_notification', as: :dashboard_close_notification
    delete 'account_users/:id' => 'accounts#remove_account_user', as: :remove_account_user
    delete 'announcements/external_feeds/:id' => 'announcements#destroy_external_feed', as: :announcements_external_feed
    delete 'conclude_user/:id' => 'courses#conclude_user', as: :conclude_user_enrollment
    delete 'ignore_stream_item/:id' => 'users#ignore_stream_item', as: :dashboard_ignore_stream_item
    delete 'modules/items/:id' => 'context_modules#remove_item', as: :context_modules_remove_item
    delete 'pages/*path', to: 'pages#destroy', as: 'delete_page'
    delete 'remove_user/:user_id' => 'groups#remove_user', as: :remove_user
    delete 'role/:role_id', to: 'admins#delete_role', as: :admin_delete_role
    delete 'unenroll/:id' => 'courses#unenroll_user', as: :unenroll
    delete 'unenroll/:id.:format' => 'courses#unenroll_user', as: :formatted_unenroll
    delete 'user_services/:id' => 'users#delete_user_service', as: :profile_user_service
    delete 'users/:user_id' => 'accounts#remove_user', as: :delete_user
    delete 'wiki/:id/:version', :to => 'wiki#destroy_version'
    file = File.join(plugin_dir, "config/routes.rb")
    full_path = path.gsub(/{(.*?)}/, ':\1')
    get  "/disk/:encoded_key/*filename" => "active_storage/disk#show", as: :rails_disk_service
    get  "classification_terms/:slug_or_id" => 'classifications#term'
    get  "repositories/:repo_id/resources/:id/search" => 'resources#search'
    get  "repositories/:repo_slug/classification_terms/:slug_or_id" => 'classifications#term'
    get  "repositories/:rid/accessions" => 'accessions#index'
    get  "repositories/:rid/accessions/:id" => 'accessions#show'
    get  "repositories/:rid/resources" => 'resources#index'
    get  "repositories/:rid/resources/:id" => 'resources#show'
    get  "repositories/:rid/resources/:id/collection_organization" => 'resources#infinite'
    get  "repositories/:rid/resources/:id/infinite/waypoints" => 'resources#waypoints'
    get  "repositories/:rid/resources/:id/inventory" => 'resources#inventory'
    get  "repositories/:rid/resources/:id/tree/node" => 'resources#tree_node'
    get  "repositories/:rid/resources/:id/tree/node_from_root" => 'resources#tree_node_from_root'
    get  "repositories/:rid/resources/:id/tree/root" => 'resources#tree_root'
    get  "repositories/:rid/resources/:id/tree/waypoint" => 'resources#tree_waypoint'
    get  "tool_proxy/:tool_proxy_guid", controller: 'lti/ims/tool_proxy', action: :show, as: "show_lti_tool_proxy"
    get  '/community_memberships/access_denied'   => 'community_memberships#access_denied', as: :access_denied
    get  '/community_memberships/check_email_availability_and_validity' => 'community_memberships#check_email_availability_and_validity'
    get  '/community_memberships/check_invitation_code'                 => 'community_memberships#check_invitation_code'
    get  '/community_memberships/pending_consent' => 'community_memberships#pending_consent', as: :pending_consent
    get  'accessions/search' => 'accessions#search'
    get  'repositories/:rid/resources/:id/resolve/:ref_id' => 'resources#resolve'
    get  'repositories/resources' => 'resources#index'
    get ".well-known/assetlinks.json" => "metadata#app_association_android"
    get ".well-known/change-password", to: redirect(relative_url_root + 'my/preferences/account', status: 302)
    get "/", to: redirect("/internal/articles")
    get "/404-body" => "exceptions#not_found_body"
    get "/:person_id/messages/:conversation_type/:id" => "conversations#show", :as => :single_conversation
    get "/:sitemap", to: "sitemaps#show",
    get "/:timeframe", to: "stories#index", constraints: { timeframe: /latest/ }
    get "/:username", to: "stories#index", as: "user_profile"
    get "/:username/:slug", to: "stories#show"
    get "/:username/:slug/:view", to: "stories#show",
    get "/:username/:slug/actions_panel", to: "moderations#actions_panel"
    get "/:username/:slug/comments", to: "comments#index"
    get "/:username/:slug/comments/:id_code", to: "comments#index"
    get "/:username/:slug/comments/:id_code/delete_confirm", to: "comments#delete_confirm"
    get "/:username/:slug/comments/:id_code/edit", to: "comments#edit"
    get "/:username/:slug/delete_confirm", to: "articles#delete_confirm"
    get "/:username/:slug/edit", to: "articles#edit"
    get "/:username/:slug/manage", to: "articles#manage"
    get "/:username/:slug/mod", to: "moderations#article"
    get "/:username/:slug/stats", to: "articles#stats"
    get "/:username/:view", to: "stories#index",
    get "/:username/comment/:id_code", to: "comments#index"
    get "/:username/comment/:id_code/delete_confirm", to: "comments#delete_confirm"
    get "/:username/comment/:id_code/edit", to: "comments#edit"
    get "/:username/comment/:id_code/mod", to: "moderations#comment"
    get "/:username/comment/:id_code/settings", to: "comments#settings"
    get "/:username/series", to: "collections#index", as: "user_series"
    get "/:username/series/:id", to: "collections#show"
    get "/about", to: "pages#about"
    get "/about-listings", to: "pages#about_listings"
    get "/api", to: redirect("https://docs.forem.com/api")
    get "/as/sign_in", to: "devise/sessions#new"
    get "/associate/:token", to: "users/associate_accounts#connect_info", constraints: { token: /\h{32}/ }
    get "/async_info/base_data", controller: "async_info#base_data", defaults: { format: :json }
    get "/async_info/shell_version", controller: "async_info#shell_version", defaults: { format: :json }
    get "/auth/:provider", to: "users/omniauth_callbacks#confirm_request"
    get "/badge", to: "pages#badge", as: :pages_badge
    get "/badge/:slug", to: "badges#show", as: :badge
    get "/badges/:id(/:slug)" => "badges#show", constraints: { format: /(json|html|rss)/ }
    get "/blobs/:signed_id/*filename" => "active_storage/blobs/redirect#show"
    get "/blobs/proxy/:signed_id/*filename" => "active_storage/blobs/proxy#show", as: :rails_service_blob_proxy
    get "/blobs/redirect/:signed_id/*filename" => "active_storage/blobs/redirect#show", as: :rails_service_blob
    get "/bootstrap" => "bootstrap#index"
    get "/challenge", to: "pages#challenge"
    get "/channel_request_info/", to: "chat_channel_memberships#request_details"
    get "/chat_channel_memberships/chat_channel_info/:id", to: "chat_channel_memberships#chat_channel_info"
    get "/chat_channel_memberships/find_by_chat_channel_id", to: "chat_channel_memberships#find_by_chat_channel_id"
    get "/chat_channels/:id/channel_info", to: "chat_channels#channel_info", as: :chat_channel_info
    get "/checkin", to: "pages#checkin"
    get "/code-of-conduct", to: "pages#code_of_conduct"
    get "/community-moderation", to: "pages#community_moderation"
    get "/confirm-email", to: "confirmations#new"
    get "/confirmation_pending" => "community_memberships#confirmation_pending", :as => :confirmation_pending
    get "/connect", to: "chat_channels#index"
    get "/connect/:slug", to: "chat_channels#index"
    get "/contact", to: "pages#contact"
    get "/dashboard" => "dashboard#index"
    get "/dashboard", to: "dashboards#show"
    get "/dashboard", to: "home#admin_dashboard"
    get "/dashboard", to: "home#user_dashboard"
    get "/dashboard/:username", to: "dashboards#show"
    get "/dashboard/:which", to: "dashboards#followers", constraints: { which: /user_followers/ }
    get "/dashboard/:which/:org_id", to: "dashboards#show",
    get "/dashboard/active", to: "home#admin_dashboard"
    get "/dashboard/analytics", to: "dashboards#analytics"
    get "/dashboard/subscriptions", to: "dashboards#subscriptions"
    get "/embed/:embeddable", to: "liquid_embeds#show", as: "liquid_embed"
    get "/enter" => "registrations#new", :as => :sign_up
    get "/enter", to: "registrations#new", as: :sign_up
    get "/events", to: "events#index"
    get "/faq", to: "pages#faq"
    get "/feed", to: "articles#feed", as: "feed", defaults: { format: "rss" }
    get "/feed/:username", to: "articles#feed", as: "user_feed", defaults: { format: "rss" }
    get "/feed/latest", to: "articles#feed", as: "latest_feed", defaults: { format: "rss" }
    get "/feed/tag/:tag", to: "articles#feed", as: "tag_feed", defaults: { format: "rss" }
    get "/internal", to: redirect("/admin")
    get "/internal/:path", to: redirect("/admin/%{path}")
    get "/invites/:id" => "invites#show", constraints: { format: :html }
    get "/join", to: "home#join"
    get "/join_channel_invitation/:channel_slug", to: "chat_channel_memberships#join_channel_invitation"
    get "/listing_bubble/:id" => "listings#listing_bubble", :as => :listing_bubble
    get "/listing_bubble_multiple/:ids" => "listings#listing_bubble_multiple", :as => :listing_bubble_multiple
    get "/listings/:category", to: "listings#index", as: :listing_category
    get "/listings/:category/:slug", to: "listings#index", as: :listing_slug
    get "/listings/:category/:slug/:view", to: "listings#index",
    get "/listings/:category/:slug/delete_confirm", to: "listings#delete_confirm"
    get "/listings/:listing_id/book", :to => redirect { |params, request|
    get "/listings/:listing_id/contact" => "free_transactions#contact", :as => :contact_to_listing
    get "/listings/:listing_id/initiate"   => "preauthorize_transactions#initiate", :as => :initiate_order
    get "/listings/dashboard", to: "listings#dashboard"
    get "/locale/:locale", to: "stories#index"
    get "/login" => "sessions#new", :as => :login
    get "/logout" => "sessions#destroy", :as => :logout
    get "/mailchimp/:secret/unsubscribe", to: "mailchimp_unsubscribes#index", as: :mailchimp_unsubscribe_check
    get "/manifest", to: "service_worker#manifest"
    get "/mod", to: "moderations#index", as: :mod
    get "/mod/:tag", to: "moderations#index"
    get "/new", to: "articles#new"
    get "/new-category" => "categories#show", constraints: { format: 'html' }
    get "/new/:template", to: "articles#new"
    get "/news" => 'news#show', as: 'legacy_news_path'
    get "/notification_subscriptions/:notifiable_type/:notifiable_id", to: "notification_subscriptions#show"
    get "/notifications/:filter", to: "notifications#index"
    get "/notifications/:filter/:org_id", to: "notifications#index"
    get "/open-search", to: "open_search#show",
    get "/orders/current", to: "orders#current", as: "current_order"
    get "/p/information", to: redirect("/about")
    get "/page/:slug", to: "pages#show"
    get "/page/post-a-job", to: "pages#post_a_job"
    get "/permalink-check", to: 'permalinks#check'
    get "/pod", to: "podcast_episodes#index"
    get "/podcasts", to: redirect("pod")
    get "/posts/:id/cooked" => "posts#cooked"
    get "/posts/:id/expand-embed" => "posts#expand_embed"
    get "/posts/:id/raw" => "posts#markdown_id"
    get "/posts/:id/raw-email" => "posts#raw_email"
    get "/privacy", to: "pages#privacy"
    get "/private", to: "home#private", as: :private
    get "/private/active", to: "home#private", as: :private_active
    get "/rails/mailers" => "rails/mailers#index"
    get "/rails/mailers/*path" => "rails/mailers#preview"
    get "/readinglist", to: "reading_list_items#index"
    get "/readinglist/:view", to: "reading_list_items#index", constraints: { view: /archive/ }
    get "/report-abuse", to: "pages#report_abuse"
    get "/representations/:signed_blob_id/:variation_key/*filename" => "active_storage/representations/redirect#show"
    get "/representations/proxy/:signed_blob_id/:variation_key/*filename" => "active_storage/representations/proxy#show", as: :rails_blob_representation_proxy
    get "/representations/redirect/:signed_blob_id/:variation_key/*filename" => "active_storage/representations/redirect#show", as: :rails_blob_representation
    get "/robots.:format", to: "pages#robots"
    get "/rss", to: "articles#feed", defaults: { format: "rss" }
    get "/safe-mode" => "safe_mode#index"
    get "/search", to: "stories#search"
    get "/search/chat_channels", to: "search#chat_channels"
    get "/search/feed_content", to: "search#feed_content"
    get "/search/listings", to: "search#listings"
    get "/search/reactions", to: "search#reactions"
    get "/search/tags", to: "search#tags"
    get "/search/usernames", to: "search#usernames"
    get "/search/users", to: "search#users"
    get "/security", to: "pages#bounty"
    get "/serviceworker", to: "service_worker#index"
    get "/settings/(:tab)", to: "users#edit", as: :user_settings
    get "/settings/:plugin", to: "settings#edit", as: :edit_settings
    get "/settings/:tab/:id", to: "users#edit", constraints: { tab: /response-templates/ }
    get "/settings/:tab/:org_id", to: "users#edit", constraints: { tab: /organization/ }
    get "/settings/integrations", to: redirect("/settings/extensions")
    get "/settings/misc", to: redirect("/settings")
    get "/settings/publishing-from-rss", to: redirect("/settings/extensions")
    get "/settings/ux", to: redirect("/settings/customization")
    get "/shop", to: redirect("https://shop.dev.to")
    get "/signout_confirm", to: "users#signout_confirm"
    get "/social_previews/article/:id", to: "social_previews#article", as: :article_social_preview
    get "/social_previews/comment/:id", to: "social_previews#comment", as: :comment_social_preview
    get "/social_previews/listing/:id", to: "social_previews#listing", as: :listing_social_preview
    get "/social_previews/organization/:id", to: "social_previews#organization", as: :organization_social_preview
    get "/social_previews/tag/:id", to: "social_previews#tag", as: :tag_social_preview
    get "/social_previews/user/:id", to: "social_previews#user", as: :user_social_preview
    get "/sponsors", to: "pages#sponsors"
    get "/styleguide" => "govuk_admin_template/style_guide#index"
    get "/survey", to: redirect("https://dev.to/ben/final-thoughts-on-the-state-of-the-web-survey-44nn")
    get "/t/:tag", to: "stories#index", as: :tag
    get "/t/:tag/:timeframe", to: "stories#index",
    get "/t/:tag/admin", to: "tags#admin"
    get "/t/:tag/edit", to: "tags#edit"
    get "/t/:tag/page/:page", to: "stories#index"
    get "/t/:tag/top/:timeframe", to: "stories#index"
    get "/tag-moderation", to: "pages#tag_moderation"
    get "/tag/:tag", to: "stories#index"
    get "/terms", to: "pages#terms"
    get "/top/:timeframe", to: "stories#index"
    get "/transactions/created/:transaction_id" => "transactions#created", as: :transaction_created
    get "/transactions/finalize_processed/:process_token" => "transactions#finalize_processed", as: :transaction_finalize_processed
    get "/transactions/new" => "transactions#new", as: :new_transaction
    get "/transactions/op_status/:process_token" => "paypal_service/checkout_orders#paypal_op_status", as: :paypal_op_status
    get "/transactions/transaction_op_status/:process_token" => "transactions#transaction_op_status", :as => :transaction_op_status
    get "/user-api-key/new" => "user_api_keys#new"
    get "/user-api-key/otp" => "user_api_keys#otp"
    get "/verify_email_ownership", to: "email_authorizations#verify", as: :verify_email_authorizations
    get "/welcome", to: "pages#welcome"
    get "/workshops", to: redirect("events")
    get "/💸", to: redirect("t/hiring")
    get ":obj_type/:slug_or_id" => 'objects#show'
    get "accessions/:slug_or_id" => 'accessions#show'
    get "agents/:eid/:id" => 'agents#show'
    get "agents/:slug_or_id" => 'agents#show'
    get "brotli_asset/*path" => "static#brotli_asset", format: false, constraints: { format: /.*/ }
    get "c/*category_slug/edit(/:tab)" => "categories#find_by_slug", constraints: { format: 'html' }
    get "c/*category_slug/find_by_slug" => "categories#find_by_slug"
    get "c/*category_slug_path_with_id.rss" => "list#category_feed", format: :rss
    get "c/:id/show" => "categories#show"
    get "category/*path" => "categories#redirect"
    get "cdn_asset/:site/*path" => "static#cdn_asset", format: false, constraints: { format: /.*/ }
    get "classifications/:slug_or_id" => 'classifications#show'
    get "color-scheme-stylesheet/:id(/:theme_id)" => "stylesheets#color_scheme", constraints: { format: :json }
    get "courses/:course_id/membership_service", controller: "lti/membership_service", action: :course_index, as: :course_membership_service
    get "dashboard/analytics/org/:org_id", to: "dashboards#analytics", as: :dashboard_analytics_org
    get "dashboard/following", to: "dashboards#following_tags"
    get "dashboard/following_organizations", to: "dashboards#following_organizations"
    get "dashboard/following_podcasts", to: "dashboards#following_podcasts"
    get "dashboard/following_tags", to: "dashboards#following_tags"
    get "dashboard/following_users", to: "dashboards#following_users"
    get "email/unsubscribe/:key" => "email#unsubscribe", as: "email_unsubscribe"
    get "email/unsubscribed" => "email#unsubscribed", as: "email_unsubscribed"
    get "email_subscriptions/unsubscribe"
    get "extra-locales/:bundle" => "extra_locales#show"
    get "favicon/proxied" => "static#favicon", format: false
    get "files/:id/download" => 'files#show', download: '1'
    get "finish-installation/confirm-email" => "finish_installation#confirm_email"
    get "finish-installation/register" => "finish_installation#register"
    get "groups/:group_id/membership_service", controller: "lti/membership_service", action: :group_index, as: :group_membership_service
    get "highlight-js/:hostname/:version.js" => "highlight_js#show", constraints: { hostname: /[\w\.-]+/, format: :js }
    get "invites/retrieve" => "invites#retrieve"
    get "letter_avatar/:username/:size/:version.png" => "user_avatars#show_letter", constraints: { hostname: /[\w\.-]+/, size: /\d+/, username: RouteFormat.username, format: :png }
    get "letter_avatar_proxy/:version/letter/:letter/:color/:size.png" => "user_avatars#show_proxy_letter", constraints: { format: :png }
    get "message-bus/poll" => "message_bus#poll"
    get "my/*path", to: 'users#my_redirect'
    get "mylyn/customfields", :controller => 'mylyn_connector/custom_fields', :action => 'all', :format => 'xml'
    get "mylyn/issue/:id", :controller => 'mylyn_connector/issues', :action => 'show', :format => 'xml'
    get "mylyn/issuecategories", :controller => 'mylyn_connector/issue_categories', :action => 'all', :format => 'xml'
    get "mylyn/issuepriorities", :controller => 'mylyn_connector/issue_priorities', :action => 'all', :format => 'xml'
    get "mylyn/issues", :controller => 'mylyn_connector/issues', :action => 'index', :format => 'xml'
    get "mylyn/issues/list", :controller => 'mylyn_connector/issues', :action => 'list', :format => 'xml'
    get "mylyn/issues/updatedsince", :controller => 'mylyn_connector/issues', :action => 'updated_since', :format => 'xml'
    get "mylyn/issuestatus", :controller => 'mylyn_connector/issue_status', :action => 'all', :format => 'xml'
    get "mylyn/projects", :controller => 'mylyn_connector/projects', :action => 'all', :format => 'xml'
    get "mylyn/queries", :controller => 'mylyn_connector/queries', :action => 'all', :format => 'xml'
    get "mylyn/settings", :controller => 'mylyn_connector/settings', :action => 'all', :format => 'xml'
    get "mylyn/timeentryactivities", :controller => 'mylyn_connector/time_entry_activities', :action => 'all', :format => 'xml'
    get "mylyn/token", :controller => 'mylyn_connector/information', :action => 'token', :format => 'text'
    get "mylyn/trackers", :controller => 'mylyn_connector/trackers', :action => 'all', :format => 'xml'
    get "mylyn/users", :controller => 'mylyn_connector/users', :action => 'all', :format => 'xml'
    get "mylyn/version", :controller => 'mylyn_connector/information', :action => 'version', :format => 'xml'
    get "mylyn/versions", :controller => 'mylyn_connector/versions', :action => 'all', :format => 'xml'
    get "p/:post_id(/:user_id)" => "posts#short_link"
    get "posts" => "posts#latest", id: "latest_posts", constraints: { format: /(json|rss)/ }
    get "posts/:id/reply-history" => "posts#reply_history"
    get "posts/:id/reply-ids"     => "posts#reply_ids"
    get "posts/:id/reply-ids/all" => "posts#all_reply_ids"
    get "posts/:username/deleted" => "posts#deleted_posts", constraints: { username: RouteFormat.username }
    get "posts/:username/flagged" => "posts#flagged_posts", constraints: { username: RouteFormat.username }
    get "posts/by-date/:topic_id/:date" => "posts#by_date"
    get "posts/by_number/:topic_id/:post_number" => "posts#by_number"
    get "private-posts" => "posts#latest", id: "private_posts", constraints: { format: /(json|rss)/ }
    get "projects/:id/repository/:repository_id/#{action}(/*path)",
    get "projects/:id/repository/:repository_id/revisions/:rev/#{action}(/*path)",
    get "pub/:slug" => "published_pages#show"
    get "pub/by-topic/:topic_id" => "published_pages#details"
    get "pub/check-slug" => "published_pages#check_slug"
    get "queries/:query_hash", to: "home#show_query", as: :show_query
    get "raw/:topic_id(/:post_number)" => "posts#markdown_num"
    get "repositories/:repo_slug/:obj_type/:slug_or_id" => 'objects#show'
    get "repositories/:repo_slug/accessions/:slug_or_id" => 'accessions#show'
    get "repositories/:repo_slug/classifications/:slug_or_id" => 'classifications#show'
    get "repositories/:repo_slug/resources/:slug_or_id" => 'resources#show'
    get "repositories/:rid/:obj_type/:id" => 'objects#show'
    get "repositories/:rid/agents" => 'agents#index'
    get "repositories/:rid/classifications/" => 'classifications#index'
    get "repositories/:rid/classifications/:id" => 'classifications#show'
    get "repositories/:rid/classifications/:id/tree/node" => 'classifications#tree_node'
    get "repositories/:rid/classifications/:id/tree/node_from_root" => 'classifications#tree_node_from_root'
    get "repositories/:rid/classifications/:id/tree/root" => 'classifications#tree_root'
    get "repositories/:rid/classifications/:id/tree/waypoint" => 'classifications#tree_waypoint'
    get "repositories/:rid/digital_objects" => 'objects#index'
    get "repositories/:rid/digital_objects/:id/tree/node" => 'digital_objects#tree_node'
    get "repositories/:rid/digital_objects/:id/tree/node_from_root" => 'digital_objects#tree_node_from_root'
    get "repositories/:rid/digital_objects/:id/tree/root" => 'digital_objects#tree_root'
    get "repositories/:rid/digital_objects/:id/tree/waypoint" => 'digital_objects#tree_waypoint'
    get "repositories/:rid/objects" => 'objects#index'
    get "repositories/:rid/records" => 'objects#index'
    get "repositories/:rid/search" => 'search#search'
    get "repositories/:rid/subjects" => 'subjects#index'
    get "repositories/:rid/top_containers/:id" => 'containers#show'
    get "repositories/:slug_or_id" => 'repositories#show'
    get "resources/:slug_or_id" => 'resources#show'
    get "review/:reviewable_id" => "reviewables#show", constraints: { reviewable_id: /\d+/ }
    get "review/:reviewable_id/explain" => "reviewables#explain", constraints: { reviewable_id: /\d+/ }
    get "review/count" => "reviewables#count"
    get "review/settings" => "reviewables#settings"
    get "review/topics" => "reviewables#topics"
    get "search/query" => "search#query"
    get "secure-media-uploads/*path(.:extension)" => "uploads#show_secure", constraints: { extension: /[a-z0-9\._]+/i }
    get "session/csrf" => "session#csrf"
    get "session/current" => "session#current"
    get "session/email-login/:token" => "session#email_login_info"
    get "session/hp" => "session#get_honeypot_value"
    get "session/otp/:token" => "session#one_time_password", constraints: { token: /[0-9a-f]+/ }
    get "session/sso" => "session#sso"
    get "session/sso_login" => "session#sso_login"
    get "session/sso_provider" => "session#sso_provider"
    get "sign_out", :to => "devise/sessions#destroy"
    get "site/basic-info" => 'site#basic_info'
    get "site/statistics" => 'site#statistics'
    get "space/:relation", to: "home#relation_space", as: :relation_space
    get "srv/status" => "forums#status"
    get "stylesheets/:name.css" => "stylesheets#show", constraints: { name: /[-a-z0-9_]+/ }
    get "stylesheets/:name.css.map" => "stylesheets#show_source_map", constraints: { name: /[-a-z0-9_]+/ }
    get "subjects/:slug_or_id" => 'subjects#show'
    get "svg-sprite/:hostname/icon(/:color)/:name.svg" => "svg_sprite#svg_icon", constraints: { hostname: /[\w\.-]+/, name: /[-a-z0-9\s\%]+/, color: /(\h{3}{1,2})/, format: :svg }
    get "svg-sprite/:hostname/svg-:theme_ids-:version.js" => "svg_sprite#show", constraints: { hostname: /[\w\.-]+/, version: /\h{40}/, theme_ids: /([0-9]+(,[0-9]+)*)?/, format: :js }
    get "svg-sprite/picker-search" => "svg_sprite#icon_picker_search", defaults: { format: :json }
    get "svg-sprite/search/:keyword" => "svg_sprite#search", format: false, constraints: { keyword: /[-a-z0-9\s\%]+/ }
    get "t/:id" => "topics#show"
    get "t/:slug/:topic_id" => "topics#show", constraints: { topic_id: /\d+/ }
    get "t/:slug/:topic_id.rss" => "topics#feed", format: :rss, constraints: { topic_id: /\d+/ }
    get "t/:slug/:topic_id/:post_number" => "topics#show", constraints: { topic_id: /\d+/, post_number: /\d+/ }
    get "t/:slug/:topic_id/last" => "topics#show", post_number: 99999999, constraints: { topic_id: /\d+/ }
    get "t/:slug/:topic_id/moderator-liked" => "topics#moderator_liked", constraints: { topic_id: /\d+/ }
    get "t/:slug/:topic_id/print" => "topics#show", format: :html, print: true, constraints: { topic_id: /\d+/ }
    get "t/:slug/:topic_id/summary" => "topics#show", defaults: { summary: true }, constraints: { topic_id: /\d+/ }
    get "t/:slug/:topic_id/wordpress" => "topics#wordpress", constraints: { topic_id: /\d+/ }
    get "t/:topic_id/:post_number" => "topics#show", constraints: { topic_id: /\d+/, post_number: /\d+/ }
    get "t/:topic_id/excerpts" => "topics#excerpts", constraints: { topic_id: /\d+/ }, format: :json
    get "t/:topic_id/last" => "topics#show", post_number: 99999999, constraints: { topic_id: /\d+/ }
    get "t/:topic_id/post_ids" => "topics#post_ids", constraints: { topic_id: /\d+/ }, format: :json
    get "t/:topic_id/posts" => "topics#posts", constraints: { topic_id: /\d+/ }, format: :json
    get "t/:topic_id/summary" => "topics#show", constraints: { topic_id: /\d+/ }
    get "t/:topic_id/wordpress" => "topics#wordpress", constraints: { topic_id: /\d+/ }
    get "t/id_for/:slug" => "topics#id_for_slug"
    get "theme-javascripts/:digest.js" => "theme_javascripts#show", constraints: { digest: /\h{40}/ }
    get "theme-javascripts/tests/:theme_id.js" => "theme_javascripts#show_tests"
    get "tool_proxy/:tool_proxy_guid/tool_setting", controller: 'lti/ims/tool_setting', action: :show, as: :show_tool_proxy_lti_tool_settings
    get "tool_settings/:tool_setting_id",  controller: 'lti/ims/tool_setting', action: :show, as: :show_lti_tool_settings
    get "topics/feature_stats"
    get "uploads/:site/:id/:sha" => "uploads#show", constraints: { site: /\w+/, id: /\d+/, sha: /\h{16}/, format: /.*/ }
    get "uploads/:site/:sha(.:extension)" => "uploads#show", constraints: { site: /\w+/, sha: /\h{40}/, extension: /[a-z0-9\._]+/i }
    get "uploads/:site/original/:tree:sha(.:extension)" => "uploads#show", constraints: { site: /\w+/, tree: /([a-z0-9]+\/)+/i, sha: /\h{40}/, extension: /[a-z0-9\._]+/i }
    get "uploads/short-url/:base62(.:extension)" => "uploads#show_short", constraints: { site: /\w+/, base62: /[a-zA-Z0-9]+/, extension: /[a-zA-Z0-9\._-]+/i }, as: :upload_short
    get "user-badges/:username" => "user_badges#username", constraints: { username: RouteFormat.username }
    get "user-badges/:username.json" => "user_badges#username", constraints: { username: RouteFormat.username }, defaults: { format: :json }
    get "user_avatar/:hostname/:username/:size/:version.png" => "user_avatars#show", constraints: { hostname: /[\w\.-]+/, size: /\d+/, username: RouteFormat.username, format: :png }
    get "users/confirm_destroy/:token", to: "users#confirm_destroy", as: :user_confirm_destroy
    get '/' => 'topics#search', as: :messageboards_search
    get '/', to: 'account_activations#show', as: :account_activation
    get '/*ark_tag/:naan/:id' => 'ark_name#show', constraints: { ark_tag: 'ark:' }
    get '/*id' => 'pages#show', as: "page", controller: 'pages', constraints: lambda { |request|
    get '/:locale/' => 'pages#homepage', constraints: {locale: /#{Spina.config.locales.join('|')}/ }
    get '/:locale/*id' => 'pages#show', constraints: {locale: /#{Spina.config.locales.join('|')}/ }
    get '/:locale/admin2(*all)', to: redirect('/%{locale}/admin%{all}')
    get '/:messageboard_id(.:format)' => 'topics#search', as: :messageboard_search
    get '/:person_id/settings/payments' => 'payment_settings#index', :as => :person_payment_settings
    get '/:person_id/settings/payments/paypal_account' => 'paypal_accounts#index', :as => :paypal_account_settings_payment
    get '/:person_id/settings/profile', to: redirect("/%{person_id}/settings") #needed to keep old links working
    get '/:user_uid/change_password', to: 'users#change_password', as: :change_password
    get '/:user_uid/delete_account', to: 'users#delete_account', as: :delete_account
    get '/:user_uid/edit', to: 'users#edit', as: :edit_user
    get '/:user_uid/recordings', to: 'users#recordings', as: :get_user_recordings
    get '/Actor/:actor_id/top_movies' => 'actors#top_movies'
    get '/account_link', to: 'store#account_link', as: :account_link
    get '/admin', to: 'admin#index', as: :admin
    get '/admin', to: redirect('/p/admin')
    get '/admin2', to: redirect('/admin')
    get '/api', to: 'swagger#index'
    get '/api_tokens', to: 'store#api_tokens'
    get '/c', to: redirect(relative_url_root + 'categories')
    get '/canvadoc_session', controller: 'canvadoc_sessions', action: 'show', as: :canvadoc_session
    get '/cart', to: 'orders#edit', as: :cart
    get '/cart_link', to: 'store#cart_link', as: :cart_link
    get '/checkout', to: 'checkout#edit', as: :checkout
    get '/checkout/:state', to: 'checkout#edit', as: :checkout_state
    get '/checkout/registration', to: 'checkout#registration', as: :checkout_registration
    get '/config', to: 'config#show'
    get '/config/money', to: 'config#money'
    get '/confirm' => 'user_confirmations#show', :as => :confirmation
    get '/content/cvv', to: 'content#cvv', as: :cvv
    get '/content/test', to: 'content#test'
    get '/crocodoc_session', controller: 'crocodoc_sessions', action: 'show', as: :crocodoc_session
    get '/currency/set', to: 'currency#set', as: :set_currency
    get '/current_presentation', to: 'rooms#current_presentation'
    get '/edit', to: 'account_activations#edit', as: :edit_account_activation
    get '/edit/:user_uid', to: 'admins#edit_user', as: :admin_edit_user
    get '/highlights',            controller: 'my/highlights', action: :index, as: 'dashboard_highlights'
    get '/highlights/facet/:id',  controller: 'my/highlights', action: :facet, as: 'dashboard_highlights_facet'
    get '/highlights/page/:page', controller: 'my/highlights', action: :index
    get '/impersonate/:id', to: 'sessions#impersonate', as: :impersonate
    get '/locale/set', to: 'locale#set', as: :set_locale
    get '/locales', to: 'locale#index', as: :locales
    get '/login' => 'user_sessions#new', :as => :login
    get '/logout' => 'user_sessions#destroy', :as => :logout
    get '/logout', to: 'rooms#logout', as: :logout_room
    get '/merge_list', to: 'admins#merge_list', as: :merge_list
    get '/onpay'      => 'onpay_rails/base#index'
    get '/onpay/api'  => 'onpay_rails/base#api'
    get '/openapi', to: 'swagger#openapi'
    get '/orders/mine', to: 'orders#mine', as: 'my_orders'
    get '/p/admin/dashboard', to: redirect('/admin')
    get '/password/change' => 'user_passwords#edit', :as => :edit_password
    get '/password/recover' => 'user_passwords#new', :as => :recover_password
    get '/primary', to: 'themes#index', as: :themes_primary
    get '/product_carousel/:id', to: 'taxons#product_carousel'
    get '/products/:id/related', to: 'products#related'
    get '/products/:product_slug/stock', to: "stock_items#index", as: :product_stock
    get '/recordings', to: 'admins#server_recordings', as: :admin_recordings
    get '/repositories', to: 'repositories#index'
    get '/reset', to: 'admins#reset', as: :admin_reset
    get '/roles', to: 'admins#roles', as: :admin_roles
    get '/room_configuration', to: 'admins#room_configuration', as: :admin_room_configuration
    get '/room_settings', to: 'rooms#room_settings'
    get '/rooms', to: 'admins#server_rooms', as: :admin_rooms
    get '/search', to: 'search#search'
    get '/search/products', to: "search#products", as: :search_products
    get '/search/users', to: "search#users", as: :search_users
    get '/shared_users', to: 'rooms#shared_users', as: :room_shared_users
    get '/shares',            controller: 'my/shares', action: :index, as: 'dashboard_shares'
    get '/shares/facet/:id',  controller: 'my/shares', action: :facet, as: 'dashboard_shares_facet'
    get '/shares/page/:page', controller: 'my/shares', action: :index
    get '/sign_in' => 'clearance/sessions#new', as: 'sign_in'
    get '/sign_up' => 'users#new', as: 'sign_up' if Clearance.configuration.allow_sign_up?
    get '/signup' => 'user_registrations#new', :as => :signup
    get '/site_settings', to: 'admins#site_settings', as: :admin_site_settings
    get '/swagger', to: 'swagger#index'
    get '/t/*id', to: 'taxons#show', as: :nested_taxons
    get '/taxons/products', to: 'taxons#products', as: :taxon_products
    get '/welcome', to: 'welcome#show'
    get ':category_name/:entry_name' => 'eportfolio_entries#show', as: :named_category_entry
    get 'accept_invitation/:uuid' => 'groups#accept_invitation', as: :accept_invitation
    get 'activate/:activation_code' => 'activations#create', :as => :activate
    get 'agents/search' => 'agents#search'
    get 'announcements/:feed_code' => 'announcements#public_feed', as: :feeds_announcements
    get 'announcements/:feed_code.:format' => 'announcements#public_feed', as: :feeds_announcements_format
    get 'app_settings/edit',          to: 'app_settings#edit',          as: :edit_app_settings
    get 'assignments/by_lti_id/:lti_assignment_id', action: :show_by_lti_id
    get 'calendars/:feed_code' => 'calendar_events_api#public_feed', as: :feeds_calendar
    get 'calendars/:feed_code.:format' => 'calendar_events_api#public_feed', as: :feeds_calendar_format
    get 'classifications/search' => 'classifications#search'
    get 'collections/:parent_id/under', controller: 'nest_collections', action: 'create_collection_under', as: 'create_subcollection_under'
    get 'confluence/edit',          to: 'confluence#edit',          as: :edit_confluence
    get 'conversations/:feed_code' => 'conversations#public_feed', as: :feeds_conversation
    get 'conversations/:feed_code.:format' => 'conversations#public_feed', as: :feeds_conversation_format
    get 'conversations/find_recipients', controller: :conversations, action: :find_recipients
    get 'conversations/find_recipients', controller: :search, action: :recipients
    get 'courses/:course_id/assignment_groups', controller: :assignment_groups, action: :index
    get 'courses/:feed_code' => 'courses#public_feed', as: :feeds_course
    get 'courses/:feed_code.:format' => 'courses#public_feed', as: :feeds_course_format
    get 'courses/:id' => 'accounts#courses_redirect', as: :courses_redirect
    get 'details/sis_publish' => 'courses#sis_publish_status', as: :sis_publish_status
    get 'discussion_topics/:id/:extras' => 'discussion_topics#show', as: :map, extras: /.+/
    get 'embed/comments' => 'embed#comments'
    get 'embed/count' => 'embed#count'
    get 'embed/info' => 'embed#info'
    get 'embed/topics' => 'embed#topics'
    get 'enrollments/:feed_code' => 'courses#public_feed', as: :feeds_enrollment
    get 'enrollments/:feed_code.:format' => 'courses#public_feed', as: :feeds_enrollment_format
    get 'eportfolios/:eportfolio_id.:format' => 'eportfolios#public_feed', as: :feeds_eportfolio
    get 'external_tools/:id' => 'users#external_tool', as: :external_tool
    get 'external_tools/sessionless_launch' => 'external_tools#sessionless_launch'
    get 'file_contents/:file_path' => 'files#show_relative', as: :relative_file_path, file_path: /.+/
    get 'files/:id/:verifier' => 'files#assessment_question_show', as: :verified_file, download: '1'
    get 'files/:id/create_success', controller: :files, action: :api_create_success
    get 'files/:id/download' => 'files#assessment_question_show', as: :map, download: '1'
    get 'files/:id/preview' => 'files#assessment_question_show', preview: '1'
    get 'forums/:feed_code' => 'discussion_topics#public_feed', as: :feeds_forum
    get 'forums/:feed_code.:format' => 'discussion_topics#public_feed', as: :feeds_forum_format
    get 'gems/:id.json'
    get 'google/edit',          to: 'google#edit',          as: :edit_google
    get 'grades/:id' => 'gradebooks#grade_summary', as: :student_grades
    get 'groups/:feed_code' => 'groups#public_feed', as: :feeds_group
    get 'groups/:feed_code.:format' => 'groups#public_feed', as: :feeds_group_format
    get 'harvest/edit',          to: 'harvest#edit',          as: :edit_harvest
    get 'harvest/refresh_token', to: 'harvest#refresh_token', as: :refresh_harvest_token
    get 'imports/list' => 'content_imports#index', as: :import_list
    get 'issues/:copy_from/copy', :to => 'issues#new', :as => 'copy_issue'
    get 'lti/basic_lti_launch_request/:message_handler_id', controller: 'lti/message',
    get 'lti/registration_return', controller: 'lti/message', action: 'registration_return',
    get 'lti/resource/:resource_link_id', controller: 'lti/message',
    get 'lti/tool_proxy_reregistration/:tool_proxy_id', controller: 'lti/message', action: 'reregistration',
    get 'lti_collaborations/*all' => 'collaborations#lti_index'
    get 'mail_settings/edit', to: 'mail_settings#edit',   as: :edit_mail_settings
    get 'modules/items/:id' => 'context_modules#item_redirect', as: :context_modules_item_redirect
    get 'modules/items/:id/choose' => 'context_modules#choose_mastery_path'
    get 'modules/items/:id/edit_mastery_paths' => 'context_modules#item_redirect_mastery_paths'
    get 'modules/items/assignment_info' => 'context_modules#content_tag_assignment_data', as: :context_modules_assignment_info
    get 'modules/items/master_course_info' => 'context_modules#content_tag_master_course_data', as: :context_modules_master_course_info
    get 'modules/items/sequence/:id' => 'context_modules#item_details', as: :context_modules_item_details
    get 'mylyn/attachment/:id/:filename', :to => 'attachments#download', :format=> 'xml', :id => /\d+/, :filename => /.*/, :format => 'xml'
    get 'mylyn/authtest', :controller => 'mylyn_connector/information', :action => 'authtest', :format=> 'xml'
    get 'objects/search' => 'objects#search'
    get 'outcomes/users/:user_id' => 'outcomes#user_outcome_results', as: :user_outcomes_results
    get 'pages/*path/children', to: 'pages#children', as: 'children_pages'
    get 'pages/*path/edit', to: 'pages#edit', as: 'edit_page'
    get 'scorecard/:id' => :show
    get 'search(/:tab)', action: :course_user_search
    get 'self_enrollment/:self_enrollment' => 'courses#self_enrollment', as: :self_enrollment
    get 'smart/app' => :app
    get 'smart/app/show' => :show
    get 'smart/cfg' => :cfg
    get 'smart/launch' => :launch
    get 'statistics/over_time/:attribute' => 'accounts#statistics_graph', as: :statistics_graph
    get 'statistics/over_time/:attribute.:format' => 'accounts#statistics_graph', as: :formatted_statistics_graph
    get 'subjects/search' => 'subjects#search'
    get 'submission/by_tc_id/:tc_submission_id', action: :show_by_tc_id
    get 'teacher_activity/course/:course_id' => 'users#teacher_activity', as: :course_teacher_activity
    get 'teacher_activity/student/:student_id' => 'users#teacher_activity', as: :student_teacher_activity
    get 'tool_proxy/:tool_proxy_guid/submissions/:tc_submission_id/retrieve',
    get 'tool_proxy/obtain_guid/:proxy_id', action: :show_guid_by_id
    get 'tool_proxy/obtain_guid/assignment/:assignment_tc_id', action: :show_guid_by_assignment_tc_id
    get 'topics/:discussion_topic_id/:feed_code' => 'discussion_entries#public_feed', as: :feeds_topic
    get 'topics/:discussion_topic_id/:feed_code.:format' => 'discussion_entries#public_feed', as: :feeds_topic_format
    get 'topics/similar_to' => 'similar_topics#index'
    get 'users/:feed_code' => 'users#public_feed', as: :feeds_user
    get 'users/:feed_code.:format' => 'users#public_feed', as: :feeds_user_format
    get 'users/:id' => 'context#roster_user', as: :user
    get 'users/:user_id/avatars', controller: :profile, action: :profile_pics
    get 'users/:user_id/delete' => 'accounts#confirm_delete_user', as: :confirm_delete_user
    get 'users/:user_id/page_views', controller: :page_views, action: :index, as: 'user_page_views'
    get 'users/:user_id/profile', controller: :profile, action: :settings
    get 'users/:user_id/usage' => 'context#roster_user_usage', as: :user_usage
    get 'users/prior' => 'context#prior_users', as: :prior_users
    get 'wiki/:id' => 'wiki_pages#show_redirect', id: /[^\/]+/
    get 'wiki/:id/:version', :to => 'wiki#show', :constraints => {:version => /\d+/}
    get 'wiki/:id/:version/annotate', :to => 'wiki#annotate'
    get 'wiki/:id/:version/diff', :to => 'wiki#diff'
    get 'wiki/:id/revisions' => 'wiki_pages#revisions_redirect', id: /[^\/]+/
    get 'wiki/:id/revisions/:revision_id' => 'wiki_pages#revisions_redirect', id: /[^\/]+/
    get 'wizard/steps' => 'steps#index'
    get 'wizard/steps/:id' => "wizard#index"
    get 'works/facet/:id',  controller: 'works', action: :facet, as: 'works_facet'
    locale = params[:locale] + "/" if params[:locale]
    map.connect ':controller/:action'
    map.connect 'mylyn/authtest', :controller => 'MylynConnector::Information', :action => 'authtest', :conditions => {:method => :get}
    match "#{context.pluralize}/:#{context}_id/external_content/success/:service" => 'external_content#success', as: "#{context}_external_content_success", via: [:get, :post]
    match "#{context.pluralize}/:#{context}_id/external_content/success/:service/:id" => 'external_content#success', as: "#{context}_external_content_update", via: [:get, :post]
    match "/404", to: "exceptions#not_found", via: [:get, :post]
    match "/auth/:provider/callback", to: "users/omniauth_callbacks#complete", via: [:get, :post]
    match "/auth/failure", to: "users/omniauth_callbacks#failure", via: [:get, :post]
    match '/:provider/callback', to: 'sessions#create',  via: [:get, :post]
    match '/api_docs/proxy' => 'api_docs/proxy#show', via: [:get, :post]
    match '/estimate_timelog/:action', :controller => 'estimate_timelog', :via => [:get, :post]
    match 'wiki/index', :controller => 'wiki', :action => 'index', :via => :get
    mount DeveloperPortal::Engine, at: "/", as: :developer_portal
    mount GraphiQL::Rails::Engine, at: "/graphiql", graphql_path: "/graphql"
    mount GraphiQL::Rails::Engine, at: '/graphiql', graphql_path: '/graphql'
    mount Sidekiq::Prometheus::Exporter, at: '/metrics'
    mount Sidekiq::Web => "/sidekiq"
    mount Sidekiq::Web, at: '/sidekiq'
    mount Sidekiq::Web, at: '/sidekiq' if ENV['SIDEKIQ_PASSWORD'].present?
    mount Yabeda::Prometheus::Exporter, at: '/yabeda-metrics'
    patch "/chat_channel_memberships/leave_membership/:id", to: "chat_channel_memberships#leave_membership"
    patch "/chat_channel_memberships/update_membership/:id", to: "chat_channel_memberships#update_membership"
    patch "/chat_channel_memberships/update_membership_role/:id", to: "chat_channel_memberships#update_membership_role"
    patch "/chat_channels/update_channel/:id", to: "chat_channels#update_channel"
    patch "/hide", to: "comments#hide"
    patch "/messages/:id", to: "messages#update"
    patch "/onboarding_checkbox_update", to: "users#onboarding_checkbox_update"
    patch "/onboarding_update", to: "users#onboarding_update"
    patch "/settings/:plugin", to: "settings#update", as: :settings
    patch "/tag/:id", to: "tags#update"
    patch "/unhide", to: "comments#unhide"
    patch '/', to: 'rooms#update', as: :update_room
    patch '/cart', to: 'orders#update', as: :update_cart
    patch '/checkout/update/:state', to: 'checkout#update', as: :update_checkout
    patch 'pages/*path', to: 'pages#update', as: 'update_page'
    patch 'roles/order', to: 'admins#change_role_order', as: :admin_roles_order
    post "#{prefix}/deep_linking_response", controller: 'lti/ims/deep_linking', action: :deep_linking_response, as: "#{context}_deep_linking_response"
    post "/associate/:token", to: "users/associate_accounts#connect", constraints: { token: /\h{32}/ }
    post "/chat_channel_memberships/add_membership", to: "chat_channel_memberships#add_membership"
    post "/chat_channel_memberships/create_membership_request", to: "chat_channel_memberships#create_membership_request"
    post "/chat_channel_memberships/remove_membership", to: "chat_channel_memberships#remove_membership"
    post "/chat_channels/:id/moderate", to: "chat_channels#moderate"
    post "/chat_channels/:id/open", to: "chat_channels#open"
    post "/chat_channels/block_chat", to: "chat_channels#block_chat"
    post "/chat_channels/create_chat", to: "chat_channels#create_chat"
    post "/create_channel", to: "chat_channels#create_channel"
    post "/create_trial_marketplace" => "marketplaces#create"
    post "/direct_uploads" => "active_storage/direct_uploads#create", as: :rails_direct_uploads
    post "/do-not-disturb" => "do_not_disturb#create"
    post "/fallback_activity_recorder", to: "ga_events#create"
    post "/join_chat_channel", to: "chat_channel_memberships#join_channel"
    post "/joining_invitation_response", to: "chat_channel_memberships#joining_invitation_response"
    post "/listings/:listing_id/booked"    => "preauthorize_transactions#initiated", as: :booked # POST request, no redirect
    post "/listings/:listing_id/create_contact" => "free_transactions#create_contact", :as => :create_contact
    post "/listings/:listing_id/initiated" => "preauthorize_transactions#initiated", :as => :initiated_order
    post "/mailchimp/:secret/unsubscribe", to: "mailchimp_unsubscribes#create", as: :mailchimp_unsubscribe
    post "/notification_subscriptions/:notifiable_type/:notifiable_id", to: "notification_subscriptions#upsert"
    post "/push_notifications/subscribe" => "push_notification#subscribe"
    post "/push_notifications/unsubscribe" => "push_notification#unsubscribe"
    post "/pusher/auth", to: "pusher#auth"
    post "/safe-mode" => "safe_mode#enter", as: "safe_mode_enter"
    post "/user-api-key" => "user_api_keys#create"
    post "/user-api-key/otp" => "user_api_keys#create_otp"
    post "/user-api-key/revoke" => "user_api_keys#revoke"
    post "/user-api-key/undo-revoke" => "user_api_keys#undo_revoke"
    post "articles/preview", to: "articles#preview"
    post "badges/award_badges", to: "badges#award_badges"
    post "caliper/:token", controller: :lti_api, action: :caliper_service, as: "lti_caliper"
    post "categories/reorder" => "categories#reorder"
    post "comments/preview", to: "comments#preview"
    post "email/unsubscribe/:key" => "email#perform_unsubscribe", as: "email_perform_unsubscribe"
    post "finish-installation/register" => "finish_installation#register"
    post "invites/destroy-all-expired" => "invites#destroy_all_expired"
    post "invites/reinvite" => "invites#resend_invite"
    post "invites/reinvite-all" => "invites#resend_all_invites"
    post "invites/upload_csv" => "invites#upload_csv"
    post "logout_service/:token", controller: :lti_api, action: :logout_service, as: "lti_logout_service"
    post "organizations/generate_new_secret", to: "organizations#generate_new_secret"
    post "repositories/:rid/resources/:id/pdf" => 'pdf#resource'
    post "search/click" => "search#click"
    post "session/email-login/:token" => "session#email_login"
    post "session/otp/:token" => "session#one_time_password", constraints: { token: /[0-9a-f]+/ }
    post "t/:topic_id/change-owner" => "topics#change_post_owners", constraints: { topic_id: /\d+/ }
    post "t/:topic_id/invite" => "topics#invite", constraints: { topic_id: /\d+/ }
    post "t/:topic_id/invite-group" => "topics#invite_group", constraints: { topic_id: /\d+/ }
    post "t/:topic_id/merge-topic" => "topics#merge_topic", constraints: { topic_id: /\d+/ }
    post "t/:topic_id/move-posts" => "topics#move_posts", constraints: { topic_id: /\d+/ }
    post "t/:topic_id/notifications" => "topics#set_notifications" , constraints: { topic_id: /\d+/ }
    post "t/:topic_id/timer" => "topics#timer", constraints: { topic_id: /\d+/ }
    post "t/:topic_id/timings" => "topics#timings", constraints: { topic_id: /\d+/ }
    post "tools/:tool_id/ext_grade_passback", controller: :lti_api, action: :legacy_grade_passback, as: "blti_legacy_grade_passback_api"
    post "tools/:tool_id/grade_passback", controller: :lti_api, action: :grade_passback, as: "lti_grade_passback_api"
    post "topics/timings"
    post "turnitin/outcomes_placement/:tool_id", controller: :lti_api, action: :turnitin_outcomes_placement, as: "lti_turnitin_outcomes_placement"
    post "uploads/lookup-metadata" => "uploads#metadata"
    post "uploads/lookup-urls" => "uploads#lookup_urls"
    post "user_avatar/:username/refresh_gravatar" => "user_avatars#refresh_gravatar", constraints: { username: RouteFormat.username }
    post "users/add_org_admin", to: "users#add_org_admin"
    post "users/api_secrets", to: "api_secrets#create", as: :users_api_secrets
    post "users/join_org", to: "users#join_org"
    post "users/leave_org/:organization_id", to: "users#leave_org", as: :users_leave_org
    post "users/remove_from_org", to: "users#remove_from_org"
    post "users/remove_org_admin", to: "users#remove_org_admin"
    post "users/request_destroy", to: "users#request_destroy", as: :user_request_destroy
    post "users/update_password", to: "users#update_password", as: :user_update_password
    post "webhooks/aws" => "webhooks#aws"
    post "webhooks/mailgun"  => "webhooks#mailgun"
    post "webhooks/mailjet"  => "webhooks#mailjet"
    post "webhooks/mandrill" => "webhooks#mandrill"
    post "webhooks/postmark" => "webhooks#postmark"
    post "webhooks/sendgrid" => "webhooks#sendgrid"
    post "webhooks/sparkpost" => "webhooks#sparkpost"
    post "xapi/:token", controller: :lti_api, action: :xapi_service, as: "lti_xapi"
    post '/', to: 'rooms#join'
    post '/:person_id/settings/payments' => 'payment_settings#create', :as => :create_person_payment_settings
    post '/:user_uid/change_password', to: 'users#update_password', as: :update_password
    post '/:user_uid/edit', to: 'users#update', as: :update_user
    post '/actions/approve' => 'actions#approve'
    post '/actions/disapprove' => 'actions#disapprove'
    post '/approve/:user_uid', to: 'admins#approve', as: :admin_approve
    post '/ban/:user_uid', to: 'admins#ban_user', as: :admin_ban
    post '/canvadoc_session', controller: 'canvadoc_sessions', action: 'create'
    post '/cite', to: 'cite#show'
    post '/clear_auth', to: 'admins#clear_auth', as: :admin_clear_auth
    post '/clear_cache', to: 'admins#clear_cache', as: :admin_clear_cache
    post '/coloring', to: 'admins#coloring', as: :admin_coloring
    post '/community_memberships/give_consent'    => 'community_memberships#give_consent', as: :give_consent
    post '/courses/:course_id/assignments/:assignment_id/submissions/:user_id/annotation_notification', action: :annotation_notification, controller: :submission_comments_api
    post '/ensure_cart', to: 'store#ensure_cart'
    post '/invite', to: 'admins#invite', as: :invite_user
    post '/log_level', to: 'admins#log_level', as: :admin_log_level
    post '/login' => 'user_sessions#create', :as => :create_new_session
    post '/login', to: 'rooms#login', as: :login_room
    post '/login', to: 'sessions#create', as: :create_session
    post '/logout', to: 'sessions#destroy'
    post '/merge/:user_uid', to: 'admins#merge_user', as: :merge_user
    post '/password/recover' => 'user_passwords#create', :as => :reset_password
    post '/preupload_presentation', to: 'rooms#preupload_presentation'
    post '/registration_method', to: 'admins#registration_method', as: :admin_change_registration
    post '/remove_presentation', to: 'rooms#remove_presentation'
    post '/resend', to: 'account_activations#resend', as: :resend_email
    post '/role', to: 'admins#new_role', as: :admin_new_role
    post '/role/:role_id', to: 'admins#update_role', as: :admin_update_role
    post '/session', to: 'session#create'
    post '/signup' => 'user_registrations#create', :as => :registration
    post '/start', to: 'rooms#start', as: :start_room
    post '/unban/:user_uid', to: 'admins#unban_user', as: :admin_unban
    post '/undelete', to: 'admins#undelete', as: :admin_undelete
    post '/update_room_configuration', to: 'admins#update_room_configuration', as: :admin_update_room_configuration
    post '/update_settings', to: 'admins#update_settings', as: :admin_update_settings
    post '/update_settings', to: 'rooms#update_settings'
    post '/update_shared_access', to: 'rooms#shared_access', as: :room_shared_access
    post ':eportfolio_category_id/reorder_entries' => 'eportfolios#reorder_entries', as: :reorder_entries
    post 'announcements/external_feeds' => 'announcements#create_external_feed'
    post 'assignments/:assignment_tc_id/submissions/:submission_tc_id/originality_report',
    post 'assignments/:lti_assignment_id/update', action: :update, as: :assignment_update
    post 'assignments/configure', action: :configure, as: :assignment_configuration
    post 'assignments/publish/quiz'   => 'assignments#publish_quizzes'
    post 'assignments/unpublish/quiz' => 'assignments#unpublish_quizzes'
    post 'collections/:child_id/remove_parent/:parent_id', controller: 'nest_collections', action: 'remove_relationship_above', as: 'remove_parent_relationship_above'
    post 'collections/:child_id/within', controller: 'nest_collections', action: 'create_relationship_within', as: 'create_nest_collection_within'
    post 'collections/:id', controller: 'collection_members', action: :update_members
    post 'collections/:parent_id/remove_child/:child_id', controller: 'nest_collections', action: 'remove_relationship_under', as: 'remove_child_relationship_under'
    post 'collections/:parent_id/under', controller: 'nest_collections', action: 'create_relationship_under', as: 'create_nest_collection_under'
    post 'details/sis_publish' => 'courses#publish_to_sis', as: :publish_to_sis
    post 'files/:id/create_success', controller: :files, action: :api_create_success, as: 'files_create_success'
    post 'issues/new', :to => 'issues#new'
    post 'limit_user_grading/:id' => 'courses#limit_user', as: :limit_user_grading
    post 'lti/tool_proxy_registration', controller: 'lti/message', action: 'registration', as: :tool_proxy_registration
    post 'move_enrollment/:id' => 'courses#move_enrollment', as: :move_enrollment
    post 'quizzes/new' => 'quizzes/quizzes#new' # use POST instead of GET (not idempotent)
    post 'quizzes/publish'   => 'quizzes/quizzes#publish'
    post 'quizzes/unpublish' => 'quizzes/quizzes#unpublish'
    post 'scorecard/score_paste' => :score_paste
    post 'scorecard/score_upload' => :score_upload
    post 'scorecard/score_url' => :score_url
    post 'self_unenrollment/:self_unenrollment' => 'courses#self_unenrollment', as: :self_unenrollment
    post 'smart/cfg' => :update_cfg
    post 'student_view(/:redirect_to_referer)' => 'courses#student_view', as: :student_view
    post 'submission/index', action: :index
    post 'unconclude_user/:id' => 'courses#unconclude_user', as: :unconclude_user_enrollment
    post 'undelete/:asset_string' => 'context#undelete_item', as: :undelete_item
    prefix = "#{context}s/:#{context}_id"
    put  "/disk/:encoded_token" => "active_storage/disk#update", as: :update_rails_disk_service
    put "/invites/:id" => "invites#update"
    put "admin/groups/:id/members" => "groups#add_members", constraints: AdminConstraint.new
    put "finish-installation/resend-email" => "finish_installation#resend_email"
    put "invites/show/:id" => "invites#perform_accept_invitation", as: 'perform_accept_invite'
    put "pub/by-topic/:topic_id" => "published_pages#upsert"
    put "review/:reviewable_id" => "reviewables#update", constraints: { reviewable_id: /\d+/ }
    put "review/:reviewable_id/perform/:action_id" => "reviewables#perform", constraints: {
    put "review/settings" => "reviewables#settings"
    put "t/:id" => "topics#update"
    put "t/:id/archive-message" => "topics#archive_message"
    put "t/:id/convert-topic/:type" => "topics#convert_topic"
    put "t/:id/move-to-inbox" => "topics#move_to_inbox"
    put "t/:id/publish" => "topics#publish"
    put "t/:id/reset-bump-date" => "topics#reset_bump_date"
    put "t/:id/shared-draft" => "topics#update_shared_draft"
    put "t/:slug/:topic_id" => "topics#update", constraints: { topic_id: /\d+/ }
    put "t/:slug/:topic_id/star" => "topics#star", constraints: { topic_id: /\d+/ }
    put "t/:slug/:topic_id/status" => "topics#status", constraints: { topic_id: /\d+/ }
    put "t/:topic_id/bookmark" => "topics#bookmark", constraints: { topic_id: /\d+/ }
    put "t/:topic_id/change-timestamp" => "topics#change_timestamps", constraints: { topic_id: /\d+/ }
    put "t/:topic_id/clear-pin" => "topics#clear_pin", constraints: { topic_id: /\d+/ }
    put "t/:topic_id/make-banner" => "topics#make_banner", constraints: { topic_id: /\d+/ }
    put "t/:topic_id/mute" => "topics#mute", constraints: { topic_id: /\d+/ }
    put "t/:topic_id/re-pin" => "topics#re_pin", constraints: { topic_id: /\d+/ }
    put "t/:topic_id/recover" => "topics#recover", constraints: { topic_id: /\d+/ }
    put "t/:topic_id/remove-allowed-group" => "topics#remove_allowed_group", constraints: { topic_id: /\d+/ }
    put "t/:topic_id/remove-allowed-user" => "topics#remove_allowed_user", constraints: { topic_id: /\d+/ }
    put "t/:topic_id/remove-banner" => "topics#remove_banner", constraints: { topic_id: /\d+/ }
    put "t/:topic_id/remove_bookmarks" => "topics#remove_bookmarks", constraints: { topic_id: /\d+/ }
    put "t/:topic_id/slow_mode" => "topics#set_slow_mode", constraints: { topic_id: /\d+/ }
    put "t/:topic_id/star" => "topics#star", constraints: { topic_id: /\d+/ }
    put "t/:topic_id/status" => "topics#status", constraints: { topic_id: /\d+/ }
    put "t/:topic_id/tags" => "topics#update_tags", constraints: { topic_id: /\d+/ }
    put "t/:topic_id/unmute" => "topics#unmute", constraints: { topic_id: /\d+/ }
    put "tool_proxy/:tool_proxy_guid/tool_setting", controller: 'lti/ims/tool_setting', action: :update, as: :update_tool_proxy_lti_tool_settings
    put "tool_settings/:tool_setting_id",  controller: 'lti/ims/tool_setting', action: :update, as: :update_lti_tool_settings
    put "topics/bulk"
    put "topics/reset-new" => 'topics#reset_new'
    put '/:person_id/settings/payments' => 'payment_settings#update', :as => :update_person_payment_settings
    put '/cart/empty', to: 'orders#empty', as: :empty_cart
    put '/checkout/registration', to: 'checkout#update_registration', as: :update_checkout_registration
    put '/classifications', to: 'classifications#update', as: :classifications
    put '/locale/set', to: 'locale#set', defaults: { format: :json }, as: :set_locale
    put '/mercury_update' => "mercury_update#update", :as => :mercury_update
    put '/password/change' => 'user_passwords#update', :as => :update_password
    put 'api/v1/api_key/reset'
    put 'api/v1/gems/unyank'
    put 'api_key/reset'
    put 'assignments/:assignment_tc_id/submissions/:submission_tc_id/originality_report/:or_tc_id',
    put 'auto_mail/:auto_mail', to: 'mail_settings#update_auto_mail', as: :update_auto_mail
    put 'modules/items/:id' => 'context_modules#update_item', as: :context_modules_update_item
    put 'wizard/steps/:id' => "steps#update"
    rb.resource   :task,             :except => :index,             :controller => :rb_tasks,           :as => "task/:id"
    rb.resource   :taskboard,        :only => :current,             :controller => :rb_taskboards,      :as => "projects/:project_id/taskboard"
    rb.resource   :taskboard,        :only => :show,                :controller => :rb_taskboards,      :as => "taskboards/:sprint_id"
    rb.resources  :tasks,            :only => :index,               :controller => :rb_tasks,           :as => "tasks/:story_id"
    relative_url_root = (defined?(Rails.configuration.relative_url_root) && Rails.configuration.relative_url_root) ? Rails.configuration.relative_url_root + '/' : '/'
    require "sidekiq/cron/web"
    require "sidekiq/web"
    require "sidekiq_unique_jobs/web"
    require 'sidekiq/prometheus/exporter'
    require 'yabeda/prometheus/mmap'
    resource :conference, path: "/" do
    resource :dashboard, only: :show, constraints: { format: /html|atom/ }
    resource :invitee_signup, path: "signup/:invitation_token", only: [:show, :create]
    resources :quizzes, controller: 'quizzes/quizzes', except: :new do
    resources :wiki_pages, path: :pages, except: [:update, :destroy, :new], constraints: { id: %r{[^\/]+} } do
    root :to => redirect('/p/admin')
    root to: redirect('/graphiql')
    scope "/tags" do
    scope "/topics", username: RouteFormat.username do
    scope '/:record_id' do
    scope '/api' do
    scope '/tag/:tag_id' do
    scope module: "admin", path: "/admin_old", as: "admin" do
    scope module: "admin2", path: "/admin", as: "admin2" do
    scope path: 'c/*category_slug_path_with_id' do
    scope path: 'category/:category_id' do
    scope path: 'gems/:rubygem_id' do
    scope path: nil, constraints: { format: /.*/ } do
    scope(:controller => 'quizzes/outstanding_quiz_submissions') do
    scope(controller: "quizzes/quiz_submission_events_api") do
    scope(controller: 'bookmarks/bookmarks') do
    scope(controller: 'conditional_release/rules') do
    scope(controller: 'conditional_release/stats') do
    scope(controller: 'live_assessments/assessments') do
    scope(controller: 'live_assessments/results') do
    scope(controller: 'lti/account_external_tools') do
    scope(controller: 'lti/account_lookup') do
    scope(controller: 'lti/data_services') do
    scope(controller: 'lti/feature_flags') do
    scope(controller: 'lti/ims/authentication') do
    scope(controller: 'lti/ims/line_items') do
    scope(controller: 'lti/ims/names_and_roles') do
    scope(controller: 'lti/ims/progress') do
    scope(controller: 'lti/ims/results') do
    scope(controller: 'lti/ims/scores') do
    scope(controller: 'lti/ims/security') do
    scope(controller: 'lti/lti_apps') do
    scope(controller: 'lti/originality_reports_api') do
    scope(controller: 'lti/plagiarism_assignments_api') do
    scope(controller: 'lti/public_jwk') do
    scope(controller: 'lti/submissions_api') do
    scope(controller: 'lti/subscriptions_api') do
    scope(controller: 'lti/tool_configurations_api') do
    scope(controller: 'lti/tool_proxy') do
    scope(controller: 'lti/users_api') do
    scope(controller: 'master_courses/master_templates') do
    scope(controller: 'microsoft_sync/groups') do
    scope(controller: 'polling/poll_choices') do
    scope(controller: 'polling/poll_sessions') do
    scope(controller: 'polling/poll_submissions') do
    scope(controller: 'polling/polls') do
    scope(controller: 'quizzes/course_quiz_extensions') do
    scope(controller: 'quizzes/quiz_assignment_overrides') do
    scope(controller: 'quizzes/quiz_extensions') do
    scope(controller: 'quizzes/quiz_groups') do
    scope(controller: 'quizzes/quiz_ip_filters') do
    scope(controller: 'quizzes/quiz_questions') do
    scope(controller: 'quizzes/quiz_reports') do
    scope(controller: 'quizzes/quiz_statistics') do
    scope(controller: 'quizzes/quiz_submission_files') do
    scope(controller: 'quizzes/quiz_submission_questions') do
    scope(controller: 'quizzes/quiz_submission_users') do
    scope(controller: 'quizzes/quiz_submissions_api') do
    scope(controller: 'quizzes/quizzes_api') do
    scope(controller: 'quizzes_next/quizzes_api') do
    scope(controller: 'support_helpers/crocodoc') do
    scope(controller: 'support_helpers/due_date_cache') do
    scope(controller: 'support_helpers/plagiarism_platform') do
    scope(controller: 'support_helpers/turnitin') do
  #     # (app/controllers/admin/products_controller.rb)
  #     # Directs /admin/products/* to Admin::ProductsController
  #   e.g. https://scholarsphere.psu.edu/files/gm80hv36p
  #   get 'products/:id' => 'catalog#view'
  #   get 'products/:id/purchase' => 'catalog#purchase', as: :purchase
  #   match 'products/:id' => 'catalog#view'
  #   match 'products/:id/purchase' => 'catalog#purchase', :as => :purchase
  # For details on the DSL available within this file, see http://guides.rubyonrails.org/routing.html
  # For details on the DSL available within this file, see https://guides.rubyonrails.org/routing.html
  # Keep before /:locale/ routes, because there is locale 'vi', which matches '_lp_preview'
  # Preserves existing behavior by maintaining paths to /dashboard
  # Signin/Signup routes.
  # TODO: delete /time_entries for bulk deletion
  # This means, any requests to URLs such as /products, will go to
  # Use rb/ as a URL 'namespace.' We're using a slightly different URL pattern
  # [@forem/delightful] - all routes are nested under this optional scope to
  # adds on its own (https://github.com/projectblacklight/blacklight_advanced_search/blob/release-5.x/config/routes.rb)
  # backwards compatibility with the old /dashboard url
  # config/routes.rb
  # constraint which overrides this – for example :id => /[^\/]+/
  # error handling: 3$: http://blog.plataformatec.com.br/2012/01/my-five-favorite-hidden-features-in-rails-3-2/
  # get 'attractions/create'
  # get 'attractions/destroy'
  # get 'attractions/edit'
  # get 'attractions/index'
  # get 'attractions/new'
  # get 'attractions/show'
  # get 'attractions/update'
  # get 'houses/create'
  # get 'houses/destroy'
  # get 'houses/edit'
  # get 'houses/index'
  # get 'houses/new'
  # get 'houses/show'
  # get 'houses/update'
  # get 'reviews/delete'
  # get 'reviews/edit'
  # get 'reviews/index'
  # get 'reviews/new'
  # get 'reviews/show'
  # get 'stays/create'
  # get 'users/new'
  # http://instructure.com/register/5R32s9iqwLK75Jbbj0
  # just remember to delete public/index.html.
  # localhost:3000/api/v1/login
  # match ':controller(/:action(/:id(.:format)))'
  # match ':controller(/:action(/:id))(.:format)'
  # mount ActionCable.server => '/cable'
  # only for the admin/buyers stuff that dont have admin in route name
  # prevent No route matches [GET] "/favicon.ico"
  # rubocop:disable Layout/HashAlignment
  # rubocop:disable Layout/MultilineOperationIndentation
  # rubocop:enable Layout/HashAlignment
  # rubocop:enable Layout/MultilineOperationIndentation
  # that item's uuid.  In config/initializers/active_record.rb you'll
  # to the application's ./config/routes.rb. The injected routes can be
  #match "movies/:id/similar" => "movies#similar"
  #root :to => redirect('/build/bundled/index.html')
  ApiRouteSet.draw(self, "/api/lti") do
  ApiRouteSet.draw(self, "/api/lti/v1") do
  ApiRouteSet.draw(self, '/api/sis') do
  Dir.glob File.expand_path("#{Redmine::Plugin.directory}/*") do |plugin_dir|
  add_openapi_route 'DELETE', '/v2/pet/{petId}', controller_name: 'pet', action_name: 'destroy'
  add_openapi_route 'DELETE', '/v2/store/order/{orderId}', controller_name: 'store', action_name: 'delete_order'
  add_openapi_route 'DELETE', '/v2/user/{username}', controller_name: 'user', action_name: 'destroy'
  add_openapi_route 'GET', '/v2/pet/findByStatus', controller_name: 'pet', action_name: 'find_pets_by_status'
  add_openapi_route 'GET', '/v2/pet/findByTags', controller_name: 'pet', action_name: 'find_pets_by_tags'
  add_openapi_route 'GET', '/v2/pet/{petId}', controller_name: 'pet', action_name: 'show'
  add_openapi_route 'GET', '/v2/store/inventory', controller_name: 'store', action_name: 'get_inventory'
  add_openapi_route 'GET', '/v2/store/order/{orderId}', controller_name: 'store', action_name: 'get_order_by_id'
  add_openapi_route 'GET', '/v2/user/login', controller_name: 'user', action_name: 'login_user'
  add_openapi_route 'GET', '/v2/user/logout', controller_name: 'user', action_name: 'logout_user'
  add_openapi_route 'GET', '/v2/user/{username}', controller_name: 'user', action_name: 'show'
  add_openapi_route 'POST', '/v2/pet', controller_name: 'pet', action_name: 'create'
  add_openapi_route 'POST', '/v2/pet/{petId}', controller_name: 'pet', action_name: 'update_pet_with_form'
  add_openapi_route 'POST', '/v2/pet/{petId}/uploadImage', controller_name: 'pet', action_name: 'upload_file'
  add_openapi_route 'POST', '/v2/store/order', controller_name: 'store', action_name: 'place_order'
  add_openapi_route 'POST', '/v2/user', controller_name: 'user', action_name: 'create'
  add_openapi_route 'POST', '/v2/user/createWithArray', controller_name: 'user', action_name: 'create_users_with_array_input'
  add_openapi_route 'POST', '/v2/user/createWithList', controller_name: 'user', action_name: 'create_users_with_list_input'
  add_openapi_route 'PUT', '/v2/pet', controller_name: 'pet', action_name: 'update_pet'
  add_openapi_route 'PUT', '/v2/user/{username}', controller_name: 'user', action_name: 'update'
  add_swagger_route 'DELETE', '/v2/pet/{petId}', controller_name: 'pet', action_name: 'destroy'
  add_swagger_route 'DELETE', '/v2/store/order/{orderId}', controller_name: 'store', action_name: 'delete_order'
  add_swagger_route 'DELETE', '/v2/user/{username}', controller_name: 'user', action_name: 'destroy'
  add_swagger_route 'GET', '/v2/pet/findByStatus', controller_name: 'pet', action_name: 'find_pets_by_status'
  add_swagger_route 'GET', '/v2/pet/findByTags', controller_name: 'pet', action_name: 'find_pets_by_tags'
  add_swagger_route 'GET', '/v2/pet/{petId}', controller_name: 'pet', action_name: 'show'
  add_swagger_route 'GET', '/v2/store/inventory', controller_name: 'store', action_name: 'get_inventory'
  add_swagger_route 'GET', '/v2/store/order/{orderId}', controller_name: 'store', action_name: 'get_order_by_id'
  add_swagger_route 'GET', '/v2/user/login', controller_name: 'user', action_name: 'login_user'
  add_swagger_route 'GET', '/v2/user/logout', controller_name: 'user', action_name: 'logout_user'
  add_swagger_route 'GET', '/v2/user/{username}', controller_name: 'user', action_name: 'show'
  add_swagger_route 'POST', '/v2/pet', controller_name: 'pet', action_name: 'create'
  add_swagger_route 'POST', '/v2/pet/{petId}', controller_name: 'pet', action_name: 'update_pet_with_form'
  add_swagger_route 'POST', '/v2/pet/{petId}/uploadImage', controller_name: 'pet', action_name: 'upload_file'
  add_swagger_route 'POST', '/v2/store/order', controller_name: 'store', action_name: 'place_order'
  add_swagger_route 'POST', '/v2/user', controller_name: 'user', action_name: 'create'
  add_swagger_route 'POST', '/v2/user/createWithArray', controller_name: 'user', action_name: 'create_users_with_array_input'
  add_swagger_route 'POST', '/v2/user/createWithList', controller_name: 'user', action_name: 'create_users_with_list_input'
  add_swagger_route 'PUT', '/v2/pet', controller_name: 'pet', action_name: 'update_pet'
  add_swagger_route 'PUT', '/v2/user/{username}', controller_name: 'user', action_name: 'update'
  constraints(host: /192\.168\.1\.\d\d\d/) do
  controller "trestle/auth/sessions" do
  delete  'services/:alias' => 'legacy_services#unprovision', :as => :legacy_service_unprovision, :alias => /[^\/]+/
  delete  'services/:label/tokens' => 'default#not_implemented'
  delete "/listings/:category/:slug" => "classified_listings#destroy"
  delete "/messages/:id" => "messages#destroy"
  delete "apple_push_notifications/:version/devices/:device_token/registrations/:website_push_id", as: :apple_push_notifications_delete, to: "apple_push_notifications#delete", website_push_id: /.*/
  delete "users/api_secrets/:id" => "api_secrets#destroy", :as => :users_api_secret
  delete "users/full_delete", to: "users#full_delete", as: :user_full_delete
  delete "users/remove_association", to: "users#remove_association"
  delete '/artists/:id'       => 'artists#destroy'
  delete '/pokemons/:id', to: 'pokemons#destroy'
  delete '/songs/:id'         => 'songs#destroy'
  delete '/uploads/:id', to: 'uploads#destroy', as: :uploaded_file
  delete 'apps/:name'                => 'apps#delete',          :as => :app_delete
  delete 'groups/:id/users/:user_id', :to => 'groups#remove_user', :id => /\d+/, :as => 'group_user'
  delete 'issues/:object_id/watchers/:user_id' => 'watchers#destroy', :object_type => 'issue'
  delete 'login/oauth2/token' => 'oauth2_provider#destroy', as: :oauth2_logout
  delete 'media_objects/:media_object_id/media_tracks/:media_track_id' => 'media_tracks#destroy', as: :delete_media_tracks
  delete 'projects/:id/repository/:repository_id/revisions/:rev/issues/:issue_id', :to => 'repositories#remove_related_issue'
  delete 'services/v1/binding_tokens/:binding_token' => 'binding_tokens#delete',   :as => :binding_token_delete,   :binding_token => /[^\/]+/
  delete 'services/v1/bindings/:binding_token'       => 'services#unbind',         :as => :service_unbind,         :binding_token => /[^\/]+/
  delete 'services/v1/configurations/:id'            => 'services#unprovision',    :as => :service_unprovision,    :id    => /[^\/]+/
  delete 'services/v1/configurations/:id/snapshots/:sid'     => 'services#delete_snapshot',      :as => :service_delete_snapshot,     :id   => /[^\/]+/, :sid => /[^\/]+/
  delete 'services/v1/offerings/:label(/:provider)'              => 'services#delete',         :as => :service_delete,         :label => /[^\/]+/, :provider => /[^\/]+/
  delete 'single_use_link/:id/delete/:link_id' => 'single_use_links#destroy', as: :delete_single_use_link
  delete 'users/*email'              => 'users#delete',         :as => :delete_user
  delete 'users/:user_id/depositors/:id' => 'depositors#destroy', as: 'user_depositor'
  delete 'users/:user_id/mfa' => 'login/otp#destroy', as: :disable_mfa
  delete 'users/self/otps' => 'one_time_passwords#destroy_all', as: :destroy_all_one_time_passwords
  delete 'watchers/watch', :to => 'watchers#unwatch'
  devise_for :admin, path: "admin_area", controllers: { sessions: :"admins/sessions" }, skip: :passwords
  devise_for :headquarters_admin, class_name: "Admin", path: "headquarters", constraints: {host: /192\.168\.1\.\d\d\d/}
  devise_for :user, only: [:registrations], controllers: { registrations: "custom/registrations" }, as: :custom, path: :custom
  devise_for :users, controllers: { omniauth_callbacks: "users/omniauth_callbacks" }
  devise_for :users, module: 'api', path: 'api/users', defaults: {format: 'json'}
  get     'services/:alias' => 'legacy_services#get',         :as => :legacy_service_get,         :alias => /[^\/]+/
  get    '/artists'           => 'artists#index'
  get    '/artists/:id'       => 'artists#show',  as: "artist"
  get    '/artists/:id/edit'  => 'artists#edit',  as: "edit_artist"
  get    '/artists/new'       => 'artists#new',   as: "new_artist"
  get    '/songs'             => 'songs#index'
  get    '/songs/:id'         => 'songs#show',    as: "song"
  get    '/songs/:id/edit'    => 'songs#edit',    as: "edit_song"
  get    '/songs/new'         => 'songs#new',     as: "new_song"
  get    'apps/:name'                => 'apps#get',             :as => :app_get
  get    'apps/:name/application'    => 'apps#download',        :as => :app_download
  get    'apps/:name/crashes'        => 'apps#crashes',         :as => :app_crashes
  get    'apps/:name/instances'      => 'apps#instances',       :as => :app_instances
  get    'apps/:name/stats'          => 'apps#stats',           :as => :app_stats
  get    'apps/:name/update'         => 'apps#check_update'
  get    'bulk/apps'                 => 'bulk#apps',            :as => :bulk_apps
  get    'bulk/counts'               => 'bulk#counts',          :as => :bulk_counts
  get    'info/runtimes'             => 'default#runtime_info', :as => :cloud_runtime_info
  get    'info/services'             => 'default#service_info', :as => :cloud_service_info
  get    'proxied_services/v1/offerings' => 'services#list_proxied_services',   :as => :service_list_proxied_services
  get    'services/v1/binding_tokens/:binding_token' => 'binding_tokens#get',      :as => :binding_token_get,      :binding_token => /[^\/]+/
  get    'services/v1/configurations/:id/jobs/:job_id'       => 'services#job_info',             :as => :service_job_info,              :id   => /[^\/]+/, :job_id => /[^\/]+/
  get    'services/v1/configurations/:id/serialized/url/snapshots/:sid'     => 'services#serialized_url',       :as => :service_serialized_url,    :id   => /[^\/]+/, :sid => /[^\/]+/
  get    'services/v1/configurations/:id/snapshots'          => 'services#enum_snapshots',       :as => :service_enum_snapshots,        :id   => /[^\/]+/
  get    'services/v1/configurations/:id/snapshots/:sid'     => 'services#snapshot_details',     :as => :service_snapshot_details,      :id   => /[^\/]+/, :sid => /[^\/]+/
  get    'services/v1/offerings'                     => 'services#list',           :as => :service_list
  get    'services/v1/offerings/:label(/:provider)'              => 'services#get',            :as => :service_get,            :label => /[^\/]+/, :provider => /[^\/]+/
  get    'services/v1/offerings/:label(/:provider)/handles'      => 'services#list_handles',   :as => :service_list_handles,   :label => /[^\/]+/, :provider => /[^\/]+/
  get    'staged_droplets/:id/:hash' => 'apps#download_staged', :as => :app_download_staged
  get    'staging/app/:id'                => 'staging#download_app',   :as => :download_unstaged_app
  get    'users/*email'              => 'users#info',           :as => :user_info
  get   '/imports/:id', :to => 'imports#show', :as => 'import'
  get   '/issues/imports/new', :to => 'imports#new',
  get   '/time_entries/imports/new', :to => 'imports#new',
  get   '/users/imports/new', :to => 'imports#new',
  get  "web_sub/:id/:signature", as: :web_sub_verify,  to: "web_sub#verify"
  get  '/converse-api/select-data'     => 'converse_api#select_data'
  get  '/json-converters/select-csv'   => 'json_converters#select_csv'
  get  '/top'                          => 'top#index'
  get "(/:locale)/:person_id(*path)" => redirect(id_to_username), :constraints => { :locale => locale_matcher, :person_id => /[a-zA-Z0-9_-]{22}/ }
  get "(/:locale)/people/:person_id(*path)" => redirect(id_to_username), :constraints => { :locale => locale_matcher, :person_id => /[a-zA-Z0-9_-]{22}/ }
  get ".well-known/apple-app-site-association", to: "well_known#apple_site_association"
  get ".well-known/apple-developer-merchantid-domain-association", to: "well_known#apple_pay"
  get ".well-known/change-password", to: "well_known#change_password"
  get "/", to: "votes#index"
  get "/*page", to: "docs#show"
  get "/*path", to: "application#index", format: false
  get "/:dv_file" => "domain_validation#index", constraints: {dv_file: /.*\.txt/}
  get "/:timeframe" => "stories#index", :constraints => { timeframe: /latest/ }
  get "/:username" => "stories#index"
  get "/:username/:slug" => "stories#show"
  get "/:username/:slug/:view" => "stories#show",
  get "/:username/:slug/comments" => "comments#index"
  get "/:username/:slug/comments/:id_code" => "comments#index"
  get "/:username/:slug/comments/:id_code/delete_confirm" => "comments#delete_confirm"
  get "/:username/:slug/comments/:id_code/edit" => "comments#edit"
  get "/:username/:slug/delete_confirm" => "articles#delete_confirm"
  get "/:username/:slug/edit" => "articles#edit"
  get "/:username/:slug/manage" => "articles#manage"
  get "/:username/:slug/mod" => "moderations#article"
  get "/:username/:slug/stats" => "articles#stats"
  get "/:username/:view" => "stories#index",
  get "/:username/comment/:id_code" => "comments#index"
  get "/:username/comment/:id_code/delete_confirm" => "comments#delete_confirm"
  get "/:username/comment/:id_code/edit" => "comments#edit"
  get "/:username/comment/:id_code/mod" => "moderations#comment"
  get "/:username/comment/:id_code/settings", to: "comments#settings"
  get "/about" => "pages#about"
  get "/activity-feed/:proposal_id/update_feed" => "comments#update_feed"
  get "/admin_area/home", to: "admins#index", as: :admin_root
  get "/anywhere", to: "foo#bar", as: :new_admin_password
  get "/api", to: redirect("https://docs.dev.to/api")
  get "/approval-feed/:id/update_approvals" => "proposals#update_approvals_card"
  get "/async_info/base_data", controller: "async_info#base_data", defaults: { format: :json }
  get "/async_info/shell_version", controller: "async_info#shell_version", defaults: { format: :json }
  get "/auth/failure" => "auth#failure"
  get "/badge" => "pages#badge"
  get "/badge/:slug" => "badges#show"
  get "/beta" => "profile#beta"
  get "/challenge" => "pages#challenge"
  get "/change_locale" => "i18n#change_locale", :as => :change_locale
  get "/chat_channel_memberships/find_by_chat_channel_id" => "chat_channel_memberships#find_by_chat_channel_id"
  get "/code-of-conduct" => "pages#code_of_conduct"
  get "/connect" => "chat_channels#index"
  get "/connect/:slug" => "chat_channels#index"
  get "/contact" => "pages#contact"
  get "/custom_strategy/new"
  get "/dashboard" => "dashboards#show"
  get "/dashboard/:username" => "dashboards#show"
  get "/dashboard/:which" => "dashboards#followers", :constraints => { which: /user_followers/ }
  get "/dashboard/:which/:org_id" => "dashboards#show",
  get "/dashboard/pro" => "dashboards#pro"
  get "/design" => "design#design"
  get "/embed/:embeddable" => "liquid_embeds#show"
  get "/error" => "home#error"
  get "/events" => "events#index"
  get "/faq" => "pages#faq"
  get "/feed" => "articles#feed", :as => "feed", :defaults => { format: "rss" }
  get "/feed/:username" => "articles#feed",
  get "/feed/tag/:tag" => "articles#feed",
  get "/feedback" => "feedback#index"
  get "/feedback/thanks" => "feedback#thanks"
  get "/future", to: redirect("devteam/the-future-of-dev-160n")
  get "/healthcheck", to: GovukHealthcheck.rack_response(
  get "/listings/:category" => "classified_listings#index"
  get "/listings/:category/:slug" => "classified_listings#index", :as => :classified_listing_slug
  get "/listings/:category/:slug/:view" => "classified_listings#index",
  get "/listings/:category/:slug/delete_confirm" => "classified_listings#delete_confirm"
  get "/listings/dashboard" => "classified_listings#dashboard"
  get "/listings/new/:type" => "listings#new", :as => :new_request_without_locale # needed for some emails, where locale part is already set
  get "/live" => "pages#live"
  get "/live/:username" => "twitch_live_streams#show"
  get "/manifest" => "service_worker#manifest"
  get "/mod" => "moderations#index", :as => :mod
  get "/mod/:tag" => "moderations#index"
  get "/new" => "articles#new"
  get "/new/:template" => "articles#new"
  get "/notification_subscriptions/:notifiable_type/:notifiable_id" => "notification_subscriptions#show"
  get "/notifications/:filter" => "notifications#index"
  get "/notifications/:filter/:org_id" => "notifications#index"
  get "/now" => "pages#now"
  get "/onboarding" => "pages#onboarding"
  get "/orlygenerator" => "pages#generator"
  get "/page/:slug" => "pages#show"
  get "/people/:person_id/inbox/:id", :to => redirect("/fi/people/%{person_id}/messages/%{id}")
  get "/pod", to: "podcast_episodes#index"
  get "/podcasts", to: redirect("pod")
  get "/privacy" => "pages#privacy"
  get "/profile" => "profile#show"
  get "/quick_social_signup" => 'home#quick_social_signup'
  get "/readinglist" => "reading_list_items#index"
  get "/readinglist/:view" => "reading_list_items#index", :constraints => { view: /archive/ }
  get "/report-abuse" => "pages#report_abuse"
  get "/rly" => "pages#rlyweb"
  get "/rlygenerator" => "pages#generator"
  get "/rlyslack" => "pages#generator"
  get "/rlyweb" => "pages#rlyweb"
  get "/robots.:format" => "pages#robots"
  get "/robots.txt" => RobotsGenerator
  get "/rss" => "articles#feed", :defaults => { format: "rss" }
  get "/search" => "stories#search"
  get "/search/tags" => "search#tags"
  get "/security", to: "pages#bounty"
  get "/serviceworker" => "service_worker#index"
  get "/set", to: "home#set"
  get "/settings/(:tab)" => "users#edit", :as => :user_settings
  get "/settings/:tab/:org_id" => "users#edit"
  get "/shecoded" => "pages#shecoded"
  get "/shell_bottom" => "shell#bottom"
  get "/shell_top" => "shell#top"
  get "/shop", to: redirect("https://shop.dev.to/")
  get "/sidekiq/web", to: redirect("login", status: 302)
  get "/sign_in", to: "devise/sessions#new"
  get "/signout_confirm" => "users#signout_confirm"
  get "/sitemap.xml.gz"                        => "sitemap#sitemap", format: :xml
  get "/sitemap/:sitemap_host/generate.xml.gz" => "sitemap#generate", format: :xml, :constraints => { sitemap_host: /[.\-\w]+/ }
  get "/social_previews/article/:id" => "social_previews#article", :as => :article_social_preview
  get "/social_previews/comment/:id" => "social_previews#comment", :as => :comment_social_preview
  get "/social_previews/listing/:id" => "social_previews#listing", :as => :listing_social_preview
  get "/social_previews/organization/:id" => "social_previews#organization", :as => :organization_social_preview
  get "/social_previews/tag/:id" => "social_previews#tag", :as => :tag_social_preview
  get "/social_previews/user/:id" => "social_previews#user", :as => :user_social_preview
  get "/sponsors" => "pages#sponsors"
  get "/sponsorship-info" => "pages#sponsorship_faq"
  get "/starred/:starred_token", to: "starred_entries#index", as: "starred"
  get "/stories/warm_comments/:username/:slug" => "stories#warm_comments"
  get "/summary" => "summary#index"
  get "/summary/:fiscal_year" => "summary#index"
  get "/survey", to: redirect("https://dev.to/ben/final-thoughts-on-the-state-of-the-web-survey-44nn")
  get "/swagnets" => "pages#swagnets"
  get "/t/:tag", to: "stories#index", as: :tag
  get "/t/:tag/:timeframe" => "stories#index",
  get "/t/:tag/admin", to: "tags#admin"
  get "/t/:tag/edit", to: "tags#edit"
  get "/t/:tag/top/:timeframe" => "stories#index"
  get "/tag/:tag" => "stories#index"
  get "/terms" => "pages#terms"
  get "/test_design/:page" => "email_design#show"
  get "/top/:timeframe" => "stories#index"
  get "/ui_api/topbar_props" => "topbar_api#props"
  get "/unauthenticated", to: "home#unauthenticated"
  get "/welcome" => "pages#welcome"
  get "/workshops", to: redirect("events")
  get "/💸", to: redirect("t/hiring")
  get "bookmarklet/:cache_buster", to: "bookmarklet#script", as: "bookmarklet"
  get "cart/add/:id" => "cart#add", :as => :add_to_cart
  get "dashboard/following" => "dashboards#following_tags"
  get "dashboard/following_organizations" => "dashboards#following_organizations"
  get "dashboard/following_podcasts" => "dashboards#following_podcasts"
  get "dashboard/following_tags" => "dashboards#following_tags"
  get "dashboard/following_users" => "dashboards#following_users"
  get "dashboard/pro/org/:org_id" => "dashboards#pro"
  get "doctors/index"
  get "easy/search"
  get "email_subscriptions/unsubscribe"
  get "files/folder#{full_path_glob}", controller: 'files', action: 'react_files', format: false, defaults: {format: 'html'}
  get "files/search", controller: 'files', action: 'react_files', format: false, defaults: {format: 'html'}
  get "game/index"
  get "home/create"
  get "home/index"
  get "home/test"
  get "invitations/accept"
  get "invitations/accept", as: :accept_invitation
  get "items/:id", to: "items#index"
  get "manifest/:theme", to: "site#manifest", as: "manifest"
  get "projects/:id/repository/:repository_id/diff(/*path)",
  get "projects/:id/repository/:repository_id/revisions/:rev/diff(/*path)",
  get "react-router(/*all)", to: "pages#index"
  get "settings/billing/edit", as: :settings_edit_billing, to: "settings#edit_billing"
  get "users/confirm_destroy/:token", to: "users#confirm_destroy", as: :user_confirm_destroy
  get "votes/about_info"
  get "votes/areas_info"
  get "votes/ballot"
  get "votes/better_iceland_proxy"
  get "votes/boot"
  get "votes/force_session_id"
  get "votes/get_areas"
  get "votes/get_ballot"
  get "votes/government_info"
  get "votes/help_info"
  get "votes/ibuar_info"
  get "votes/idea_info"
  get "votes/is_vote_authenticated"
  get "votes/logout"
  get "votes/logout_and_information"
  get "votes/logout_info"
  get "votes/lukr_map"
  get "votes/lukr_map_2"
  get "votes/meta"
  get "votes/rules_info"
  get "votes/rvk_info"
  get "votes/select_area"
  get "work/bulk" => "work#bulk"
  get "work/crash" => "work#crash"
  get "work/email" => "work#email"
  get "work/long" => "work#long"
  get "work/post" => "work#delayed_post"
  get '/' => 'homepage#index', as: :homepage_without_locale
  get '/' => 'landing_page#index', as: :landing_page_without_locale, constraints: ->(request) {
  get '/', to: 'home#home'
  get '/.well-known/resourcesync' => 'resource_sync#source_description', as: :source_description
  get '/404' => 'errors#not_found', :as => :error_not_found
  get '/404', to: 'errors#not_found'
  get '/406' => 'errors#not_acceptable', :as => :error_not_acceptable
  get '/410' => 'errors#gone', as: :error_gone
  get '/422', to: 'errors#unprocessable'
  get '/500' => 'errors#server_error'
  get '/500', to: 'errors#internal'
  get '/:locale/' => 'homepage#index', :constraints => { :locale => locale_matcher }, as: :homepage_with_locale
  get '/:locale/' => 'landing_page#index', as: :landing_page_with_locale, constraints: ->(request) {
  get '/:locale/s' => 'homepage#index', as: :search_with_locale, constraints: ->(request) {
  get '/:locale/s', to: redirect('/%{locale}', status: 307), constraints: { locale: locale_matcher }
  get '/_lp_preview' => 'landing_page#preview', as: :landing_page_preview
  get '/admin', to: 'admin/root#index', as: :admin
  get '/api-error', to: 'pages#api_error'
  get '/api/state/:user', to: 'api#state', as: :api_state
  get '/auth/:provider/callback' => 'sessions#create'
  get '/auth/:provider/callback', to: 'sessions#create'
  get '/auth/:system_name/bounce' => 'provider/sessions#bounce', constraints: ProviderDomainConstraint, as: :authorization_provider_bounce
  get '/auth/:system_name/callback' => 'provider/sessions#create', constraints: MasterOrProviderDomainConstraint
  get '/auth/facebook/callback' => 'sessions#create'
  get '/auth/failure' => 'sessions#failure'
  get '/auth/failure', to: 'sessions#omniauth_fail'
  get '/boom', to: 'boom#show'
  get '/capabilitylist' => 'resource_sync#capability_list', as: :capability_list
  get '/cart', to: 'orders#edit', as: :cart
  get '/cart_link', to: 'store#cart_link', as: :cart_link
  get '/changelist' => 'resource_sync#change_list', as: :change_list
  get '/check.txt' => 'checks#check'
  get '/check/error' => 'checks#error'
  get '/checkout', to: 'checkout#edit', as: :checkout
  get '/checkout/:state', to: 'checkout#edit', as: :checkout_state
  get '/checkout/registration' => 'checkout#registration', :as => :checkout_registration
  get '/community_not_found' => 'errors#community_not_found', as: :community_not_found
  get '/content/cvv', to: 'content#cvv', as: :cvv
  get '/converse-api/generate-matrix' => redirect('/converse-api/select-data')
  get '/courses/:course_id/gradebook2', to: redirect('/courses/%{course_id}/gradebook')
  get '/dashboard', to: 'home#dashboard'
  get '/details', to: 'pages#details'
  get '/doc', to: 'swagger#doc'
  get '/documentation', to: 'pages#documentation'
  get '/eventkit', to: 'pages#event_kit', as: :event_kit
  get '/events', to: 'pages#events'
  get '/export', to: 'users#export'
  get '/faq', to: 'pages#faqs'
  get '/favicon.ico' => 'static#favicon', :format => false
  get '/files/:id', to: redirect('/concern/generic_works/%{id}')
  get '/hacktoberfest-update', to: 'pages#hacktoberfest_update'
  get '/health_check', to: 'health_check#all'
  get '/info/:gem_name' => 'api/compact_index#info', as: :info,
  get '/issues/calendar', :to => 'calendars#show'
  get '/issues/gantt', :to => 'gantts#show'
  get '/json-converters/download'     => redirect('/json-converters/select-csv')
  get '/languages/projects(/:language_id)', to: 'languages#projects'
  get '/ldap_signin', to: 'sessions#ldap_signin', as: :ldap_signin
  get '/locale/set', to: 'locale#set'
  get '/login', to: 'sessions#new'
  get '/logout', to: "sessions#destroy"
  get '/logout', to: 'sessions#destroy', as: :logout
  get '/meetups', to: redirect('/events')
  get '/messageboard-groups/:id', action: :show, controller: 'messageboard_groups', as: :show_messageboard_group
  get '/names' => 'api/compact_index#names'
  get '/not_available' => 'application#not_available', as: :community_not_available
  get '/oidc_login(/*path)' => 'dashboard#oidc_login'
  get '/opencollective', to: 'open_collective#callback'
  get '/orders/:id/token/:token' => 'orders#show', as: :token_order
  get '/orders/populate', to: 'orders#populate_redirect'
  get '/pages/:id', to: 'pages#show', as: :page
  get '/pictures/:basename' => 'picture#show', :basename => /[\da-zA-Z]+\.[\da-zA-Z]+/
  get '/ping' => 'ping#index'
  get '/pricing', to: 'pages#pricing'
  get '/privacy', to: 'pages#privacy'
  get '/profile', to: 'users#show', as: :profile
  get '/profile/edit', to: 'users#edit', as: :profile_edit
  get '/projects/:project_id/issues/calendar', :to => 'calendars#show', :as => 'project_calendar'
  get '/projects/:project_id/issues/gantt', :to => 'gantts#show', :as => 'project_gantt'
  get '/queries/filter', :to => 'queries#filter', :as => 'queries_filter'
  get '/register', to: 'users#registration', as: :register_form
  get '/report', to: 'reports#new'
  get '/resourcelist' => 'resource_sync#resource_list', as: :resource_list
  get '/robots', to: 'pages#robots', constraints: { format: 'txt' }
  get '/rooms', to: 'rooms#cant_create_rooms', as: :cant_create_rooms
  get '/s' => 'homepage#index', as: :search_without_locale, constraints: ->(request) {
  get '/s', to: redirect('/', status: 307)
  get '/saml_login(/*path)' => 'dashboard#saml_login'
  get '/search/forum' => 'search#forum'
  get '/settings', to: 'users#edit'
  get '/shared_access_list', to: 'users#shared_access_list'
  get '/signin' => 'sessions#new', :as => :signin
  get '/signin', to: "sessions#new"
  get '/signin', to: 'sessions#signin', as: :signin
  get '/signout' => 'sessions#destroy', :as => :signout
  get '/signup', to: "users#new"
  get '/signup', to: 'sessions#new', as: :signup
  get '/static/*id' => 'static#show', :format => false
  get '/stylesheets/provider_customized.css' => 'cms/stylesheets#show', :as => :cms_stylesheet_provider, :name => 'provider_customized'
  get '/stylesheets/theme.css' => 'cms/stylesheets#show', :as => :cms_stylesheet, :name => 'theme'
  get '/support', to: redirect('/documentation#support')
  get '/suspended-error', to: 'pages#github_suspended_error'
  get '/system/images/*dragonfly', to: Dragonfly.app(:refinery_images)
  get '/t/*id', to: 'taxons#show', as: :nested_taxons
  get '/terms', to: 'pages#terms'
  get '/trainers', to: 'trainers#index'
  get '/tree', to: 'pages#tree'
  get '/tree/automate_entrypoint', :to => 'tree#automate_entrypoint'
  get '/tree/automate_inline_methods', :to => 'tree#automate_inline_methods'
  get '/tshirt', to: 'pages#tshirt'
  get '/unauthorized', to: 'home#unauthorized', as: :unauthorized
  get '/unauthorized-error', to: 'pages#github_unauthorized_error'
  get '/versions' => 'api/compact_index#versions'
  get '/webhooks/receive', to: 'message#create'
  get '/webhooks/trials' => 'plans#get_trials'
  get 'Search/Results' => "legacy#search_results"
  get 'about/:id' => 'profile#show', as: :user_profile
  get 'account/activation_email', :to => 'account#activation_email', :as => 'activation_email'
  get 'accounts/:account_id/theme-preview' => 'brand_configs#show'
  get 'admin/info', :to => 'admin#info'
  get 'admin/plugins', :to => 'admin#plugins'
  get 'admin/projects', :to => 'admin#projects'
  get 'api/items/by_location' => 'api#items_by_location'
  get 'api/items/ids' => 'api#items_ids', as: :api_items_ids
  get 'api/items/nearby' => 'api#items_nearby'
  get 'api/items/shelf_item/:id' => 'api#shelf_item'
  get 'api/items/shelf_items' => 'api#shelf_items'
  get 'apps/:name/instances/:instance_id/files'       => 'apps#files'
  get 'apps/:name/instances/:instance_id/files/*path' => 'apps#files'
  get 'attachments/:id/:filename', :to => 'attachments#show', :id => /\d+/, :filename => /.*/, :as => 'named_attachment', :format => 'html'
  get 'attachments/:object_type/:object_id/download', :to => 'attachments#download_all', :as => :object_attachments_download
  get 'attachments/:object_type/:object_id/edit', :to => 'attachments#edit_all', :as => :object_attachments_edit
  get 'attachments/download/:id', :to => 'attachments#download', :id => /\d+/
  get 'attachments/download/:id/:filename', :to => 'attachments#download', :id => /\d+/, :filename => /.*/, :as => 'download_named_attachment'
  get 'attachments/thumbnail/:id(/:size)', :to => 'attachments#thumbnail', :id => /\d+/, :size => /\d+/, :as => 'thumbnail'
  get 'availability/fake/:id' => 'availability#fake_one'
  get 'availability/forward/:id' => 'availability#forward_one'
  get 'availability/test_auth' => 'availability#test_auth'
  get 'bestbets/' => 'best_bets#index', as: :best_bets_index
  get 'bestbets/:id/edit' => 'best_bets#edit', as: :best_bets_edit
  get 'boards/:board_id/topics/:id', :to => 'messages#show', :as => 'board_message'
  get 'boards/:board_id/topics/:id/edit', :to => 'messages#edit'
  get 'browse/' => 'browse#random', as: :browse_random
  get 'browse/:id' => 'browse#from_item', as: :browse_item
  get 'browse/about' => 'browse#about', as: :browse_about
  get 'catalog/:id/ourl' => 'catalog#ourl_service', as: :catalog_service_ourl
  get 'catalog/bookplate/:code' => 'catalog#bookplate'
  get 'confirmations/:user_id/limit_reached(/:id)' => 'communication_channels#confirmation_limit_reached', as: :confirmation_limit_reached, id: nil
  get 'conversations/archived' => 'conversations#index', as: :conversations_archived, redirect_scope: 'archived'
  get 'conversations/batches' => 'conversations#batches', as: :conversation_batches
  get 'conversations/find_recipients' => 'search#recipients'
  get 'conversations/sent' => 'conversations#index', as: :conversations_sent, redirect_scope: 'sent'
  get 'conversations/starred' => 'conversations#index', as: :conversations_starred, redirect_scope: 'starred'
  get 'conversations/unread' => 'conversations#index', as: :conversations_unread, redirect_scope: 'unread'
  get 'course_sections/:course_section_id/calendar_events/:id' => 'calendar_events#show', as: :course_section_calendar_event
  get 'courses/:course_id/outcome_rollups' => 'outcome_results#rollups', as: 'course_outcome_rollups'
  get 'dashboard/' => 'dashboard#index', as: :dashboard_index
  get 'dashboard/:id' => 'dashboard#show', as: :dashboard_show
  get 'dashboard/:id/details' => 'dashboard#details', as: :dashboard_details
  get 'dashboard/:id/download/acq_vs_chk' => 'dashboard#download_acquired_vs_checkedout', as: :dashboard_download_acq_vs_chk
  get 'dashboard/:id/edit' => 'dashboard#edit', as: :dashboard_edit
  get 'dashboard/copy/:id' => 'dashboard#copy', as: :dashboard_copy
  get 'dashboard/new' => 'dashboard#new', as: :dashboard_new
  get 'demo/members_only', to: 'demo_user#members_only'
  get 'demo/members_only_group', to: 'demo_group#members_only'
  get 'demo/members_only_mang', to: 'demo_mang#members_only'
  get 'demo/members_only_remove_token', to: 'demo_user#members_only_remove_token'
  get 'documents/file/:id', to: 'documents#download'
  get 'easy/' => 'easy#home', as: :easyS
  get 'easy/search'
  get 'enroll/:self_enrollment_code' => 'self_enrollments#new', as: :enroll
  get 'equation_images/:id' => 'equation_images#show', as: :equation_images, id: /.+/
  get 'external_content/cancel/:service' => 'external_content#cancel', as: :external_content_cancel
  get 'external_content/retrieve/oembed' => 'external_content#oembed_retrieve', as: :external_content_oembed_retrieve
  get 'external_content/success/:service' => 'external_content#success', as: :external_content_success
  get 'external_content/success/:service/:id' => 'external_content#success', as: :external_content_update
  get 'file_session/clear' => 'login#clear_file_session', as: :clear_file_session
  get 'files/:id/public_url' => 'files#public_url', as: :public_url
  get 'groups/:id/users/new', :to => 'groups#new_users', :id => /\d+/, :as => 'new_group_users'
  get 'hay/flags', to: redirect('/pullslips')
  get 'images/thumbnails/:id/:uuid' => 'files#image_thumbnail', as: :thumbnail_image
  get 'images/thumbnails/show/:id/:uuid' => 'files#show_thumbnail', as: :show_thumbnail_image
  get 'images/users/:user_id' => 'users#avatar_image', as: :avatar_image
  get 'libweb/' => 'libweb#search', as: :lib_web
  get 'login/:id' => 'login#new'
  get 'login/apple' => 'login/apple#new', as: :apple_login
  get 'login/canvas' => 'login/canvas#new', as: :canvas_login
  get 'login/cas' => 'login/cas#new'
  get 'login/cas/:id' => 'login/cas#new', as: :cas_login
  get 'login/clever' => 'login/clever#new', as: :clever_login
  get 'login/clever/:id' => 'login/clever#new'
  get 'login/clever/callback' => 'login/clever#create', as: :clever_callback
  get 'login/facebook' => 'login/facebook#new', as: :facebook_login
  get 'login/github' => 'login/github#new', as: :github_login
  get 'login/google' => 'login/google#new', as: :google_login
  get 'login/google/:id' => 'login/google#new'
  get 'login/ldap' => 'login/ldap#new'
  get 'login/linkedin' => 'login/linkedin#new', as: :linkedin_login
  get 'login/microsoft' => 'login/microsoft#new'
  get 'login/microsoft/:id' => 'login/microsoft#new', as: :microsoft_login
  get 'login/oauth/callback' => 'login/oauth#create', as: :oauth_login_callback
  get 'login/oauth2' => 'login/oauth2#new' if Rails.env.test?
  get 'login/oauth2/auth' => 'oauth2_provider#auth', as: :oauth2_auth
  get 'login/oauth2/callback' => 'login/oauth2#create', as: :oauth2_login_callback
  get 'login/oauth2/confirm' => 'oauth2_provider#confirm', as: :oauth2_auth_confirm
  get 'login/oauth2/deny' => 'oauth2_provider#deny', as: :oauth2_auth_deny
  get 'login/oauth2/jwks' => 'oauth2_provider#jwks', as: :oauth2_jwks
  get 'login/openid_connect' => 'login/openid_connect#new'
  get 'login/openid_connect/:id' => 'login/openid_connect#new', as: :openid_connect_login
  get 'login/otp' => 'login/otp#new', as: :otp_login
  get 'login/saml' => 'login/saml#new', as: :saml_login_base
  get 'login/saml/:id' => 'login/saml#new', as: :saml_login
  get 'login/saml/logout' => 'login/saml#destroy'
  get 'login/saml_idp_discovery' => 'login/saml_idp_discovery#new'
  get 'login/saml_idp_discovery/:id' => 'login/saml_idp_discovery#new', as: :saml_idp_discovery_login
  get 'login/session_token' => 'login#session_token', as: :login_session_token
  get 'login/twitter' => 'login/twitter#new', as: :twitter_login
  get 'meals/:id/edit' => 'home#index'
  get 'meals/new' => 'home#index'
  get 'media_objects/:id' => 'context#media_object_inline', as: :media_object
  get 'media_objects/:id/redirect' => 'context#media_object_redirect', as: :media_object_redirect
  get 'media_objects/:id/thumbnail' => 'context#media_object_thumbnail', as: :media_object_thumbnail
  get 'media_objects/:media_object_id/info' => 'media_objects#show', as: :media_object_info
  get 'media_objects/:media_object_id/media_tracks/:id' => 'media_tracks#show', as: :show_media_tracks
  get 'media_objects_iframe/:media_object_id' => 'media_objects#iframe_media_player', as: :media_object_iframe
  get 'mr/:id' => 'info#message_redirect', as: :message_redirect
  get 'museum/thumbnail/:id' => 'museum#thumbnail', as: :museum_thumbnail
  get 'my/api_key', :to => 'my#show_api_key', :as => 'my_api_key'
  get 'oauth/redirect_proxy' => 'oauth_proxy#redirect_proxy'
  get 'pages/*id' => 'high_voltage/pages#show', constraints: { id: /(#{HighVoltage.page_ids.join("|")})/ }, as: :page
  get 'projects/:id/activity', :to => 'activities#index', :as => :project_activity
  get 'projects/:id/issues/report', :to => 'reports#issue_report', :as => 'project_issues_report'
  get 'projects/:id/issues/report/:detail', :to => 'reports#issue_report_details', :as => 'project_issues_report_details'
  get 'projects/:id/repository', :to => 'repositories#show', :path => nil
  get 'projects/:id/repository/:repository_id', :to => 'repositories#show', :path => nil
  get 'projects/:id/repository/:repository_id/graph', :to => 'repositories#graph'
  get 'projects/:id/repository/:repository_id/revision', :to => 'repositories#revision'
  get 'projects/:id/repository/:repository_id/revisions', :to => 'repositories#revisions'
  get 'projects/:id/repository/:repository_id/revisions/:rev', :to => 'repositories#revision'
  get 'projects/:id/repository/:repository_id/show/*path', :to => 'repositories#show', :format => 'html', :constraints => {:path => /.*/}
  get 'projects/:id/repository/:repository_id/statistics', :to => 'repositories#stats'
  get 'projects/:id/search', :controller => 'search', :action => 'index'
  get 'pseudonyms/:id/register/:nonce' => 'communication_channels#confirm', as: :registration_confirmation_deprecated
  get 'pseudonyms/:pseudonym_id/change_password/:nonce' => 'pseudonyms#confirm_change_password', as: :confirm_change_password
  get 'pullslips/:id' => 'pullslips#show', as: :pullslips_show
  get 'pullslips/:id/print' => 'pullslips#print', as: :pullslips_print
  get 'quiz_statistics/:quiz_statistics_id/files/:file_id/download' => 'files#show', as: :quiz_statistics_download, download: '1'
  get 'reports/balance_sheet' => 'reports#balance_sheet'
  get 'reports/income_statement' => 'reports#income_statement'
  get 'reserves/' => 'reserves#search'
  get 'reserves/:classid/:classnumber' => 'reserves#show', as: :reserves_show
  get 'reserves/search' => 'reserves#search', as: :reserves_search
  get 'saml2' => 'login/saml#metadata'
  get 'saml_logout' => 'login/saml#destroy'
  get 'saml_observee' => 'login/saml#observee_validation', as: :saml_observee
  get 'search/all_courses' => 'search#all_courses'
  get 'search/bookmarks' => 'users#bookmark_search', as: :bookmark_search
  get 'search/recipients' => 'search#recipients'
  get 'search/rubrics' => 'search#rubrics'
  get 'search/suggestions/:text', to: 'search#suggestions'
  get 'sessions/new'
  get 'single_use_link/download/:id' => 'single_use_links_viewer#download', as: :download_single_use_link
  get 'single_use_link/generated/:id' => 'single_use_links#index', as: :generated_single_use_links
  get 'single_use_link/show/:id' => 'single_use_links_viewer#show', as: :show_single_use_link
  get 'stats/eds' => 'stats#eds'
  get 'stats/server' => 'stats#server'
  get 'stats/solr-master' => 'stats#solr_master'
  get 'sync/refetch', controller: 'sync/refetches', action: 'show'
  get 'test/index' => 'test#index'
  get 'users/self/otps' => 'one_time_passwords#index', as: :one_time_passwords
  get 'watchers/autocomplete_for_user', :to => 'watchers#autocomplete_for_user'
  get 'watchers/new', :to => 'watchers#new', :as => 'new_watchers'
  get 'web-app-manifest/manifest.json' => 'info#web_app_manifest'
  get 'welcome/home'
  get 'welcome/index'
  get 'xsd/:version.xsd' => 'content_exports#xml_schema'
  get("/",        { :controller => "fortunes", :action => "lucky" })
  get("/create_zodiac", { :controller => "zodiacs", :action => "create_row" })
  get("/creatures/:the_creature", { :controller => "zodiacs", :action => "creature" })
  get("/delete_zodiac/:the_id", { :controller => "zodiacs", :action => "destroy_row" })
  get("/lucky_numbers",   { :controller => "fortunes", :action => "lucky" })
  get("/random/:min/:max", { :controller => "fortunes", :action => "within_range" })
  get("/signs/:the_sign",         { :controller => "zodiacs", :action => "sign" })
  get("/unlucky_numbers", { :controller => "fortunes", :action => "unlucky" })
  get("/zodiacs", { :controller => "zodiacs", :action => "index" })
  get("/zodiacs/:the_id",         { :controller => "zodiacs", :action => "show" })
  get("/zodiacs/new", { :controller => "zodiacs", :action => "new_form" })
  map.resources :pdm_documents, :path_prefix => '/projects/:project_id'
  map.resources :pdm_revisions, :path_prefix => '/projects/:project_id'
  match "/404", to: "errors#not_found", via: :all
  match "/auth/:provider/callback" => "auth#oauth_callback", via: [:get]
  match "/posts/download_pdf(.:format)" => "posts#all_posts", :method => :get, :as=>:all_posts
  match '(/)*path' => redirect('http://www.example.com'), :via => :all
  match '/401', to: 'errors#unauthorized', via: :all, as: :unauthorized
  match '/404', to: 'errors#not_found', via: :all, as: :not_found
  match '/500', to: 'errors#internal_error', via: :all, as: :internal_error
  match '/auth/:provider/callback' => 'sessions#create'
  match '/auth/:provider/callback', to: 'sessions#omniauth', via: [:get, :post], as: :omniauth_session
  match '/auth/failure' => 'sessions#failure'
  match '/auth/harvest/callback' => 'settings/harvest#refresh_token'
  match '/imports/:id/mapping', :to => 'imports#mapping', :via => [:get, :post], :as => 'import_mapping'
  match '/imports/:id/run', :to => 'imports#run', :via => [:get, :post], :as => 'import_run'
  match '/imports/:id/settings', :to => 'imports#settings', :via => [:get, :post], :as => 'import_settings'
  match '/issues', :controller => 'issues', :action => 'destroy', :via => :delete
  match '/issues/:id/quoted', :to => 'journals#new', :id => /\d+/, :via => :post, :as => 'quoted_issue'
  match '/issues/auto_complete', :to => 'auto_completes#issues', :via => :get, :as => 'auto_complete_issues'
  match '/issues/changes', :to => 'journals#index', :as => 'issue_changes', :via => :get
  match '/issues/context_menu', :to => 'context_menus#issues', :as => 'issues_context_menu', :via => [:get, :post]
  match '/issues/preview', :to => 'previews#issue', :as => 'preview_issue', :via => [:get, :post, :put, :patch]
  match '/news/:id/comments', :to => 'comments#create', :via => :post
  match '/news/:id/comments/:comment_id', :to => 'comments#destroy', :via => :delete
  match '/news/preview', :controller => 'previews', :action => 'news', :as => 'preview_news', :via => [:get, :post, :put, :patch]
  match '/preview/text', :to => 'previews#text', :as => 'preview_text', :via => [:get, :post, :put, :patch]
  match '/signin' => 'sessions#new', :as => :signin
  match '/signout' => 'sessions#destroy', :as => :signout
  match '/terms', to: 'users#terms', via: [:get, :post]
  match '/time_entries/:id', :to => 'timelog#destroy', :via => :delete, :id => /\d+/
  match '/time_entries/context_menu', :to => 'context_menus#time_entries', :as => :time_entries_context_menu, :via => [:get, :post]
  match '/time_entries/destroy', :to => 'timelog#destroy', :via => :delete
  match '/wiki_pages/auto_complete', :to => 'auto_completes#wiki_pages', :via => :get, :as => 'auto_complete_wiki_pages'
  match ':controller(/:action(/:id))', :via => :any
  match 'access_code' => 'developer_portal/access_codes#show', :as => :access_code, :via => [:post, :get]
  match 'account/activate', :to => 'account#activate', :via => :get
  match 'account/lost_password', :to => 'account#lost_password', :via => [:get, :post], :as => 'lost_password'
  match 'account/register', :to => 'account#register', :via => [:get, :post], :as => 'register'
  match 'account/twofa', :to => 'account#twofa', :via => [:get, :post]
  match 'account/twofa/confirm', :to => 'account#twofa_confirm', :via => :get
  match 'account/twofa/resend', :to => 'account#twofa_resend', :via => :post
  match 'batch_edits/:id' => 'batch_edits#add', :via => :put
  match 'batch_edits/clear' => 'batch_edits#clear', as: :batch_edits_clear, via: [:get, :post]
  match 'boards/:board_id/topics/new', :to => 'messages#new', :via => [:get, :post], :as => 'new_board_message'
  match 'boards/:board_id/topics/quote/:id', :to => 'messages#quote', :via => [:get, :post]
  match 'enumerations/:type', :to => 'enumerations#index', :via => :get
  match 'game/index' => 'game#index', :as => :game
  match 'game/joining' => 'game#joining', :as => :joining
  match 'home/create' => 'game#create', :as => :create
  match 'my', :controller => 'my', :action => 'index', :via => :get # Redirects to my/page
  match 'my/account', :controller => 'my', :action => 'account', :via => [:get, :put]
  match 'my/account/destroy', :controller => 'my', :action => 'destroy', :via => [:get, :post]
  match 'my/add_block', :controller => 'my', :action => 'add_block', :via => :post
  match 'my/order_blocks', :controller => 'my', :action => 'order_blocks', :via => :post
  match 'my/page', :controller => 'my', :action => 'page', :via => :get
  match 'my/password', :controller => 'my', :action => 'password', :via => [:get, :post]
  match 'my/remove_block', :controller => 'my', :action => 'remove_block', :via => :post
  match 'my/twofa/:scheme/activate', :controller => 'twofa', :action => 'activate', :via => [:get, :post]
  match 'my/twofa/:scheme/activate/confirm', :controller => 'twofa', :action => 'activate_confirm', :via => :get
  match 'my/twofa/:scheme/activate/init', :controller => 'twofa', :action => 'activate_init', :via => :post
  match 'my/twofa/:scheme/deactivate', :controller => 'twofa', :action => 'deactivate', :via => [:get, :post]
  match 'my/twofa/:scheme/deactivate/confirm', :controller => 'twofa', :action => 'deactivate_confirm', :via => :get
  match 'my/twofa/:scheme/deactivate/init', :controller => 'twofa', :action => 'deactivate_init', :via => :post
  match 'my/twofa/activate/init', :controller => 'twofa', :action => 'activate_init', :via => :post
  match 'my/twofa/backup_codes', :controller => 'twofa_backup_codes', :action => 'show', :via => [:get]
  match 'my/twofa/backup_codes/confirm', :controller => 'twofa_backup_codes', :action => 'confirm', :via => :get
  match 'my/twofa/backup_codes/create', :controller => 'twofa_backup_codes', :action => 'create', :via => [:get, :post]
  match 'my/twofa/backup_codes/init', :controller => 'twofa_backup_codes', :action => 'init', :via => :post
  match 'my/twofa/select_scheme', :controller => 'twofa', :action => 'select_scheme', :via => :get
  match 'projects/:id/wiki/destroy', :to => 'wikis#destroy', :via => [:get, :post]
  match 'register/:nonce' => 'communication_channels#confirm', as: :registration_confirmation, via: [:get, :post]
  match 'settings/edit', :controller => 'settings', :action => 'edit', :via => [:get, :post]
  match 'settings/plugin/:id', :controller => 'settings', :action => 'plugin', :via => [:get, :post], :as => 'plugin_settings'
  match 'sys/fetch_changesets', :to => 'sys#fetch_changesets', :via => [:get, :post]
  match 'sys/projects', :to => 'sys#projects', :via => :get
  match 'sys/projects/:id/repository', :to => 'sys#create_project_repository', :via => :post
  match 'users/:user_id/twofa/deactivate', :controller => 'twofa', :action => 'admin_deactivate', :via => :post
  match 'users/random' => 'users/random#create', :controller => "users/random", :as => "users_random", :via => [:get, :post]
  match 'workflows/copy', :controller => 'workflows', :action => 'copy', :via => [:get, :post]
  match 'workflows/edit', :controller => 'workflows', :action => 'edit', :via => [:get, :post]
  match 'workflows/permissions', :controller => 'workflows', :action => 'permissions', :via => [:get, :post]
  mount API => '/'
  mount ActionCable.server => "/cable"
  mount ActionCable.server => '/cable'
  mount Ahoy::Engine => "/ahoy" if Ahoy.api
  mount AhoyEmail::Engine => "/ahoy" if AhoyEmail.api
  mount CASino::Engine => '/', :as => 'CASino'
  mount CdnAssets.new => '/_cdn_assets_' unless Rails.configuration.three_scale.assets_cdn_host
  mount ChatSchema.dashboard, at: "/graphql/dashboard"
  mount ChatSchema.operation_store_sync, at: "/graphql/sync"
  mount ChatSchema.pusher_webhooks_client, at: "/pusher_webhooks"
  mount Doorkeeper::Engine => '/oauth'
  mount ForestLiana::Engine => '/forest'
  mount GraphiQL::Rails::Engine, at: "/graphiql", graphql_path: "/queries"
  mount MagicLamp::Genie, at: "/magic_lamp" if defined?(MagicLamp)
  mount Mercury::Engine => '/'
  mount Peek::Railtie => "/peek"
  mount RailsAdmin::Engine => '/deck', as: 'rails_admin'
  mount ShopifyApp::Engine, at: '/'
  mount Shopping => '/'
  mount Sidekiq::Web => "/sidekiq/web", constraints: Trestle::Auth::Constraint.new
  mount Sidekiq::Web => '/sidekiq'
  mount Spree::Core::Engine, at: '/'
  mount StripeEvent::Engine, at: "/stripe"
  mount TestEngine::Engine => '/test'
  mount_opro_oauth :controllers => {:oauth_client_apps => 'oauth/client_apps'}
  namespace :buyers, :as => 'admin', :path => 'admin/buyers' do
  page_constraint = { page: /[1-9]\d*/ }
  patch  '/artists/:id'       => 'artists#update'
  patch  '/songs/:id'         => 'songs#update'
  patch "/messages/:id" => "messages#update"
  patch "/onboarding_checkbox_update" => "users#onboarding_checkbox_update"
  patch "/onboarding_update" => "users#onboarding_update"
  patch "/tag/:id", to: "tags#update"
  patch "/users/update_list_view_config" => "users#update_list_view_config"
  patch '/cart', to: 'orders#update', as: :update_cart
  patch '/checkout/update/:state', to: 'checkout#update', as: :update_checkout
  patch '/profile/edit', to: 'users#update'
  patch '/register', to: 'users#register', as: :register
  patch '/uploads', to: 'uploads#create'
  patch 'attachments/:object_type/:object_id', :to => 'attachments#update_all', :as => :object_attachments
  post    'services/:label/tokens' => 'default#not_implemented'
  post   '/artists'           => 'artists#create'
  post   '/songs'             => 'songs#create'
  post   'projects/:id/repository/:repository_id/revisions/:rev/issues', :to => 'repositories#add_related_issue'
  post   'services/v1/binding_tokens'                => 'binding_tokens#create',   :as => :binding_token_create
  post   'services/v1/bindings'                      => 'services#bind',           :as => :service_bind
  post   'services/v1/bindings/external'             => 'services#bind_external',  :as => :service_bind_external
  post   'services/v1/configurations'                => 'services#provision',      :as => :service_provision
  post   'services/v1/configurations/:id/serialized/url/snapshots/:sid'     => 'services#create_serialized_url',       :as => :service_create_serialized_url,    :id   => /[^\/]+/, :sid => /[^\/]+/
  post   'services/v1/configurations/:id/snapshots'          => 'services#create_snapshot',      :as => :service_create_snapshot,       :id   => /[^\/]+/
  post   'services/v1/configurations/:id/snapshots/:sid/name'=> 'services#update_snapshot_name', :as => :service_update_snapshot_name,  :id   => /[^\/]+/, :sid => /[^\/]+/
  post   'services/v1/offerings'                     => 'services#create',         :as => :service_create
  post   'services/v1/offerings/:label(/:provider)/handles/:id'  => 'services#update_handle',  :as => :service_update_handle,  :label => /[^\/]+/, :provider => /[^\/]+/
  post   'staging/droplet/:id/:upload_id' => 'staging#upload_droplet', :as => :upload_droplet
  post   'users/*email/tokens'       => 'user_tokens#create',   :as => :create_token
  post  '/imports', :to => 'imports#create', :as => 'imports'
  post "/", to: "votes#create"
  post "/api/graphql", to: "graphql#execute"
  post "/chat_channels/:id/moderate" => "chat_channels#moderate"
  post "/chat_channels/:id/open" => "chat_channels#open"
  post "/chat_channels/block_chat" => "chat_channels#block_chat"
  post "/chat_channels/create_chat" => "chat_channels#create_chat"
  post "/external_auth_observers/redirect_login" => 'login/external_auth_observers#redirect_login', as: :external_auth_validation
  post "/fallback_activity_recorder" => "ga_events#create"
  post "/feedback" => "feedback#create"
  post "/graphql", to: "graphql#execute"
  post "/graphql", to: "graphql#query"
  post "/logout" => "auth#logout"
  post "/newsletters" => "newsletters#create"
  post "/notification_subscriptions/:notifiable_type/:notifiable_id" => "notification_subscriptions#upsert"
  post "/profile" => "profile#update"
  post "/pusher/auth" => "pusher#auth"
  post "/quick_signup" => 'home#quick_signup'
  post "/starred/export", to: "starred_entries#export"
  post "apple_push_notifications/:version/devices/:device_token/registrations/:website_push_id", as: :apple_push_notifications_update, to: "apple_push_notifications#update", website_push_id: /.*/
  post "apple_push_notifications/:version/log", as: :apple_push_notifications_log, to: "apple_push_notifications#log"
  post "apple_push_notifications/:version/pushPackages/:website_push_id", as: :apple_push_notifications_package, to: "apple_push_notifications#create", website_push_id: /.*/
  post "articles/preview" => "articles#preview"
  post "cart/checkout" => "cart#checkout", :as => :checkout
  post "cart/remove/:id" => "cart#remove", :as => :remove_from_cart
  post "comments/preview" => "comments#preview"
  post "game/auth"
  post "game/endturn"
  post "game/newround"
  post "game/start"
  post "home/create_action"
  post "home/join_action"
  post "organizations/generate_new_secret" => "organizations#generate_new_secret"
  post "settings/sticky/:feed_id", as: :settings_sticky, to: "settings#sticky"
  post "settings/subscription_view_mode/:feed_id", as: :settings_subscription_view_mode, to: "settings#subscription_view_mode"
  post "users/add_org_admin" => "users#add_org_admin"
  post "users/api_secrets" => "api_secrets#create", :as => :users_api_secrets
  post "users/join_org" => "users#join_org"
  post "users/leave_org/:organization_id" => "users#leave_org", :as => :users_leave_org
  post "users/remove_from_org" => "users#remove_from_org"
  post "users/remove_org_admin" => "users#remove_org_admin"
  post "users/request_destroy", to: "users#request_destroy", as: :user_request_destroy
  post "users/update_language_settings" => "users#update_language_settings"
  post "users/update_twitch_username" => "users#update_twitch_username"
  post "votes/authenticate_from_island_is"
  post "votes/insecure_email_login"
  post "votes/post_vote"
  post "web_sub/:id/:signature", as: :web_sub_publish, to: "web_sub#publish"
  post '/api/stats/avg_rentals_per_user' => 'stats#avg_rentals_per_user'
  post '/api/stats/customer_paid_vs_free' => 'stats#customer_paid_vs_free'
  post '/api/stats/movies_per_country' => 'stats#movies_per_country'
  post '/auth/ldap', to: 'sessions#ldap', as: :ldap_callback
  post '/bounces' => 'amazon_bounces#notification'
  post '/converse-api/export-matrix'   => 'converse_api#export_matrix', default: { format: :csv }
  post '/converse-api/generate-matrix' => 'converse_api#generate_matrix'
  post '/fakelogin', to: 'auth#fake_create'
  post '/graphql', to: 'graphql#execute'
  post '/hooks/github', to: 'hooks#create'
  post '/import', to: 'users#import'
  post '/issues/new', :to => 'issues#new'
  post '/json-converters/download'     => 'json_converters#download'
  post '/locale/set', to: 'locale#set', as: :select_locale
  post '/pokemons', to: 'pokemons#create'
  post '/report', to: 'reports#create'
  post '/room/join', to: 'rooms#join_specific_room', as: :join_room
  post '/signin', to: "sessions#create"
  post '/signup', to: 'users#create', as: :create_user
  post '/songs/:id', to: 'songs#create'
  post '/suggest' => 'api#suggest'
  post '/time_entries/bulk_edit', :to => 'timelog#bulk_edit'
  post '/time_entries/new', :to => 'timelog#new'
  post '/uploads', to: 'uploads#create'
  post '/users/:id', to: "users#update"
  post '/webhooks/paypal_ipn' => 'paypal_ipn#ipn_hook', as: :paypal_ipn_hook
  post '/webhooks/plans' => 'plans#create'
  post 'admin/default_configuration', :to => 'admin#default_configuration'
  post 'admin/test_email', :to => 'admin#test_email', :as => 'test_email'
  post 'auth/login', to: 'authentication#authenticate'
  post 'availability/fake/' => 'availability#fake_many'
  post 'availability/forward/' => 'availability#forward_many'
  post 'bestbets/:id/delete' => 'best_bets#delete', as: :best_bets_delete
  post 'bestbets/:id/save' => 'best_bets#save', as: :best_bets_save
  post 'boards/:board_id/topics/:id/destroy', :to => 'messages#destroy'
  post 'boards/:board_id/topics/:id/edit', :to => 'messages#edit'
  post 'boards/:board_id/topics/:id/replies', :to => 'messages#reply'
  post 'boards/:board_id/topics/preview', :to => 'messages#preview', :as => 'preview_board_message'
  post 'catalog/sms' => 'catalog#sms'
  post 'confirmations/:user_id/re_send(/:id)' => 'communication_channels#re_send_confirmation', as: :re_send_confirmation, id: nil
  post 'conversations/mark_all_as_read' => 'conversations#mark_all_as_read'
  post 'dashboard/:id/delete' => 'dashboard#delete', as: :dashboard_delete
  post 'dashboard/:id/edit' => 'dashboard#save', as: :dashboard_save
  post 'files/pending' => 'files#create_pending', as: :file_create_pending
  post 'groups/:id/users', :to => 'groups#add_users', :id => /\d+/, :as => 'group_users'
  post 'images/users/:user_id/report' => 'users#report_avatar_image', as: :report_avatar_image
  post 'issues/:object_id/watchers', :to => 'watchers#create', :object_type => 'issue'
  post 'login/canvas' => 'login/canvas#create'
  post 'login/cas' => 'login/cas#destroy', as: :cas_logout
  post 'login/cas/:id' => 'login/cas#destroy'
  post 'login/ldap' => 'login/ldap#create'
  post 'login/oauth2/accept' => 'oauth2_provider#accept', as: :oauth2_auth_accept
  post 'login/oauth2/callback' => 'login/oauth2#create'
  post 'login/oauth2/token' => 'oauth2_provider#token', as: :oauth2_token
  post 'login/otp' => 'login/otp#create'
  post 'login/otp/sms' => 'login/otp#send_via_sms', as: :send_otp_via_sms
  post 'login/saml' => 'login/saml#create'
  post 'login/saml/logout' => 'login/saml#destroy'
  post 'media_objects/:media_object_id/media_tracks' => 'media_tracks#create', as: :create_media_tracks
  post 'my/api_key', :to => 'my#reset_api_key'
  post 'my/page', :to => 'my#update_page'
  post 'my/rss_key', :to => 'my#reset_rss_key', :as => 'my_rss_key'
  post 'patron/checkouts' => 'patron#checkouts'
  post 'projects/:id/repository/:repository_id/fetch_changesets', :to => 'repositories#fetch_changesets'
  post 'pseudonyms/:pseudonym_id/change_password/:nonce' => 'pseudonyms#change_password', as: :change_password
  post 'saml_consume' => 'login/saml#create'
  post 'single_use_link/generate_download/:id' => 'single_use_links#create_download', as: :generate_download_single_use_link
  post 'single_use_link/generate_show/:id' => 'single_use_links#create_show', as: :generate_show_single_use_link
  post 'users/:user_id/depositors' => 'depositors#create', as: 'user_depositors'
  post 'users/toggle_hide_dashcard_color_overlays' => 'users#toggle_hide_dashcard_color_overlays'
  post 'watchers/append', :to => 'watchers#append'
  post 'watchers/watch', :to => 'watchers#watch', :as => 'watch'
  put    'apps/:name'                => 'apps#update',          :as => :app_update
  put    'apps/:name/application'    => 'apps#upload',          :as => :app_upload
  put    'apps/:name/update'         => 'apps#start_update'
  put    'services/v1/configurations/:id/serialized/data'    => 'services#import_from_data',     :as => :service_import_from_data,      :id   => /[^\/]+/
  put    'services/v1/configurations/:id/serialized/url'     => 'services#import_from_url',      :as => :service_import_from_url,       :id   => /[^\/]+/
  put    'services/v1/configurations/:id/snapshots/:sid'     => 'services#rollback_snapshot',    :as => :service_rollback_snapshot,     :id   => /[^\/]+/, :sid => /[^\/]+/
  put    'users/*email'              => 'users#update',         :as => :update_user
  put '/cart/empty', to: 'orders#empty', as: :empty_cart
  put '/checkout/registration' => 'checkout#update_registration', :as => :update_checkout_registration
  put 'images/users/:user_id' => 'users#update_avatar_image', as: :update_avatar_image
  rb_match rb, 'burndown/:sprint_id',         :to => 'rb_burndown_charts#show'
  rb_match rb, 'burndown/:sprint_id/embed',   :to => 'rb_burndown_charts#embedded'
  rb_match rb, 'burndown/:sprint_id/print',   :to => 'rb_burndown_charts#print'
  rb_match rb, 'calendar/:key/:project_id.ics', :to => 'rb_calendars#ical',
  rb_match rb, 'hooks/sidebar/project/:project_id',
  rb_match rb, 'hooks/sidebar/project/:project_id/:sprint_id',
  rb_match rb, 'impediment/create', :to => 'rb_impediments#create'
  rb_match rb, 'impediment/update/:id', :to => 'rb_impediments#update'
  rb_match rb, 'issues/backlog/product/:project_id',
  rb_match rb, 'issues/backlog/sprint/:sprint_id',
  rb_match rb, 'issues/impediments/sprint/:sprint_id',
  rb_match rb, 'master_backlog/:project_id',
  rb_match rb, 'master_backlog/:project_id/closed_sprints', :to => 'rb_master_backlogs#closed_sprints'
  rb_match rb, 'master_backlog/:project_id/menu',
  rb_match rb, 'project/:project_id/backlogs', :to => 'rb_project_settings#project_settings'
  rb_match rb, 'projects/:project_id/taskboard',
  rb_match rb, 'release/:project_id/new',
  rb_match rb, 'release/:release_id',
  rb_match rb, 'release/:release_id/edit',
  rb_match rb, 'release/:release_id/shapshot',
  rb_match rb, 'release/:release_id/update',
  rb_match rb, 'releases/:project_id',
  rb_match rb, 'releases_multiview/:project_id/new',
  rb_match rb, 'releases_multiview/:release_multiview_id',
  rb_match rb, 'releases_multiview/:release_multiview_id/edit',
  rb_match rb, 'server_variables/project/:project_id.js',
  rb_match rb, 'server_variables/sprint/:sprint_id.js',
  rb_match rb, 'sprint/:sprint_id/close', :to => 'rb_sprints#close'
  rb_match rb, 'sprint/:sprint_id/reset', :to => 'rb_sprints#reset'
  rb_match rb, 'sprint/:sprint_id/update', :to => 'rb_sprints#update'
  rb_match rb, 'sprint/create', :to => 'rb_sprints#create'
  rb_match rb, 'sprint/download/:sprint_id.xml', :to => 'rb_sprints#download', :format => 'xml'
  rb_match rb, 'sprints/:project_id/close_completed', :to => 'rb_sprints#close_completed', :via => [:put]
  rb_match rb, 'stories/:project_id.pdf', :to => 'rb_stories#index', :format => 'pdf'
  rb_match rb, 'stories/:project_id/:sprint_id.pdf', :to => 'rb_stories#index', :format => 'pdf'
  rb_match rb, 'story/:id/tooltip', :to => 'rb_stories#tooltip'
  rb_match rb, 'story/create', :to => 'rb_stories#create'
  rb_match rb, 'story/update/:id', :to => 'rb_stories#update'
  rb_match rb, 'taskboards/:sprint_id',
  rb_match rb, 'tasks/:story_id', :to => 'rb_tasks#index'
  rb_match rb, 'updated_items/:project_id', :to => 'rb_updated_items#show'
  rb_match rb, 'wikis/:sprint_id', :to => 'rb_wikis#show'
  rb_match rb, 'wikis/:sprint_id/edit', :to => 'rb_wikis#edit'
  require "sidekiq/web"
  require 'sidekiq-ent/web'
  require 'sidekiq-scheduler/web'
  require 'sidekiq/web'
  resolve("ProMembership") { [:pro_membership] } # see https://guides.rubyonrails.org/routing.html#using-resolve
  resources :actions, path: "settings/actions", only: [:index, :create, :new, :update, :destroy, :edit]
  resources :rooms, only: [:create, :show, :destroy], param: :room_uid, path: '/'
  resources :sharing_services, path: "settings/sharing", only: [:index, :create, :update, :destroy]
  resources :users, id: /.*/ do
  root "tenet/pages#landing"
  root :to => 'apipie/apipies#index'
  root to: 'v1/cert_bundles#index'
  root to: redirect("/graphiql")
  scope "(/:locale)", :constraints => { :locale => locale_matcher } do
  scope "(/locale/:locale)", defaults: { locale: nil } do
  scope "rails/conductor/full_request_logger/", module: "rails/conductor/full_request_logger" do
  scope '(:locale)', locale: /#{Spree.available_locales.join('|')}/, defaults: { locale: nil } do
  scope '/:meetingID' do
  scope '/:room_uid' do
  scope '/account_activations' do
  scope '/admins' do
  scope '/api' do
  scope '/dashboard' do
  scope '/feeds' do
  scope '/profile' do
  scope '/quizzes/quiz_submissions/:quiz_submission_id', as: 'quiz_submission' do
  scope '/themes' do
  scope '/u' do
  scope :module => :v1, :path => '/api/v1' do
  scope :module => :v2, :path => '/api/v2' do
  scope ENV['RAILS_RELATIVE_URL_ROOT'] || '/' do
  scope controller: 'api/deprecated', action: 'index' do
  scope path: nil, constraints: { format: /(json|html|\*\/\*)/ } do
#     http://www.apache.org/licenses/LICENSE-2.0
#  match "catalog/range_limit" => "catalog#range_limit"
# BigBlueButton open source conferencing system - http://www.bigbluebutton.org/.
# Canvas is free software: you can redistribute it and/or modify it under
# See https://github.com/voltrb/volt#routes for more info on routes
# This program is free software; you can redistribute it and/or
# This program is free software; you can redistribute it and/or modify it under the
# rubocop:disable Metrics/BlockLength
# rubocop:enable Metrics/BlockLength
# with BigBlueButton; if not, see <http://www.gnu.org/licenses/>.
# with this program. If not, see <http://www.gnu.org/licenses/>.
BACKUP_ROUTE_FORMAT = /.+\.(sql\.gz|tar\.gz|tgz)/i unless defined? BACKUP_ROUTE_FORMAT
Dir["{gems,vendor}/plugins/*/config/pre_routes.rb"].each { |pre_routes|
Generated by: https://github.com/openapitools/openapi-generator.git
Generated by: https://github.com/swagger-api/swagger-codegen.git
Sidekiq::Web.app_url = '/'
This is a sample server Petstore server.  You can find out more about Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).  For this sample, you can use the api key `special-key` to test the authorization filters.
Thredded::Engine.routes.draw do # rubocop:disable Metrics/BlockLength
USERNAME_ROUTE_FORMAT = /[%\w.\-]+?/ unless defined? USERNAME_ROUTE_FORMAT
[config/routes.rb] You need more than 1 unicorn worker to run fake Core server
endrequire 'sidekiq/web'
full_path_glob = '(/*full_path)'
get '/', {}
get '/about', _action: 'about'
get '/login', _controller: 'user-templates', _action: 'login'
get '/signup', _controller: 'user-templates', _action: 'signup'
require "mini_scheduler/web"
require "sidekiq/web"
require 'sidekiq-status/web'
require 'sidekiq/web'
require 'sidekiq_unique_jobs/web'
                post :force_run
               :to => 'rb_releases#edit', :via => [:get, :post]
               :to => 'rb_releases#new', :via => [:get, :post]
               :to => 'rb_releases_multiview#edit', :via => [:get, :post]
               :to => 'rb_releases_multiview#new', :via => [:get, :post]
               adv_search_post +
               button_post +
               button_post + exp_post
               compare_post +
               dialog_runner_post
               dialog_runner_post +
               drift_post +
               exp_post
               exp_post +
               ownership_post
               ownership_post +
               perf_post +
               policy_post +
               pre_prov_post
               pre_prov_post +
               save_post
               save_post +
               snap_post
               snap_post +
               x_post
              post "bust_cache"
              post "create_note"
              post "revoke" => "api#revoke_key"
              post "save_status"
              post "send_email"
              post "undo-revoke" => "api#undo_revoke_key"
              post :activate
              post :add_owner
              post :approve
              post :copy
              post :fetch
              post :masterize
              post :promote, on: :member
              post :revert
              post :suspend
              post :unsuspend
              resources :posts, :only => :create
            get :post_frequency
            match :test_dns, via: %i[post get]
            patch :posting_allowed
            post "roll_up"
            post :add_unit
            post :approve
            post :ban
            post :buy
            post :change_category
            post :change_partner
            post :charge
            post :deploy
            post :force_run
            post :hide
            post :masterize
            post :order
            post :posting_allowed
            post :preferences_update   # POST request, no redirect
            post :promote_admin
            post :publish
            post :reject
            post :reply
            post :resend_verification_email
            post :resume
            post :send_confirmation
            post :subscribe
            post :suspend
            post :unban
            post :unskip
            post :update
            resources :posts, :only => [:create]
            resources :posts, :only => [:index, :edit, :update, :destroy]
          adv_search_post +
          exp_post
          exp_post +
          match 'committers', :via => [:get, :post]
          match 'hosted_success', via: [:get, :post], on: :member
          post "#{controller_name}/#{action_name}(/:id)",
          post "/award/:badge_id" => "badges#mass_award"
          post "/badge_achievements/award_badges", to: "badge_achievements#award_badges"
          post "/onboarding", to: "reactions#onboarding"
          post "/update_or_create", to: "github_repos#update_or_create"
          post "advanced-test" => "email#advanced_test"
          post "badge_groupings" => "badges#save_badge_groupings"
          post "banish"
          post "bust_cache"
          post "create_note"
          post "export_data"
          post "full_delete"
          post "handle_mail"
          post "merge"
          post "notifications" => "groups#set_notifications"
          post "preview" => "badges#preview"
          post "request_membership" => "groups#request_membership"
          post "restore" => "backups#restore", constraints: { id: RouteFormat.backup }
          post "rollback" => "backups#rollback"
          post "save_status"
          post "send_bulk_mail"
          post "send_email"
          post "test"
          post "upload" => "backups#upload_backup_chunk"
          post "verify_email_ownership"
          post 'comment'
          post 'web_hooks/:id/ping' => 'web_hooks#ping'
          post 'web_hooks/:web_hook_id/events/:event_id/redeliver' => 'web_hooks#redeliver_event'
          post :add_from_file
          post :add_owner
          post :backup
          post :create_route
          post :create_sender_address
          post :fetch
          post :fire
          post :order
          post :perform
          post :provider_create, constraints: MasterDomainConstraint
          post :record_answer
          post :reorder
          post :resend_verification_email
          post :short_ship
          post :stripe_confirm_intent
          post :stripe_failed_intent
          post :update_positions
          resources :posts, :only => [:index, :edit, :update, :destroy]
          save_post
         adv_search_post +
         exp_post
        adv_search_post +
        compare_post +
        controller_actions[:post].each do |action_name|
        dialog_runner_post
        dialog_runner_post +
        exp_post
        exp_post +
        get "live_post_counts"
        get "posts.rss" => "groups#posts_feed", format: :rss
        get 'posts'
        match 'follow', via: %i[post get]
        match 'preview', :via => [:post, :put, :patch]
        match 'unfollow', via: %i[post get]
        perf_post +
        post   'users/:user_id/observees', action: :create
        post "#{context.pluralize}/:#{context}_id/assignments/:assignment_id/submissions", action: :create, controller: :submissions
        post "#{context.pluralize}/:#{context}_id/assignments/:assignment_id/submissions/:user_id/files", action: :create_file
        post "#{context.pluralize}/:#{context}_id/assignments/:assignment_id/submissions/update_grades", action: :bulk_update
        post "#{context.pluralize}/:#{context}_id/content_migrations", action: :create, as: "#{context}_content_migration_create"
        post "#{context.pluralize}/:#{context}_id/content_migrations/:content_migration_id/migration_issues", action: :create, as: "#{context}_content_migration_migration_issue_create"
        post "#{context.pluralize}/:#{context}_id/discussion_topics", controller: :discussion_topics, action: :create
        post "#{context.pluralize}/:#{context}_id/discussion_topics/:topic_id/duplicate", action: :duplicate
        post "#{context.pluralize}/:#{context}_id/discussion_topics/:topic_id/entries", action: :add_entry, as: "#{context}_discussion_add_entry"
        post "#{context.pluralize}/:#{context}_id/discussion_topics/:topic_id/entries/:entry_id/rating",
        post "#{context.pluralize}/:#{context}_id/discussion_topics/:topic_id/entries/:entry_id/replies", action: :add_reply, as: "#{context}_discussion_add_reply"
        post "#{context.pluralize}/:#{context}_id/discussion_topics/reorder", controller: :discussion_topics, action: :reorder
        post "#{context.pluralize}/:#{context}_id/submissions/update_grades", action: :bulk_update
        post "#{context}s/:#{context}_id/create_tool_with_verification", action: :create_tool_with_verification, as: "#{context}_create_tool_with_verification"
        post "#{context}s/:#{context}_id/external_feeds", action: :create, as: "#{context}_external_feeds_create"
        post "#{context}s/:#{context}_id/external_tools", action: :create, as: "#{context}_external_tools_create"
        post "#{context}s/:#{context}_id/outcome_imports", action: :create
        post "#{prefix}", action: :create
        post "#{prefix}/:conference_id/recording_ready", action: :recording_ready, as: "#{context}_conferences_recording_ready"
        post "#{prefix}/apps/:app_id/reviews/self", action: :add_review
        post "#{prefix}/outcome_groups/:id/batch", action: :batch, as: "#{context}_outcome_group_batch"
        post "#{prefix}/outcome_groups/:id/import", action: :import, as: "#{context}_outcome_group_import"
        post "#{prefix}/outcome_groups/:id/outcomes", action: :link
        post "#{prefix}/outcome_groups/:id/subgroups", action: :create
        post "/moderator_create", to: "comments#moderator_create"
        post "/update_or_create", to: "github_repos#update_or_create"
        post "banish"
        post "bust_cache"
        post "create_note"
        post "defer_flags"
        post "export_entity" => "export_csv#export_entity"
        post "forgot_password"
        post "full_delete"
        post "groups" => "users#add_group", constraints: AdminConstraint.new
        post "log_out", constraints: AdminConstraint.new
        post "merge"
        post "recover_identity"
        post "reset_bounce_score"
        post "save_status"
        post "saved_searches/:id/update", to: "saved_searches#update"
        post "send_email"
        post "starred_entries/delete", to: "starred_entries#destroy"
        post "subscriptions/:id/update", to: "subscriptions#update"
        post "track"
        post "unread_entries/delete", to: "unread_entries#destroy"
        post "updated_entries/delete", to: "updated_entries#destroy"
        post "watched_words/upload" => "watched_words#upload"
        post '/login', to: 'user_sessions#create', as: :create_new_session
        post '/password/recover', to: 'user_passwords#create', as: :reset_password
        post '/synonyms' => 'tags#create_synonyms'
        post 'add_attachment'
        post 'apply' => "conferences#save_apply"
        post 'insert/:page_part_id' => 'attachments#insert', as: :insert
        post 'insert_collection/:page_part_id' => 'attachments#insert_collection', as: :insert_collection
        post 'jobs/batch_update', action: :batch_update
        post 'mark_as_read'
        post 'mark_as_unread'
        post 'mfa_edit', to: 'passwords#mfa_edit', as: :mfa_edit
        post 'new'
        post 'preview', to: 'preview#show', as: :preview_pages
        post 'protect'
        post 'rename'
        post 'reseed' => 'site_texts#reseed'
        post 'transfer_to_location'
        post 'transfer_to_shipment'
        post 'turnitin/resubmit' => 'submissions#resubmit_to_turnitin', as: :resubmit_to_turnitin
        post 'users/:user_id/observer_alert_thresholds', action: :create
        post 'users/:user_id/observer_pairing_codes', action: :create
        post 'vericite/resubmit' => 'submissions#resubmit_to_vericite', as: :resubmit_to_vericite
        post :accept
        post :add_admin
        post :add_from_file
        post :add_outcome
        post :add_role
        post :change_gradebook_column_size
        post :change_mistyped_email
        post :clone
        post :copy
        post :copy_access
        post :follow
        post :join
        post :masterize
        post :ping
        post :preview, on: :new, controller: 'post_previews'
        post :preview, on: :new, controller: 'private_post_previews'
        post :push_shipment_order
        post :recover
        post :refresh_favicon
        post :reorder
        post :request_new_password
        post :resend
        post :save_gradebook_column_order
        post :sort
        post :speed_grader_settings
        post :transfer_stock
        post :update_blocked_dates
        post :update_positions
        post :update_submission
        post :update_values_positions
        post :update_working_time_slots
        post prefix, action: :create
        post_install_callback
        put "delete_posts_batch"
        put "merge_posts"
        resource :preview, only: [:update], controller: 'post_previews'
        resource :preview, only: [:update], controller: 'private_post_previews'
        save_post
        save_post +
        x_post
        x_post +
      ) + adv_search_post +
      ) + adv_search_post + exp_post + save_post
      ) + adv_search_post + exp_post + save_post + dialog_runner_post
      ) + adv_search_post + save_post,
      ) + exp_post + dialog_runner_post
      :post   =>  %w(
      :post  => %w(
      :post => %w(
      :post => %w[
      ] + adv_search_post + save_post + exp_post
      delete "bookmark", to: "posts#destroy_bookmark"
      get "#{root_path}/:username/activity.json" => "posts#user_posts_feed", format: :json, constraints: { username: RouteFormat.username }
      get "#{root_path}/:username/activity.rss" => "posts#user_posts_feed", format: :rss, constraints: { username: RouteFormat.username }
      get "#{root_path}/:username/deleted-posts" => "users#show", constraints: { username: RouteFormat.username }
      get "#{root_path}/:username/flagged-posts" => "users#show", constraints: { username: RouteFormat.username }
      get "complete"  # if you are adding a new controller which performs an action, use post instead
      get "revisions/:revision" => "posts#revisions", constraints: { revision: /\d+/ }
      get "revisions/latest" => "posts#latest_revision"
      get :all_posts
      match "share/:entry_id", to: "supported_sharing_services#share", as: :share, via: [:get, :post]
      match 'bookmark', :via => [:delete, :post]
      match 'bulk_edit', :via => [:get, :post]
      match 'copy', :via => [:get, :post]
      match 'fields', :via => [:get, :post]
      match 'take' => 'quizzes/quizzes#show', take: '1', via: [:get, :post]
      match :close, via: [:get, :post]
      match :join, via: [:get, :post]
      match :push, via: [:post, :get]
      match :resource_selection, via: [:get, :post]
      post   'login'
      post "#{controller_name}/#{action_name}(/:id)",
      post "#{prefix}/authorize", controller: 'lti/ims/authorization', action: :authorize, as: "#{context}_lti_oauth2_authorize"
      post "#{prefix}/reorder", action: :reorder, as: "custom_gradebook_columns_reorder"
      post "#{prefix}/tool_proxy", controller: 'lti/ims/tool_proxy', action: :create,
      post "#{prefix}/tool_proxy", controller: 'lti/ims/tool_proxy', action: :re_reg,
      post "#{root_path}/:username/preferences/email" => "users_email#create", constraints: { username: RouteFormat.username }
      post "#{root_path}/:username/preferences/revoke-account" => "users#revoke_account", constraints: { username: RouteFormat.username }
      post "#{root_path}/:username/preferences/revoke-auth-token" => "users#revoke_auth_token", constraints: { username: RouteFormat.username }
      post "#{root_path}/action/send_activation_email" => "users#send_activation_email"
      post "#{root_path}/confirm-admin/:token" => "users#confirm_admin", constraints: { token: /[0-9a-f]+/ }
      post "#{root_path}/create_second_factor_security_key" => "users#create_second_factor_security_key"
      post "#{root_path}/create_second_factor_totp" => "users#create_second_factor_totp"
      post "#{root_path}/email-login" => "users#email_login"
      post "#{root_path}/enable_second_factor_totp" => "users#enable_second_factor_totp"
      post "#{root_path}/read-faq" => "users#read_faq"
      post "#{root_path}/register_second_factor_security_key" => "users#register_second_factor_security_key"
      post "#{root_path}/second_factors" => "users#list_second_factors"
      post "#{root_path}/toggle-anon" => "users#toggle_anon"
      post "/accounts/:account_id/data_services", action: :create, as: :data_services_create
      post "/accounts/:account_id/external_tools", action: :create, as: :account_external_tools_create
      post "/accounts/:account_id/external_tools/rce_favorites/:id", action: :add_rce_favorite, as: :account_external_tools_add_rce_favorite
      post "/badge_achievements/award_badges", to: "badge_achievements#award_badges"
      post "/mailchimp/:secret/unsubscribe", to: "mailchimp_unsubscribes#create", as: :mailchimp_unsubscribe
      post "/move" => "categories#move"
      post "/notifications" => "categories#set_notifications"
      post "accept" => "short_url_requests#accept"
      post "accounts/:account_id/csp_settings/domains", :action => :add_domain
      post "accounts/:account_id/csp_settings/domains/batch_create", :action => :add_multiple_domains
      post "accounts/:account_id/outcome_proficiency", action: :create
      post "approve"
      post "assignments/:assignment_id/submissions/:submission_id/originality_report", action: :create
      post "cancel"
      post "complete"
      post "courses/:course_id/assignments/:assignment_id/extensions", action: :create, as: "course_assignment_extensions_create"
      post "courses/:course_id/assignments/:assignment_id/provisional_grades/publish",
      post "courses/:course_id/line_items", action: :create, as: :lti_line_item_create
      post "courses/:course_id/line_items/:line_item_id/scores", action: :create, as: :lti_result_create
      post "courses/:course_id/live_assessments", action: :create, as: "course_live_assessment_create"
      post "courses/:course_id/live_assessments/:assessment_id/results", action: :create, as: "course_live_assessment_result_create"
      post "courses/:course_id/microsoft_sync/group", action: :create
      post "courses/:course_id/modules", action: :create, as: 'course_context_module_create'
      post "courses/:course_id/modules/:module_id/duplicate", action: :duplicate
      post "courses/:course_id/modules/:module_id/items", action: :create, as: 'course_context_module_items_create'
      post "courses/:course_id/modules/:module_id/items/:id/mark_read", action: :mark_item_read
      post "courses/:course_id/modules/:module_id/items/:id/select_mastery_path", action: :select_mastery_path
      post "courses/:course_id/modules/items/:id/duplicate", action: :duplicate, as: :course_context_module_item_duplicate
      post "courses/:course_id/outcome_proficiency", action: :create
      post "courses/:course_id/pages", action: :create
      post "courses/:course_id/pages/:url/duplicate", action: :duplicate
      post "courses/:course_id/pages/:url/revisions/:revision_id", action: :revert
      post "courses/:course_id/quizzes", action: :create, as: 'course_quiz_create'
      post "courses/:course_id/quizzes/:id/reorder", action: :reorder, as: 'course_quiz_reorder'
      post "courses/:course_id/quizzes/:id/submission_users/message", action: :message, as: 'course_quiz_submission_users_message'
      post "courses/:course_id/quizzes/:id/validate_access_code", action: :validate_access_code, as: 'course_quiz_validate_access_code'
      post "courses/:course_id/quizzes/:quiz_id/groups", action: :create, as: 'course_quiz_group_create'
      post "courses/:course_id/quizzes/:quiz_id/groups/:id/reorder", action: :reorder, as: 'course_quiz_group_reorder'
      post "courses/:course_id/quizzes/:quiz_id/questions", action: :create, as: 'course_quiz_question_create'
      post "courses/:course_id/quizzes/:quiz_id/reports", action: :create, as: 'course_quiz_reports_create'
      post "courses/:course_id/quizzes/:quiz_id/submissions/:id/events", action: :create, as: 'create_quiz_submission_events'
      post "error_reports", action: :create
      post "global/outcomes_import",            action: :create
      post "groups/:group_id/pages", action: :create
      post "groups/:group_id/pages/:url/revisions/:revision_id", action: :revert
      post "polls", action: :create, as: 'poll_create'
      post "polls/:poll_id/poll_choices", action: :create, as: 'poll_choices_create'
      post "polls/:poll_id/poll_sessions", action: :create, as: 'poll_sessions_create'
      post "polls/:poll_id/poll_sessions/:poll_session_id/poll_submissions", action: :create, as: 'poll_submissions_create'
      post "reject" => "short_url_requests#reject"
      post "subscriptions", action: :create
      post "themes/generate_key_pair" => "themes#generate_key_pair"
      post "themes/import" => "themes#import"
      post "themes/upload_asset" => "themes#upload_asset"
      post "users/self/favorites/courses/:id", action: :add_favorite_course, as: :add_favorite_course
      post "users/self/favorites/groups/:id", action: :add_favorite_groups, as: :add_favorite_groups
      post "users/sync_sso" => "users#sync_sso", constraints: AdminConstraint.new
      post '', action: :moderate_post, as: :moderate_post
      post '/', to: 'recordings#update', as: :update_recording
      post '/:collection_id/permission_template' => 'admin/permission_templates#create'
      post '/bulk_action', action: :bulk_action, as: 'bulk_action'
      post '/courses/:course_id/assignments/:assignment_id/submissions/:user_id/comments/files', action: :create_file
      post '/login' => 'user_sessions#create', :as => :create_new_session
      post '/login', to: 'auth#create'
      post '/login', to: 'user_sessions#create', as: :create_new_session
      post '/password/recover' => 'user_passwords#create', :as => :reset_password
      post '/password/recover', to: 'user_passwords#create', as: :reset_password
      post '/quiz_submissions/:quiz_submission_id/questions', action: :answer, as: 'quiz_submission_question_answer'
      post '/signup', to: 'user_registrations#create', as: :registration
      post '/upload' => 'tags#upload'
      post '/user/:id', action: :moderate_user, as: :moderate_user
      post 'accounts/:account_id/account_notifications', action: :create, as: 'account_notification'
      post 'accounts/:account_id/admins', action: :create
      post 'accounts/:account_id/authentication_providers', action: :create, as: 'account_create_ap'
      post 'accounts/:account_id/bounced_communication_channels/reset', action: :bulk_reset_bounce_counts
      post 'accounts/:account_id/courses', action: :create
      post 'accounts/:account_id/developer_keys', action: :create
      post 'accounts/:account_id/developer_keys/:developer_key_id/developer_key_account_bindings', action: :create_or_update
      post 'accounts/:account_id/developer_keys/tool_configuration', action: :create
      post 'accounts/:account_id/grading_period_sets', action: :create
      post 'accounts/:account_id/grading_standards', action: :create
      post 'accounts/:account_id/group_categories', action: :create
      post 'accounts/:account_id/logins', action: :create
      post 'accounts/:account_id/reports/:report', action: :create, as: 'account_create_report'
      post 'accounts/:account_id/roles', action: :add_role
      post 'accounts/:account_id/roles/:id/activate', action: :activate_role
      post 'accounts/:account_id/self_registration', action: :create_self_registered_user
      post 'accounts/:account_id/shared_brand_configs', action: :create
      post 'accounts/:account_id/sis_imports', action: :create
      post 'accounts/:account_id/sub_accounts', action: :create
      post 'accounts/:account_id/terms', action: :create
      post 'accounts/:account_id/unconfirmed_communication_channels/confirm', action: :bulk_confirm
      post 'accounts/:account_id/users', action: :create
      post 'alignments' => 'outcomes#align', as: :align
      post 'anonymous_submissions/:anonymous_id/turnitin/resubmit',
      post 'anonymous_submissions/:anonymous_id/vericite/resubmit',
      post 'appointment_groups', action: :create
      post 'archive'
      post 'authenticate', to: 'sessions#authenticate', as: :authenticate
      post 'authorize_redirect', action: :authorize_redirect
      post 'batch_update'
      post 'brand_configs', action: :create
      post 'brand_configs/save_to_account', action: :save_to_account
      post 'brand_configs/save_to_user_session', action: :save_to_user_session
      post 'bulk_update'
      post 'calendar_events', action: :create
      post 'calendar_events/:id/reservations', action: :reserve
      post 'calendar_events/:id/reservations/:participant_id', action: :reserve, as: 'calendar_event_reserve'
      post 'calendar_events/save_selected_contexts', action: :save_selected_contexts
      post 'cancel', default: { format: :json }
      post 'clone_with_name'
      post 'close'
      post 'collapse' => 'context_modules#toggle_collapse', as: :toggle_collapse
      post 'conversations', action: :create
      post 'conversations/:id/add_message', action: :add_message
      post 'conversations/:id/add_recipients', action: :add_recipients
      post 'conversations/:id/remove_messages', action: :remove_messages
      post 'conversations/mark_all_as_read', action: :mark_all_as_read
      post 'courses/:course_id/assignments', action: :create
      post 'courses/:course_id/assignments/:assignment_id/duplicate', action: :duplicate
      post 'courses/:course_id/assignments/:assignment_id/moderated_students', action: :create, as: :add_moderated_students
      post 'courses/:course_id/assignments/:assignment_id/overrides', action: :create
      post 'courses/:course_id/assignments/:assignment_id/submissions/:submission_id/peer_reviews', action: :create
      post 'courses/:course_id/assignments/overrides', action: :batch_create
      post 'courses/:course_id/blueprint_templates/:template_id/migrations', action: :queue_migration
      post 'courses/:course_id/calendar_events/timetable', action: :set_course_timetable
      post 'courses/:course_id/calendar_events/timetable_events', action: :set_course_timetable_events
      post 'courses/:course_id/course_copy', controller: :content_imports, action: :copy_course_content
      post 'courses/:course_id/enrollments', action: :create
      post 'courses/:course_id/enrollments/:id/accept', action: :accept
      post 'courses/:course_id/enrollments/:id/reject', action: :reject
      post 'courses/:course_id/epub_exports', {
      post 'courses/:course_id/files', action: :create_file, as: 'course_create_file'
      post 'courses/:course_id/folders', controller: :folders, action: :create
      post 'courses/:course_id/grading_standards', action: :create
      post 'courses/:course_id/group_categories', action: :create
      post 'courses/:course_id/link_validation', action: :start_link_validation
      post 'courses/:course_id/mastery_paths/rules', action: 'create'
      post 'courses/:course_id/ping', action: :ping, as: 'course_ping'
      post 'courses/:course_id/preview_html', action: :preview_html
      post 'courses/:course_id/quiz_extensions', action: :create
      post 'courses/:course_id/quizzes/:quiz_id/extensions', action: :create, as: 'course_quiz_extensions_create'
      post 'courses/:course_id/quizzes/:quiz_id/outstanding_quiz_submissions', :action => :grade, :path_name => 'outstanding_quiz_submission_grade'
      post 'courses/:course_id/quizzes/:quiz_id/submissions', action: :create, as: 'course_quiz_submission_create'
      post 'courses/:course_id/quizzes/:quiz_id/submissions/:id/complete', action: :complete, as: 'course_quiz_submission_complete'
      post 'courses/:course_id/quizzes/:quiz_id/submissions/self/files', action: :create, as: 'quiz_submission_files'
      post 'courses/:course_id/reset_content', :action => :reset_content
      post 'courses/:course_id/rubric_associations', action: :create
      post 'courses/:course_id/rubric_associations/:rubric_association_id/rubric_assessments', controller: :rubric_assessments, action: :create
      post 'courses/:course_id/rubrics', controller: :rubrics, action: :create
      post 'courses/:course_id/sections', action: :create
      post 'courses/:id/late_policy', action: :create
      post 'extensions/:user_id' => 'quizzes/quiz_submissions#extensions', as: :extensions
      post 'files/:id', action: :api_show
      post 'files/:id/create_success', action: :api_create_success
      post 'files/:id/reset_verifier', action: :reset_verifier
      post 'files/capture', action: :api_capture, as: 'files_capture'
      post 'folders/:dest_folder_id/copy_file', action: :copy_file
      post 'folders/:dest_folder_id/copy_folder', action: :copy_folder
      post 'folders/:folder_id/files', action: :create_file
      post 'folders/:folder_id/folders', action: :create, as: 'create_folder'
      post 'group_categories/:group_category_id/assign_unassigned_members', action: 'assign_unassigned_members', as: 'group_category_assign_unassigned_members'
      post 'group_categories/:group_category_id/groups', action: :create
      post 'group_categories/:group_category_id/import', action: :import
      post 'groups/:group_id/files', action: :create_file
      post 'groups/:group_id/folders', controller: :folders, action: :create
      post 'groups/:group_id/invite', action: :invite
      post 'groups/:group_id/preview_html', action: :preview_html
      post 'image_selection/:id', action: :image_selection
      post 'inline_view' => 'files#show', inline: '1'
      post 'invite'
      post 'items' => 'context_modules#add_item', as: :add_item
      post 'jwts', action: :create
      post 'jwts/refresh', action: :refresh
      post 'login'  => :create
      post 'media_objects', action: 'create_media_object', as: :create_media_object
      post 'mfa_create', to: 'sessions#mfa_create', as: :mfa_create
      post 'migrate'
      post 'peer_reviews/:id' => 'assignments#remind_peer_review', as: :remind_peer_review
      post 'peer_reviews/users/:reviewer_id' => 'assignments#assign_peer_review', as: :assign_peer_review
      post 'permissions', :to => 'roles#update_permissions'
      post 'planner/overrides', action: :create
      post 'planner_notes', action: :create
      post 'remind/:assessment_request_id' => 'rubric_assessments#remind', as: :remind_assessee
      post 'reopen'
      post 'reorder' => 'assignment_groups#reorder_assignments', as: :reorder_assignments
      post 'reorder' => 'context_modules#reorder_items', as: :reorder
      post 'sections/:id/crosslist/:new_course_id', action: :crosslist
      post 'sections/:section_id/assignments/:assignment_id/submissions/:submission_id/peer_reviews', action: :create
      post 'sections/:section_id/enrollments', action: :create
      post 'services/kaltura_session', action: :start_kaltura_session
      post 'submissions_upload/:assignment_id' => 'gradebooks#submissions_zip_upload', as: :submissions_upload
      post 'trophy' => 'trophies#toggle_trophy' # used by hyrax/trophy.js
      post 'unarchive'
      post 'update_issue_done_ratio'
      post 'users/:id/clear_cache', :action => :clear_cache, :as => 'clear_cache'
      post 'users/:id/split', controller: 'users', action: 'split', as: 'split'
      post 'users/:user_id/communication_channels', action: :create
      post 'users/:user_id/communication_channels/:id', action: :reset_bounce_count, as: 'reset_bounce_count'
      post 'users/:user_id/content_shares', action: :create
      post 'users/:user_id/content_shares/:id/add_users', action: :add_users
      post 'users/:user_id/files', action: :create_file
      post 'users/:user_id/folders', controller: :folders, action: :create
      post 'users/self/bookmarks', action: :create
      post 'users/self/pandata_events_token', controller: 'users', action: 'pandata_events_token'
      post :archive_selected
      post :assign_peer_reviews
      post :bookmark
      post :comment 
      post :content
      post :crosslist
      post :delete_selected
      post :exhibit, on: :member
      post :export
      post :mark_all_as_read
      post :mark_as_read, to: "entries#mark_as_read"
      post :mark_direction_as_read
      post :mark_read_selected
      post :move_questions
      post :mute_selected
      post :preview
      post :preview, on: :new, controller: 'private_topic_previews'
      post :preview, on: :new, controller: 'topic_previews'
      post :recently_played, to: "recently_played_entries#create"
      post :recently_read, to: "recently_read_entries#create"
      post :reorder
      post :search
      post :sort, on: :collection
      post :sort, on: :member
      post :star
      post :starred_entries, to: "starred_entries#update"
      post :sync
      post :syncing
      post :unread_entries, to: "unread_entries#update"
      post :update_positions, on: :collection
      post prefix, action: :create
      put "post_type"
      put "revisions/:revision/hide" => "posts#hide_revision", constraints: { revision: /\d+/ }
      put "revisions/:revision/revert" => "posts#revert", constraints: { revision: /\d+/ }
      put "revisions/:revision/show" => "posts#show_revision", constraints: { revision: /\d+/ }
      put 'courses/:course_id/disable_post_to_sis', action: 'disable_post_to_sis', as: :disable_post_to_sis_course_assignments
      resources :posts
      resources :posts, except: %i[index show], path: '' do
      resources :private_posts, path: '', except: %i[index show] do
      unless controller_actions[:post].nil?
    # One-by-one get/post routes for defined controllers
    devise_for :delete_or_posts, sign_out_via: [:delete, :post], class_name: "Admin"
    devise_for :posts, sign_out_via: :post, class_name: "Admin"
    get "/page/post-a-job", to: "pages#post_a_job"
    get "/posts/:id/cooked" => "posts#cooked"
    get "/posts/:id/expand-embed" => "posts#expand_embed"
    get "/posts/:id/raw" => "posts#markdown_id"
    get "/posts/:id/raw-email" => "posts#raw_email"
    get "p/:post_id(/:user_id)" => "posts#short_link"
    get "posts" => "posts#latest", id: "latest_posts", constraints: { format: /(json|rss)/ }
    get "posts/:id/reply-history" => "posts#reply_history"
    get "posts/:id/reply-ids"     => "posts#reply_ids"
    get "posts/:id/reply-ids/all" => "posts#all_reply_ids"
    get "posts/:username/deleted" => "posts#deleted_posts", constraints: { username: RouteFormat.username }
    get "posts/:username/flagged" => "posts#flagged_posts", constraints: { username: RouteFormat.username }
    get "posts/by-date/:topic_id/:date" => "posts#by_date"
    get "posts/by_number/:topic_id/:post_number" => "posts#by_number"
    get "private-posts" => "posts#latest", id: "private_posts", constraints: { format: /(json|rss)/ }
    get "raw/:topic_id(/:post_number)" => "posts#markdown_num"
    get "t/:slug/:topic_id/:post_number" => "topics#show", constraints: { topic_id: /\d+/, post_number: /\d+/ }
    get "t/:slug/:topic_id/last" => "topics#show", post_number: 99999999, constraints: { topic_id: /\d+/ }
    get "t/:topic_id/:post_number" => "topics#show", constraints: { topic_id: /\d+/, post_number: /\d+/ }
    get "t/:topic_id/last" => "topics#show", post_number: 99999999, constraints: { topic_id: /\d+/ }
    get "t/:topic_id/post_ids" => "topics#post_ids", constraints: { topic_id: /\d+/ }, format: :json
    get "t/:topic_id/posts" => "topics#posts", constraints: { topic_id: /\d+/ }, format: :json
    match "#{context.pluralize}/:#{context}_id/external_content/success/:service" => 'external_content#success', as: "#{context}_external_content_success", via: [:get, :post]
    match "#{context.pluralize}/:#{context}_id/external_content/success/:service/:id" => 'external_content#success', as: "#{context}_external_content_update", via: [:get, :post]
    match "/404", to: "exceptions#not_found", via: [:get, :post]
    match "/auth/:provider/callback", to: "users/omniauth_callbacks#complete", via: [:get, :post]
    match "/auth/failure", to: "users/omniauth_callbacks#failure", via: [:get, :post]
    match '/:provider/callback', to: 'sessions#create',  via: [:get, :post]
    match '/api_docs/proxy' => 'api_docs/proxy#show', via: [:get, :post]
    match '/estimate_timelog/:action', :controller => 'estimate_timelog', :via => [:get, :post]
    match 'masquerade', via: [:get, :post]
    match 'test_ldap_logins' => 'authentication_providers#test_ldap_login', via: [:get, :post]
    match :failure,              to: 'sessions#failure', via: [:get, :post]
    post "#{prefix}/deep_linking_response", controller: 'lti/ims/deep_linking', action: :deep_linking_response, as: "#{context}_deep_linking_response"
    post "/associate/:token", to: "users/associate_accounts#connect", constraints: { token: /\h{32}/ }
    post "/chat_channel_memberships/add_membership", to: "chat_channel_memberships#add_membership"
    post "/chat_channel_memberships/create_membership_request", to: "chat_channel_memberships#create_membership_request"
    post "/chat_channel_memberships/remove_membership", to: "chat_channel_memberships#remove_membership"
    post "/chat_channels/:id/moderate", to: "chat_channels#moderate"
    post "/chat_channels/:id/open", to: "chat_channels#open"
    post "/chat_channels/block_chat", to: "chat_channels#block_chat"
    post "/chat_channels/create_chat", to: "chat_channels#create_chat"
    post "/create_channel", to: "chat_channels#create_channel"
    post "/create_trial_marketplace" => "marketplaces#create"
    post "/direct_uploads" => "active_storage/direct_uploads#create", as: :rails_direct_uploads
    post "/do-not-disturb" => "do_not_disturb#create"
    post "/fallback_activity_recorder", to: "ga_events#create"
    post "/join_chat_channel", to: "chat_channel_memberships#join_channel"
    post "/joining_invitation_response", to: "chat_channel_memberships#joining_invitation_response"
    post "/listings/:listing_id/booked"    => "preauthorize_transactions#initiated", as: :booked # POST request, no redirect
    post "/listings/:listing_id/create_contact" => "free_transactions#create_contact", :as => :create_contact
    post "/listings/:listing_id/initiated" => "preauthorize_transactions#initiated", :as => :initiated_order
    post "/mailchimp/:secret/unsubscribe", to: "mailchimp_unsubscribes#create", as: :mailchimp_unsubscribe
    post "/notification_subscriptions/:notifiable_type/:notifiable_id", to: "notification_subscriptions#upsert"
    post "/push_notifications/subscribe" => "push_notification#subscribe"
    post "/push_notifications/unsubscribe" => "push_notification#unsubscribe"
    post "/pusher/auth", to: "pusher#auth"
    post "/safe-mode" => "safe_mode#enter", as: "safe_mode_enter"
    post "/user-api-key" => "user_api_keys#create"
    post "/user-api-key/otp" => "user_api_keys#create_otp"
    post "/user-api-key/revoke" => "user_api_keys#revoke"
    post "/user-api-key/undo-revoke" => "user_api_keys#undo_revoke"
    post "articles/preview", to: "articles#preview"
    post "badges/award_badges", to: "badges#award_badges"
    post "caliper/:token", controller: :lti_api, action: :caliper_service, as: "lti_caliper"
    post "categories/reorder" => "categories#reorder"
    post "comments/preview", to: "comments#preview"
    post "draft" => "draft#update"
    post "email/unsubscribe/:key" => "email#perform_unsubscribe", as: "email_perform_unsubscribe"
    post "enable_query_stats", to: "home#enable_query_stats"
    post "explain", to: "home#explain"
    post "finish-installation/register" => "finish_installation#register"
    post "invites/destroy-all-expired" => "invites#destroy_all_expired"
    post "invites/reinvite" => "invites#resend_invite"
    post "invites/reinvite-all" => "invites#resend_all_invites"
    post "invites/upload_csv" => "invites#upload_csv"
    post "kill", to: "home#kill"
    post "kill_all", to: "home#kill_all"
    post "kill_long_running_queries", to: "home#kill_long_running_queries"
    post "login" => "static#enter"
    post "logout_service/:token", controller: :lti_api, action: :logout_service, as: "lti_logout_service"
    post "organizations/generate_new_secret", to: "organizations#generate_new_secret"
    post "repositories/:rid/resources/:id/pdf" => 'pdf#resource'
    post "reset_query_stats", to: "home#reset_query_stats"
    post "search/click" => "search#click"
    post "session/email-login/:token" => "session#email_login"
    post "session/otp/:token" => "session#one_time_password", constraints: { token: /[0-9a-f]+/ }
    post "t/:topic_id/change-owner" => "topics#change_post_owners", constraints: { topic_id: /\d+/ }
    post "t/:topic_id/invite" => "topics#invite", constraints: { topic_id: /\d+/ }
    post "t/:topic_id/invite-group" => "topics#invite_group", constraints: { topic_id: /\d+/ }
    post "t/:topic_id/merge-topic" => "topics#merge_topic", constraints: { topic_id: /\d+/ }
    post "t/:topic_id/move-posts" => "topics#move_posts", constraints: { topic_id: /\d+/ }
    post "t/:topic_id/notifications" => "topics#set_notifications" , constraints: { topic_id: /\d+/ }
    post "t/:topic_id/timer" => "topics#timer", constraints: { topic_id: /\d+/ }
    post "t/:topic_id/timings" => "topics#timings", constraints: { topic_id: /\d+/ }
    post "tools/:tool_id/ext_grade_passback", controller: :lti_api, action: :legacy_grade_passback, as: "blti_legacy_grade_passback_api"
    post "tools/:tool_id/grade_passback", controller: :lti_api, action: :grade_passback, as: "lti_grade_passback_api"
    post "topics/timings"
    post "turnitin/outcomes_placement/:tool_id", controller: :lti_api, action: :turnitin_outcomes_placement, as: "lti_turnitin_outcomes_placement"
    post "uploads" => "uploads#create"
    post "uploads/lookup-metadata" => "uploads#metadata"
    post "uploads/lookup-urls" => "uploads#lookup_urls"
    post "user_avatar/:username/refresh_gravatar" => "user_avatars#refresh_gravatar", constraints: { username: RouteFormat.username }
    post "users/add_org_admin", to: "users#add_org_admin"
    post "users/api_secrets", to: "api_secrets#create", as: :users_api_secrets
    post "users/join_org", to: "users#join_org"
    post "users/leave_org/:organization_id", to: "users#leave_org", as: :users_leave_org
    post "users/remove_from_org", to: "users#remove_from_org"
    post "users/remove_org_admin", to: "users#remove_org_admin"
    post "users/request_destroy", to: "users#request_destroy", as: :user_request_destroy
    post "users/update_password", to: "users#update_password", as: :user_update_password
    post "webhooks/aws" => "webhooks#aws"
    post "webhooks/mailgun"  => "webhooks#mailgun"
    post "webhooks/mailjet"  => "webhooks#mailjet"
    post "webhooks/mandrill" => "webhooks#mandrill"
    post "webhooks/postmark" => "webhooks#postmark"
    post "webhooks/sendgrid" => "webhooks#sendgrid"
    post "webhooks/sparkpost" => "webhooks#sparkpost"
    post "xapi/:token", controller: :lti_api, action: :xapi_service, as: "lti_xapi"
    post '/', to: 'rooms#join'
    post '/:person_id/settings/payments' => 'payment_settings#create', :as => :create_person_payment_settings
    post '/:user_uid/change_password', to: 'users#update_password', as: :update_password
    post '/:user_uid/edit', to: 'users#update', as: :update_user
    post '/actions/approve' => 'actions#approve'
    post '/actions/disapprove' => 'actions#disapprove'
    post '/approve/:user_uid', to: 'admins#approve', as: :admin_approve
    post '/ban/:user_uid', to: 'admins#ban_user', as: :admin_ban
    post '/canvadoc_session', controller: 'canvadoc_sessions', action: 'create'
    post '/cite', to: 'cite#show'
    post '/clear_auth', to: 'admins#clear_auth', as: :admin_clear_auth
    post '/clear_cache', to: 'admins#clear_cache', as: :admin_clear_cache
    post '/coloring', to: 'admins#coloring', as: :admin_coloring
    post '/community_memberships/give_consent'    => 'community_memberships#give_consent', as: :give_consent
    post '/courses/:course_id/assignments/:assignment_id/submissions/:user_id/annotation_notification', action: :annotation_notification, controller: :submission_comments_api
    post '/ensure_cart', to: 'store#ensure_cart'
    post '/invite', to: 'admins#invite', as: :invite_user
    post '/log_level', to: 'admins#log_level', as: :admin_log_level
    post '/login' => 'user_sessions#create', :as => :create_new_session
    post '/login', to: 'rooms#login', as: :login_room
    post '/login', to: 'sessions#create', as: :create_session
    post '/logout', to: 'sessions#destroy'
    post '/merge/:user_uid', to: 'admins#merge_user', as: :merge_user
    post '/password/recover' => 'user_passwords#create', :as => :reset_password
    post '/preupload_presentation', to: 'rooms#preupload_presentation'
    post '/registration_method', to: 'admins#registration_method', as: :admin_change_registration
    post '/remove_presentation', to: 'rooms#remove_presentation'
    post '/resend', to: 'account_activations#resend', as: :resend_email
    post '/role', to: 'admins#new_role', as: :admin_new_role
    post '/role/:role_id', to: 'admins#update_role', as: :admin_update_role
    post '/session', to: 'session#create'
    post '/signup' => 'user_registrations#create', :as => :registration
    post '/start', to: 'rooms#start', as: :start_room
    post '/unban/:user_uid', to: 'admins#unban_user', as: :admin_unban
    post '/undelete', to: 'admins#undelete', as: :admin_undelete
    post '/update_room_configuration', to: 'admins#update_room_configuration', as: :admin_update_room_configuration
    post '/update_settings', to: 'admins#update_settings', as: :admin_update_settings
    post '/update_settings', to: 'rooms#update_settings'
    post '/update_shared_access', to: 'rooms#shared_access', as: :room_shared_access
    post ':eportfolio_category_id/reorder_entries' => 'eportfolios#reorder_entries', as: :reorder_entries
    post 'account_users' => 'accounts#add_account_user', as: :add_account_user
    post 'add_attachment', :on => :member
    post 'announcements/external_feeds' => 'announcements#create_external_feed'
    post 'assignments/:assignment_tc_id/submissions/:submission_tc_id/originality_report',
    post 'assignments/:lti_assignment_id/update', action: :update, as: :assignment_update
    post 'assignments/configure', action: :configure, as: :assignment_configuration
    post 'assignments/publish/quiz'   => 'assignments#publish_quizzes'
    post 'assignments/unpublish/quiz' => 'assignments#unpublish_quizzes'
    post 'collapse_all_modules' => 'context_modules#toggle_collapse_all'
    post 'collections/:child_id/remove_parent/:parent_id', controller: 'nest_collections', action: 'remove_relationship_above', as: 'remove_parent_relationship_above'
    post 'collections/:child_id/within', controller: 'nest_collections', action: 'create_relationship_within', as: 'create_nest_collection_within'
    post 'collections/:id', controller: 'collection_members', action: :update_members
    post 'collections/:parent_id/remove_child/:child_id', controller: 'nest_collections', action: 'remove_relationship_under', as: 'remove_child_relationship_under'
    post 'collections/:parent_id/under', controller: 'nest_collections', action: 'create_relationship_under', as: 'create_nest_collection_under'
    post 'comment_session' => 'services_api#start_kaltura_session', as: :dashboard_comment_session
    post 'copy' => 'courses#copy_course', as: :copy_course
    post 'delete_authorization'
    post 'details/sis_publish' => 'courses#publish_to_sis', as: :publish_to_sis
    post 'files/:id/create_success', controller: :files, action: :api_create_success, as: 'files_create_success'
    post 'fill_request' => 'requests#make_request'
    post 'gems'
    post 'invite_users' => 'users#invite_users', :as => :invite_users
    post 'issues/new', :to => 'issues#new'
    post 'limit_user_grading/:id' => 'courses#limit_user', as: :limit_user_grading
    post 'lti/tool_proxy_registration', controller: 'lti/message', action: 'registration', as: :tool_proxy_registration
    post 'move_enrollment/:id' => 'courses#move_enrollment', as: :move_enrollment
    post 'oauth_params'
    post 'quizzes/new' => 'quizzes/quizzes#new' # use POST instead of GET (not idempotent)
    post 'quizzes/publish'   => 'quizzes/quizzes#publish'
    post 'quizzes/unpublish' => 'quizzes/quizzes#unpublish'
    post 'register', action: :register, as: :registration
    post 'reset' => 'courses#reset_content'
    post 'save_assignment_order' => 'gradebooks#save_assignment_order', as: :save_assignment_order
    post 'scorecard/score_paste' => :score_paste
    post 'scorecard/score_upload' => :score_upload
    post 'scorecard/score_url' => :score_url
    post 'self_unenrollment/:self_unenrollment' => 'courses#self_unenrollment', as: :self_unenrollment
    post 'smart/cfg' => :update_cfg
    post 'start_offline_web_export' => 'courses#start_offline_web_export'
    post 'status_by', :on => :member
    post 'student_view(/:redirect_to_referer)' => 'courses#student_view', as: :student_view
    post 'submission/index', action: :index
    post 'testdata' => :load_data
    post 'toggle_disable_inbox' => 'profile#toggle_disable_inbox'
    post 'unconclude_user/:id' => 'courses#unconclude_user', as: :unconclude_user_enrollment
    post 'undelete/:asset_string' => 'context#undelete_item', as: :undelete_item
    post 'user_services' => 'users#create_user_service', as: :profile_create_user_service
    post 'users' => 'users#create', as: :add_user
    post :add_message
    post :add_recipients
    post :add_user
    post :audio_panel_size
    post :enroll_users
    post :enrollment_invitation
    post :link_enrollment
    post :media_picker, to: 'media_picker#select'
    post :merge
    post :now_playing
    post :populate, on: :collection
    post :re_send_invitations
    post :remove_messages
    post :reorder_categories
    post :submission
    post :unconclude
    post :update_credit_card
    post :update_nav
    post :update_plan
    resources :post_action_users
    resources :post_actions do
    resources :post_permalinks, path: 'posts'
    resources :post_readers, only: %i[index]
    resources :posts do
    resources :posts, only: %i[] do
    resources :private_post_permalinks, path: 'private-posts'
    resources :private_posts, only: %i[] do
    scope(controller: :disable_post_to_sis_api) do
   root :to => 'posts#index'
  #       post 'toggle'
  #     post 'toggle'
  #   resources :posts, concerns: :toggleable
  adv_search_post = %w(
  button_post = %w(
  compare_post = %w(
  dialog_runner_post = %w(
  drift_post = %w(
  exp_post = %w(
  get "work/post" => "work#delayed_post"
  match "/posts/download_pdf(.:format)" => "posts#all_posts", :method => :get, :as=>:all_posts
  match "pages",          to: "pages#create",          via: :post
  match "pages_internal", to: "pages_internal#create", via: :post
  match '/auth/:provider/callback', to: 'sessions#omniauth', via: [:get, :post], as: :omniauth_session
  match '/imports/:id/mapping', :to => 'imports#mapping', :via => [:get, :post], :as => 'import_mapping'
  match '/imports/:id/run', :to => 'imports#run', :via => [:get, :post], :as => 'import_run'
  match '/imports/:id/settings', :to => 'imports#settings', :via => [:get, :post], :as => 'import_settings'
  match '/issues/:id/quoted', :to => 'journals#new', :id => /\d+/, :via => :post, :as => 'quoted_issue'
  match '/issues/context_menu', :to => 'context_menus#issues', :as => 'issues_context_menu', :via => [:get, :post]
  match '/issues/preview', :to => 'previews#issue', :as => 'preview_issue', :via => [:get, :post, :put, :patch]
  match '/news/:id/comments', :to => 'comments#create', :via => :post
  match '/news/preview', :controller => 'previews', :action => 'news', :as => 'preview_news', :via => [:get, :post, :put, :patch]
  match '/preview/text', :to => 'previews#text', :as => 'preview_text', :via => [:get, :post, :put, :patch]
  match '/terms', to: 'users#terms', via: [:get, :post]
  match '/time_entries/context_menu', :to => 'context_menus#time_entries', :as => :time_entries_context_menu, :via => [:get, :post]
  match 'access_code' => 'developer_portal/access_codes#show', :as => :access_code, :via => [:post, :get]
  match 'account/lost_password', :to => 'account#lost_password', :via => [:get, :post], :as => 'lost_password'
  match 'account/register', :to => 'account#register', :via => [:get, :post], :as => 'register'
  match 'account/twofa', :to => 'account#twofa', :via => [:get, :post]
  match 'account/twofa/resend', :to => 'account#twofa_resend', :via => :post
  match 'batch_edits/clear' => 'batch_edits#clear', as: :batch_edits_clear, via: [:get, :post]
  match 'boards/:board_id/topics/new', :to => 'messages#new', :via => [:get, :post], :as => 'new_board_message'
  match 'boards/:board_id/topics/quote/:id', :to => 'messages#quote', :via => [:get, :post]
  match 'forgot_password' => 'pseudonyms#forgot_password', as: :forgot_password, via: [:get, :post]
  match 'login', :to => 'account#login', :as => 'signin', :via => [:get, :post]
  match 'logout', :to => 'account#logout', :as => 'signout', :via => [:get, :post]
  match 'my/account/destroy', :controller => 'my', :action => 'destroy', :via => [:get, :post]
  match 'my/add_block', :controller => 'my', :action => 'add_block', :via => :post
  match 'my/order_blocks', :controller => 'my', :action => 'order_blocks', :via => :post
  match 'my/password', :controller => 'my', :action => 'password', :via => [:get, :post]
  match 'my/remove_block', :controller => 'my', :action => 'remove_block', :via => :post
  match 'my/twofa/:scheme/activate', :controller => 'twofa', :action => 'activate', :via => [:get, :post]
  match 'my/twofa/:scheme/activate/init', :controller => 'twofa', :action => 'activate_init', :via => :post
  match 'my/twofa/:scheme/deactivate', :controller => 'twofa', :action => 'deactivate', :via => [:get, :post]
  match 'my/twofa/:scheme/deactivate/init', :controller => 'twofa', :action => 'deactivate_init', :via => :post
  match 'my/twofa/activate/init', :controller => 'twofa', :action => 'activate_init', :via => :post
  match 'my/twofa/backup_codes/create', :controller => 'twofa_backup_codes', :action => 'create', :via => [:get, :post]
  match 'my/twofa/backup_codes/init', :controller => 'twofa_backup_codes', :action => 'init', :via => :post
  match 'projects/:id/wiki/destroy', :to => 'wikis#destroy', :via => [:get, :post]
  match 'register/:nonce' => 'communication_channels#confirm', as: :registration_confirmation, via: [:get, :post]
  match 'settings/edit', :controller => 'settings', :action => 'edit', :via => [:get, :post]
  match 'settings/plugin/:id', :controller => 'settings', :action => 'plugin', :via => [:get, :post], :as => 'plugin_settings'
  match 'setup', :to => 'settings#setup', :via => [:get, :post]
  match 'sys/fetch_changesets', :to => 'sys#fetch_changesets', :via => [:get, :post]
  match 'sys/projects/:id/repository', :to => 'sys#create_project_repository', :via => :post
  match 'uploads', :to => 'attachments#upload', :via => :post
  match 'users/:user_id/twofa/deactivate', :controller => 'twofa', :action => 'admin_deactivate', :via => :post
  match 'users/random' => 'users/random#create', :controller => "users/random", :as => "users_random", :via => [:get, :post]
  match 'workflows/copy', :controller => 'workflows', :action => 'copy', :via => [:get, :post]
  match 'workflows/edit', :controller => 'workflows', :action => 'edit', :via => [:get, :post]
  match 'workflows/permissions', :controller => 'workflows', :action => 'permissions', :via => [:get, :post]
  ownership_post = %w(
  perf_post = %w(
  policy_post = %w(
  post    'services'        => 'legacy_services#provision',   :as => :legacy_service_provision
  post    'services/:label/tokens' => 'default#not_implemented'
  post   '/artists'           => 'artists#create'
  post   '/songs'             => 'songs#create'
  post   'apps'                      => 'apps#create',          :as => :app_create
  post   'projects/:id/repository/:repository_id/revisions/:rev/issues', :to => 'repositories#add_related_issue'
  post   'resources'                 => 'resource_pool#match',  :as => :resource_match
  post   'services/v1/binding_tokens'                => 'binding_tokens#create',   :as => :binding_token_create
  post   'services/v1/bindings'                      => 'services#bind',           :as => :service_bind
  post   'services/v1/bindings/external'             => 'services#bind_external',  :as => :service_bind_external
  post   'services/v1/configurations'                => 'services#provision',      :as => :service_provision
  post   'services/v1/configurations/:id/serialized/url/snapshots/:sid'     => 'services#create_serialized_url',       :as => :service_create_serialized_url,    :id   => /[^\/]+/, :sid => /[^\/]+/
  post   'services/v1/configurations/:id/snapshots'          => 'services#create_snapshot',      :as => :service_create_snapshot,       :id   => /[^\/]+/
  post   'services/v1/configurations/:id/snapshots/:sid/name'=> 'services#update_snapshot_name', :as => :service_update_snapshot_name,  :id   => /[^\/]+/, :sid => /[^\/]+/
  post   'services/v1/offerings'                     => 'services#create',         :as => :service_create
  post   'services/v1/offerings/:label(/:provider)/handles/:id'  => 'services#update_handle',  :as => :service_update_handle,  :label => /[^\/]+/, :provider => /[^\/]+/
  post   'staging/droplet/:id/:upload_id' => 'staging#upload_droplet', :as => :upload_droplet
  post   'users'                     => 'users#create',         :as => :create_user
  post   'users/*email/tokens'       => 'user_tokens#create',   :as => :create_token
  post  '/imports', :to => 'imports#create', :as => 'imports'
  post "/", to: "votes#create"
  post "/api/graphql", to: "graphql#execute"
  post "/chat_channels/:id/moderate" => "chat_channels#moderate"
  post "/chat_channels/:id/open" => "chat_channels#open"
  post "/chat_channels/block_chat" => "chat_channels#block_chat"
  post "/chat_channels/create_chat" => "chat_channels#create_chat"
  post "/external_auth_observers/redirect_login" => 'login/external_auth_observers#redirect_login', as: :external_auth_validation
  post "/fallback_activity_recorder" => "ga_events#create"
  post "/feedback" => "feedback#create"
  post "/graphql", to: "graphql#execute"
  post "/graphql", to: "graphql#query"
  post "/logout" => "auth#logout"
  post "/newsletters" => "newsletters#create"
  post "/notification_subscriptions/:notifiable_type/:notifiable_id" => "notification_subscriptions#upsert"
  post "/profile" => "profile#update"
  post "/pusher/auth" => "pusher#auth"
  post "/quick_signup" => 'home#quick_signup'
  post "/starred/export", to: "starred_entries#export"
  post "apple_push_notifications/:version/devices/:device_token/registrations/:website_push_id", as: :apple_push_notifications_update, to: "apple_push_notifications#update", website_push_id: /.*/
  post "apple_push_notifications/:version/log", as: :apple_push_notifications_log, to: "apple_push_notifications#log"
  post "apple_push_notifications/:version/pushPackages/:website_push_id", as: :apple_push_notifications_package, to: "apple_push_notifications#create", website_push_id: /.*/
  post "articles/preview" => "articles#preview"
  post "authenticate_from_island_is", to: "votes#authenticate_from_island_is"
  post "cart/checkout" => "cart#checkout", :as => :checkout
  post "cart/remove/:id" => "cart#remove", :as => :remove_from_cart
  post "comments/preview" => "comments#preview"
  post "game/auth"
  post "game/endturn"
  post "game/newround"
  post "game/start"
  post "home/create_action"
  post "home/join_action"
  post "organizations/generate_new_secret" => "organizations#generate_new_secret"
  post "settings", to: "settings#update", :as => "update_settings"
  post "settings/sticky/:feed_id", as: :settings_sticky, to: "settings#sticky"
  post "settings/subscription_view_mode/:feed_id", as: :settings_subscription_view_mode, to: "settings#subscription_view_mode"
  post "users/add_org_admin" => "users#add_org_admin"
  post "users/api_secrets" => "api_secrets#create", :as => :users_api_secrets
  post "users/join_org" => "users#join_org"
  post "users/leave_org/:organization_id" => "users#leave_org", :as => :users_leave_org
  post "users/remove_from_org" => "users#remove_from_org"
  post "users/remove_org_admin" => "users#remove_org_admin"
  post "users/request_destroy", to: "users#request_destroy", as: :user_request_destroy
  post "users/update_language_settings" => "users#update_language_settings"
  post "users/update_twitch_username" => "users#update_twitch_username"
  post "votes/authenticate_from_island_is"
  post "votes/insecure_email_login"
  post "votes/post_vote"
  post "web_sub/:id/:signature", as: :web_sub_publish, to: "web_sub#publish"
  post '/api/stats/avg_rentals_per_user' => 'stats#avg_rentals_per_user'
  post '/api/stats/customer_paid_vs_free' => 'stats#customer_paid_vs_free'
  post '/api/stats/movies_per_country' => 'stats#movies_per_country'
  post '/auth/ldap', to: 'sessions#ldap', as: :ldap_callback
  post '/bounces' => 'amazon_bounces#notification'
  post '/converse-api/export-matrix'   => 'converse_api#export_matrix', default: { format: :csv }
  post '/converse-api/generate-matrix' => 'converse_api#generate_matrix'
  post '/fakelogin', to: 'auth#fake_create'
  post '/graphql', to: 'graphql#execute'
  post '/hooks/github', to: 'hooks#create'
  post '/import', to: 'users#import'
  post '/issues/new', :to => 'issues#new'
  post '/json-converters/download'     => 'json_converters#download'
  post '/locale/set', to: 'locale#set', as: :select_locale
  post '/pokemons', to: 'pokemons#create'
  post '/report', to: 'reports#create'
  post '/room/join', to: 'rooms#join_specific_room', as: :join_room
  post '/signin', to: "sessions#create"
  post '/signup', to: 'users#create', as: :create_user
  post '/songs/:id', to: 'songs#create'
  post '/suggest' => 'api#suggest'
  post '/time_entries/bulk_edit', :to => 'timelog#bulk_edit'
  post '/time_entries/new', :to => 'timelog#new'
  post '/uploads', to: 'uploads#create'
  post '/users/:id', to: "users#update"
  post '/webhooks/paypal_ipn' => 'paypal_ipn#ipn_hook', as: :paypal_ipn_hook
  post '/webhooks/plans' => 'plans#create'
  post 'admin/default_configuration', :to => 'admin#default_configuration'
  post 'admin/test_email', :to => 'admin#test_email', :as => 'test_email'
  post 'auth/login', to: 'authentication#authenticate'
  post 'availability/fake/' => 'availability#fake_many'
  post 'availability/forward/' => 'availability#forward_many'
  post 'bestbets/:id/delete' => 'best_bets#delete', as: :best_bets_delete
  post 'bestbets/:id/save' => 'best_bets#save', as: :best_bets_save
  post 'boards/:board_id/topics/:id/destroy', :to => 'messages#destroy'
  post 'boards/:board_id/topics/:id/edit', :to => 'messages#edit'
  post 'boards/:board_id/topics/:id/replies', :to => 'messages#reply'
  post 'boards/:board_id/topics/preview', :to => 'messages#preview', :as => 'preview_board_message'
  post 'catalog/sms' => 'catalog#sms'
  post 'confirmations/:user_id/re_send(/:id)' => 'communication_channels#re_send_confirmation', as: :re_send_confirmation, id: nil
  post 'contact' => 'contact_form#create', as: :contact_form_index
  post 'conversations/mark_all_as_read' => 'conversations#mark_all_as_read'
  post 'dashboard/:id/delete' => 'dashboard#delete', as: :dashboard_delete
  post 'dashboard/:id/edit' => 'dashboard#save', as: :dashboard_save
  post 'files/pending' => 'files#create_pending', as: :file_create_pending
  post 'files_api' => 'files#api_create', as: :api_v1_files_create
  post 'groups/:id/users', :to => 'groups#add_users', :id => /\d+/, :as => 'group_users'
  post 'images/users/:user_id/report' => 'users#report_avatar_image', as: :report_avatar_image
  post 'issues/:object_id/watchers', :to => 'watchers#create', :object_type => 'issue'
  post 'login/canvas' => 'login/canvas#create'
  post 'login/cas' => 'login/cas#destroy', as: :cas_logout
  post 'login/cas/:id' => 'login/cas#destroy'
  post 'login/ldap' => 'login/ldap#create'
  post 'login/oauth2/accept' => 'oauth2_provider#accept', as: :oauth2_auth_accept
  post 'login/oauth2/callback' => 'login/oauth2#create'
  post 'login/oauth2/token' => 'oauth2_provider#token', as: :oauth2_token
  post 'login/otp' => 'login/otp#create'
  post 'login/otp/sms' => 'login/otp#send_via_sms', as: :send_otp_via_sms
  post 'login/saml' => 'login/saml#create'
  post 'login/saml/logout' => 'login/saml#destroy'
  post 'mail_handler', :to => 'mail_handler#index'
  post 'media_objects' => 'context#create_media_object', as: :create_media_object
  post 'media_objects/:media_object_id/media_tracks' => 'media_tracks#create', as: :create_media_tracks
  post 'my/api_key', :to => 'my#reset_api_key'
  post 'my/page', :to => 'my#update_page'
  post 'my/rss_key', :to => 'my#reset_rss_key', :as => 'my_rss_key'
  post 'object_snippet' => 'context#object_snippet'
  post 'patron/checkouts' => 'patron#checkouts'
  post 'projects/:id/repository/:repository_id/fetch_changesets', :to => 'repositories#fetch_changesets'
  post 'pseudonyms/:pseudonym_id/change_password/:nonce' => 'pseudonyms#change_password', as: :change_password
  post 'saml_consume' => 'login/saml#create'
  post 'selection_test' => 'external_content#selection_test'
  post 'signup', to: 'users#create'
  post 'single_use_link/generate_download/:id' => 'single_use_links#create_download', as: :generate_download_single_use_link
  post 'single_use_link/generate_show/:id' => 'single_use_links#create_show', as: :generate_show_single_use_link
  post 'users/:user_id/depositors' => 'depositors#create', as: 'user_depositors'
  post 'users/toggle_hide_dashcard_color_overlays' => 'users#toggle_hide_dashcard_color_overlays'
  post 'watchers', :to => 'watchers#create'
  post 'watchers/append', :to => 'watchers#append'
  post 'watchers/watch', :to => 'watchers#watch', :as => 'watch'
  pre_prov_post = %w(
  resources :microposts
  resources :microposts, only: [] do
  resources :posts
  resources :posts do
  root to: "home#index", via: [:get, :post]
  save_post = %w(
  snap_post = %w(
  x_post = %w(
#      post 'edit', :on => :member
#      post 'new', :on => :member
